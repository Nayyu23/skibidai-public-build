{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Matrix4, Mesh, MeshBasicMaterial, EqualStencilFunc, IncrementStencilOp } from \"three\";\nvar _shadowMatrix = new Matrix4();\nvar ShadowMesh = /*#__PURE__*/function (_Mesh) {\n  _inherits(ShadowMesh, _Mesh);\n  var _super = _createSuper(ShadowMesh);\n  function ShadowMesh(mesh) {\n    var _this;\n    _classCallCheck(this, ShadowMesh);\n    var shadowMaterial = new MeshBasicMaterial({\n      color: 0,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false,\n      stencilWrite: true,\n      stencilFunc: EqualStencilFunc,\n      stencilRef: 0,\n      stencilZPass: IncrementStencilOp\n    });\n    _this = _super.call(this, mesh.geometry, shadowMaterial);\n    _this.isShadowMesh = true;\n    _this.meshMatrix = mesh.matrixWorld;\n    _this.frustumCulled = false;\n    _this.matrixAutoUpdate = false;\n    return _this;\n  }\n  _createClass(ShadowMesh, [{\n    key: \"update\",\n    value: function update(plane, lightPosition4D) {\n      var dot = plane.normal.x * lightPosition4D.x + plane.normal.y * lightPosition4D.y + plane.normal.z * lightPosition4D.z + -plane.constant * lightPosition4D.w;\n      var sme = _shadowMatrix.elements;\n      sme[0] = dot - lightPosition4D.x * plane.normal.x;\n      sme[4] = -lightPosition4D.x * plane.normal.y;\n      sme[8] = -lightPosition4D.x * plane.normal.z;\n      sme[12] = -lightPosition4D.x * -plane.constant;\n      sme[1] = -lightPosition4D.y * plane.normal.x;\n      sme[5] = dot - lightPosition4D.y * plane.normal.y;\n      sme[9] = -lightPosition4D.y * plane.normal.z;\n      sme[13] = -lightPosition4D.y * -plane.constant;\n      sme[2] = -lightPosition4D.z * plane.normal.x;\n      sme[6] = -lightPosition4D.z * plane.normal.y;\n      sme[10] = dot - lightPosition4D.z * plane.normal.z;\n      sme[14] = -lightPosition4D.z * -plane.constant;\n      sme[3] = -lightPosition4D.w * plane.normal.x;\n      sme[7] = -lightPosition4D.w * plane.normal.y;\n      sme[11] = -lightPosition4D.w * plane.normal.z;\n      sme[15] = dot - lightPosition4D.w * -plane.constant;\n      this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix);\n    }\n  }]);\n  return ShadowMesh;\n}(Mesh);\nexport { ShadowMesh };","map":{"version":3,"names":["_shadowMatrix","Matrix4","ShadowMesh","_Mesh","_inherits","_super","_createSuper","mesh","_this","_classCallCheck","shadowMaterial","MeshBasicMaterial","color","transparent","opacity","depthWrite","stencilWrite","stencilFunc","EqualStencilFunc","stencilRef","stencilZPass","IncrementStencilOp","call","geometry","isShadowMesh","meshMatrix","matrixWorld","frustumCulled","matrixAutoUpdate","_createClass","key","value","update","plane","lightPosition4D","dot","normal","x","y","z","constant","w","sme","elements","matrix","multiplyMatrices","Mesh"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\objects\\ShadowMesh.js"],"sourcesContent":["import { Matrix4, Mesh, MeshBasicMaterial, EqualStencilFunc, IncrementStencilOp } from 'three'\n\n/**\n * A shadow Mesh that follows a shadow-casting Mesh in the scene, but is confined to a single plane.\n */\n\nconst _shadowMatrix = new Matrix4()\n\nclass ShadowMesh extends Mesh {\n  constructor(mesh) {\n    const shadowMaterial = new MeshBasicMaterial({\n      color: 0x000000,\n      transparent: true,\n      opacity: 0.6,\n      depthWrite: false,\n      stencilWrite: true,\n      stencilFunc: EqualStencilFunc,\n      stencilRef: 0,\n      stencilZPass: IncrementStencilOp,\n    })\n\n    super(mesh.geometry, shadowMaterial)\n\n    this.isShadowMesh = true\n\n    this.meshMatrix = mesh.matrixWorld\n\n    this.frustumCulled = false\n    this.matrixAutoUpdate = false\n  }\n\n  update(plane, lightPosition4D) {\n    // based on https://www.opengl.org/archives/resources/features/StencilTalk/tsld021.htm\n\n    const dot =\n      plane.normal.x * lightPosition4D.x +\n      plane.normal.y * lightPosition4D.y +\n      plane.normal.z * lightPosition4D.z +\n      -plane.constant * lightPosition4D.w\n\n    const sme = _shadowMatrix.elements\n\n    sme[0] = dot - lightPosition4D.x * plane.normal.x\n    sme[4] = -lightPosition4D.x * plane.normal.y\n    sme[8] = -lightPosition4D.x * plane.normal.z\n    sme[12] = -lightPosition4D.x * -plane.constant\n\n    sme[1] = -lightPosition4D.y * plane.normal.x\n    sme[5] = dot - lightPosition4D.y * plane.normal.y\n    sme[9] = -lightPosition4D.y * plane.normal.z\n    sme[13] = -lightPosition4D.y * -plane.constant\n\n    sme[2] = -lightPosition4D.z * plane.normal.x\n    sme[6] = -lightPosition4D.z * plane.normal.y\n    sme[10] = dot - lightPosition4D.z * plane.normal.z\n    sme[14] = -lightPosition4D.z * -plane.constant\n\n    sme[3] = -lightPosition4D.w * plane.normal.x\n    sme[7] = -lightPosition4D.w * plane.normal.y\n    sme[11] = -lightPosition4D.w * plane.normal.z\n    sme[15] = dot - lightPosition4D.w * -plane.constant\n\n    this.matrix.multiplyMatrices(_shadowMatrix, this.meshMatrix)\n  }\n}\n\nexport { ShadowMesh }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}