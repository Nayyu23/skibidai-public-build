{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Mesh, AnimationMixer, AnimationClip } from \"three\";\nvar MorphAnimMesh = /*#__PURE__*/function (_Mesh) {\n  _inherits(MorphAnimMesh, _Mesh);\n  var _super = _createSuper(MorphAnimMesh);\n  function MorphAnimMesh(geometry, material) {\n    var _this;\n    _classCallCheck(this, MorphAnimMesh);\n    _this = _super.call(this, geometry, material);\n    _this.type = \"MorphAnimMesh\";\n    _this.mixer = new AnimationMixer(_assertThisInitialized(_this));\n    _this.activeAction = null;\n    return _this;\n  }\n  _createClass(MorphAnimMesh, [{\n    key: \"setDirectionForward\",\n    value: function setDirectionForward() {\n      this.mixer.timeScale = 1;\n    }\n  }, {\n    key: \"setDirectionBackward\",\n    value: function setDirectionBackward() {\n      this.mixer.timeScale = -1;\n    }\n  }, {\n    key: \"playAnimation\",\n    value: function playAnimation(label, fps) {\n      if (this.activeAction) {\n        this.activeAction.stop();\n        this.activeAction = null;\n      }\n      var clip = AnimationClip.findByName(this, label);\n      if (clip) {\n        var action = this.mixer.clipAction(clip);\n        action.timeScale = clip.tracks.length * fps / clip.duration;\n        this.activeAction = action.play();\n      } else {\n        throw new Error(\"THREE.MorphAnimMesh: animations[\" + label + \"] undefined in .playAnimation()\");\n      }\n    }\n  }, {\n    key: \"updateAnimation\",\n    value: function updateAnimation(delta) {\n      this.mixer.update(delta);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source, recursive) {\n      _get(_getPrototypeOf(MorphAnimMesh.prototype), \"copy\", this).call(this, source, recursive);\n      this.mixer = new AnimationMixer(this);\n      return this;\n    }\n  }]);\n  return MorphAnimMesh;\n}(Mesh);\nexport { MorphAnimMesh };","map":{"version":3,"names":["MorphAnimMesh","_Mesh","_inherits","_super","_createSuper","geometry","material","_this","_classCallCheck","call","type","mixer","AnimationMixer","_assertThisInitialized","activeAction","_createClass","key","value","setDirectionForward","timeScale","setDirectionBackward","playAnimation","label","fps","stop","clip","AnimationClip","findByName","action","clipAction","tracks","length","duration","play","Error","updateAnimation","delta","update","copy","source","recursive","_get","_getPrototypeOf","prototype","Mesh"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\misc\\MorphAnimMesh.js"],"sourcesContent":["import { AnimationClip, AnimationMixer, Mesh } from 'three'\n\nclass MorphAnimMesh extends Mesh {\n  constructor(geometry, material) {\n    super(geometry, material)\n\n    this.type = 'MorphAnimMesh'\n\n    this.mixer = new AnimationMixer(this)\n    this.activeAction = null\n  }\n\n  setDirectionForward() {\n    this.mixer.timeScale = 1.0\n  }\n\n  setDirectionBackward() {\n    this.mixer.timeScale = -1.0\n  }\n\n  playAnimation(label, fps) {\n    if (this.activeAction) {\n      this.activeAction.stop()\n      this.activeAction = null\n    }\n\n    const clip = AnimationClip.findByName(this, label)\n\n    if (clip) {\n      const action = this.mixer.clipAction(clip)\n      action.timeScale = (clip.tracks.length * fps) / clip.duration\n      this.activeAction = action.play()\n    } else {\n      throw new Error('THREE.MorphAnimMesh: animations[' + label + '] undefined in .playAnimation()')\n    }\n  }\n\n  updateAnimation(delta) {\n    this.mixer.update(delta)\n  }\n\n  copy(source, recursive) {\n    super.copy(source, recursive)\n\n    this.mixer = new AnimationMixer(this)\n\n    return this\n  }\n}\n\nexport { MorphAnimMesh }\n"],"mappings":";;;;;;;;IAEMA,aAAA,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EACJ,SAAAA,cAAYK,QAAA,EAAUC,QAAA,EAAU;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,aAAA;IAC9BO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAMJ,QAAA,EAAUC,QAAQ;IAExBC,KAAA,CAAKG,IAAA,GAAO;IAEZH,KAAA,CAAKI,KAAA,GAAQ,IAAIC,cAAA,CAAAC,sBAAA,CAAAN,KAAA,CAAmB;IACpCA,KAAA,CAAKO,YAAA,GAAe;IAAA,OAAAP,KAAA;EACrB;EAAAQ,YAAA,CAAAf,aAAA;IAAAgB,GAAA;IAAAC,KAAA,EAED,SAAAC,oBAAA,EAAsB;MACpB,KAAKP,KAAA,CAAMQ,SAAA,GAAY;IACxB;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAG,qBAAA,EAAuB;MACrB,KAAKT,KAAA,CAAMQ,SAAA,GAAY;IACxB;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAI,cAAcC,KAAA,EAAOC,GAAA,EAAK;MACxB,IAAI,KAAKT,YAAA,EAAc;QACrB,KAAKA,YAAA,CAAaU,IAAA,CAAM;QACxB,KAAKV,YAAA,GAAe;MACrB;MAED,IAAMW,IAAA,GAAOC,aAAA,CAAcC,UAAA,CAAW,MAAML,KAAK;MAEjD,IAAIG,IAAA,EAAM;QACR,IAAMG,MAAA,GAAS,KAAKjB,KAAA,CAAMkB,UAAA,CAAWJ,IAAI;QACzCG,MAAA,CAAOT,SAAA,GAAaM,IAAA,CAAKK,MAAA,CAAOC,MAAA,GAASR,GAAA,GAAOE,IAAA,CAAKO,QAAA;QACrD,KAAKlB,YAAA,GAAec,MAAA,CAAOK,IAAA,CAAM;MACvC,OAAW;QACL,MAAM,IAAIC,KAAA,CAAM,qCAAqCZ,KAAA,GAAQ,iCAAiC;MAC/F;IACF;EAAA;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAAkB,gBAAgBC,KAAA,EAAO;MACrB,KAAKzB,KAAA,CAAM0B,MAAA,CAAOD,KAAK;IACxB;EAAA;IAAApB,GAAA;IAAAC,KAAA,EAED,SAAAqB,KAAKC,MAAA,EAAQC,SAAA,EAAW;MACtBC,IAAA,CAAAC,eAAA,CAAA1C,aAAA,CAAA2C,SAAA,iBAAAlC,IAAA,OAAW8B,MAAA,EAAQC,SAAS;MAE5B,KAAK7B,KAAA,GAAQ,IAAIC,cAAA,CAAe,IAAI;MAEpC,OAAO;IACR;EAAA;EAAA,OAAAZ,aAAA;AAAA,EA7CyB4C,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}