{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { UniformsUtils, ShaderMaterial } from \"three\";\nimport { DotScreenShader } from \"../shaders/DotScreenShader.js\";\nvar DotScreenPass = /*#__PURE__*/function (_Pass) {\n  _inherits(DotScreenPass, _Pass);\n  var _super = _createSuper(DotScreenPass);\n  function DotScreenPass(center, angle, scale) {\n    var _this;\n    _classCallCheck(this, DotScreenPass);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"material\");\n    __publicField(_assertThisInitialized(_this), \"fsQuad\");\n    __publicField(_assertThisInitialized(_this), \"uniforms\");\n    if (DotScreenShader === void 0) console.error(\"THREE.DotScreenPass relies on THREE.DotScreenShader\");\n    var shader = DotScreenShader;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    if (center !== void 0) _this.uniforms[\"center\"].value.copy(center);\n    if (angle !== void 0) _this.uniforms[\"angle\"].value = angle;\n    if (scale !== void 0) _this.uniforms[\"scale\"].value = scale;\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n  _createClass(DotScreenPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\n      this.uniforms[\"tSize\"].value.set(readBuffer.width, readBuffer.height);\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n    }\n  }]);\n  return DotScreenPass;\n}(Pass);\nexport { DotScreenPass };","map":{"version":3,"names":["DotScreenPass","_Pass","_inherits","_super","_createSuper","center","angle","scale","_this","_classCallCheck","call","__publicField","_assertThisInitialized","DotScreenShader","console","error","shader","uniforms","UniformsUtils","clone","value","copy","material","ShaderMaterial","vertexShader","fragmentShader","fsQuad","FullScreenQuad","_createClass","key","render","renderer","writeBuffer","readBuffer","texture","set","width","height","renderToScreen","setRenderTarget","clear","Pass"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\postprocessing\\DotScreenPass.ts"],"sourcesContent":["import { Pass, FullScreenQuad } from './Pass'\nimport { IUniform, ShaderMaterial, UniformsUtils, Vector2, WebGLRenderer, WebGLRenderTarget } from 'three'\nimport { DotScreenShader } from '../shaders/DotScreenShader'\n\nclass DotScreenPass extends Pass {\n  public material: ShaderMaterial\n  public fsQuad: FullScreenQuad\n\n  public uniforms: Record<keyof typeof DotScreenShader['uniforms'], IUniform<any>>\n\n  constructor(center?: Vector2, angle?: number, scale?: number) {\n    super()\n    if (DotScreenShader === undefined) console.error('THREE.DotScreenPass relies on THREE.DotScreenShader')\n    const shader = DotScreenShader\n    this.uniforms = UniformsUtils.clone(shader.uniforms)\n    if (center !== undefined) this.uniforms['center'].value.copy(center)\n    if (angle !== undefined) this.uniforms['angle'].value = angle\n    if (scale !== undefined) this.uniforms['scale'].value = scale\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n    })\n    this.fsQuad = new FullScreenQuad(this.material)\n  }\n\n  public render(\n    renderer: WebGLRenderer,\n    writeBuffer: WebGLRenderTarget,\n    readBuffer: WebGLRenderTarget,\n    /*, deltaTime, maskActive */\n  ): void {\n    this.uniforms['tDiffuse'].value = readBuffer.texture\n    this.uniforms['tSize'].value.set(readBuffer.width, readBuffer.height)\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      this.fsQuad.render(renderer)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      this.fsQuad.render(renderer)\n    }\n  }\n}\n\nexport { DotScreenPass }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAIMA,aAAA,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EAMJ,SAAAA,cAAYK,MAAA,EAAkBC,KAAA,EAAgBC,KAAA,EAAgB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,aAAA;IACtDQ,KAAA,GAAAL,MAAA,CAAAO,IAAA;IANDC,aAAA,CAAAC,sBAAA,CAAAJ,KAAA;IACAG,aAAA,CAAAC,sBAAA,CAAAJ,KAAA;IAEAG,aAAA,CAAAC,sBAAA,CAAAJ,KAAA;IAIL,IAAIK,eAAA,KAAoB,QAAWC,OAAA,CAAQC,KAAA,CAAM,qDAAqD;IACtG,IAAMC,MAAA,GAASH,eAAA;IACfL,KAAA,CAAKS,QAAA,GAAWC,aAAA,CAAcC,KAAA,CAAMH,MAAA,CAAOC,QAAQ;IACnD,IAAIZ,MAAA,KAAW,QAAWG,KAAA,CAAKS,QAAA,CAAS,QAAQ,EAAEG,KAAA,CAAMC,IAAA,CAAKhB,MAAM;IACnE,IAAIC,KAAA,KAAU,QAAgBE,KAAA,CAAAS,QAAA,CAAS,OAAO,EAAEG,KAAA,GAAQd,KAAA;IACxD,IAAIC,KAAA,KAAU,QAAgBC,KAAA,CAAAS,QAAA,CAAS,OAAO,EAAEG,KAAA,GAAQb,KAAA;IACnDC,KAAA,CAAAc,QAAA,GAAW,IAAIC,cAAA,CAAe;MACjCN,QAAA,EAAUT,KAAA,CAAKS,QAAA;MACfO,YAAA,EAAcR,MAAA,CAAOQ,YAAA;MACrBC,cAAA,EAAgBT,MAAA,CAAOS;IAAA,CACxB;IACDjB,KAAA,CAAKkB,MAAA,GAAS,IAAIC,cAAA,CAAenB,KAAA,CAAKc,QAAQ;IAAA,OAAAd,KAAA;EAChD;EAAAoB,YAAA,CAAA5B,aAAA;IAAA6B,GAAA;IAAAT,KAAA,EAEO,SAAAU,OACLC,QAAA,EACAC,WAAA,EACAC,UAAA,EAEM;MACN,KAAKhB,QAAA,CAAS,UAAU,EAAEG,KAAA,GAAQa,UAAA,CAAWC,OAAA;MACxC,KAAAjB,QAAA,CAAS,OAAO,EAAEG,KAAA,CAAMe,GAAA,CAAIF,UAAA,CAAWG,KAAA,EAAOH,UAAA,CAAWI,MAAM;MAEpE,IAAI,KAAKC,cAAA,EAAgB;QACvBP,QAAA,CAASQ,eAAA,CAAgB,IAAI;QACxB,KAAAb,MAAA,CAAOI,MAAA,CAAOC,QAAQ;MAAA,OACtB;QACLA,QAAA,CAASQ,eAAA,CAAgBP,WAAW;QACpC,IAAI,KAAKQ,KAAA,EAAOT,QAAA,CAASS,KAAA,CAAM;QAC1B,KAAAd,MAAA,CAAOI,MAAA,CAAOC,QAAQ;MAC7B;IACF;EAAA;EAAA,OAAA/B,aAAA;AAAA,EAvC0ByC,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}