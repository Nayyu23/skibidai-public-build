{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"color\", \"segments\", \"scale\", \"zoom\", \"grayscale\", \"opacity\", \"radius\", \"texture\", \"toneMapped\", \"transparent\", \"side\"],\n  _excluded2 = [\"url\"],\n  _excluded3 = [\"url\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useTexture } from './Texture.js';\nimport { version } from '../helpers/constants.js';\n\n// {texture: THREE.Texture} XOR {url: string}\n\nvar ImageMaterialImpl = /* @__PURE__ */shaderMaterial({\n  color: /* @__PURE__ */new THREE.Color('white'),\n  scale: /* @__PURE__ */new THREE.Vector2(1, 1),\n  imageBounds: /* @__PURE__ */new THREE.Vector2(1, 1),\n  resolution: 1024,\n  map: null,\n  zoom: 1,\n  radius: 0,\n  grayscale: 0,\n  opacity: 1\n}, /* glsl */\"\\n  varying vec2 vUv;\\n  varying vec2 vPos;\\n  void main() {\\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\\n    vUv = uv;\\n    vPos = position.xy;\\n  }\\n\", /* glsl */\"\\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\\n  varying vec2 vUv;\\n  varying vec2 vPos;\\n  uniform vec2 scale;\\n  uniform vec2 imageBounds;\\n  uniform float resolution;\\n  uniform vec3 color;\\n  uniform sampler2D map;\\n  uniform float radius;\\n  uniform float zoom;\\n  uniform float grayscale;\\n  uniform float opacity;\\n  const vec3 luma = vec3(.299, 0.587, 0.114);\\n  vec4 toGrayscale(vec4 color, float intensity) {\\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\\n  }\\n  vec2 aspect(vec2 size) {\\n    return size / min(size.x, size.y);\\n  }\\n  \\n  const float PI = 3.14159265;\\n    \\n  // from https://iquilezles.org/articles/distfunctions\\n  float udRoundBox( vec2 p, vec2 b, float r ) {\\n    return length(max(abs(p)-b+r,0.0))-r;\\n  }\\n\\n  void main() {\\n    vec2 s = aspect(scale);\\n    vec2 i = aspect(imageBounds);\\n    float rs = s.x / s.y;\\n    float ri = i.x / i.y;\\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\\n    vec2 uv = vUv * s / new + offset;\\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\\n\\n    vec2 res = vec2(scale * resolution);\\n    vec2 halfRes = 0.5 * res;\\n    float b = udRoundBox(vUv.xy * res - halfRes, halfRes, resolution * radius);    \\n\\t  vec3 a = mix(vec3(1.0,0.0,0.0), vec3(0.0,0.0,0.0), smoothstep(0.0, 1.0, b));\\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity * a), grayscale);\\n    \\n    #include <tonemapping_fragment>\\n    #include <\".concat(version >= 154 ? 'colorspace_fragment' : 'encodings_fragment', \">\\n  }\\n\"));\nvar ImageBase = /* @__PURE__ */React.forwardRef(function (_ref, fref) {\n  var children = _ref.children,\n    color = _ref.color,\n    _ref$segments = _ref.segments,\n    segments = _ref$segments === void 0 ? 1 : _ref$segments,\n    _ref$scale = _ref.scale,\n    scale = _ref$scale === void 0 ? 1 : _ref$scale,\n    _ref$zoom = _ref.zoom,\n    zoom = _ref$zoom === void 0 ? 1 : _ref$zoom,\n    _ref$grayscale = _ref.grayscale,\n    grayscale = _ref$grayscale === void 0 ? 0 : _ref$grayscale,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$radius = _ref.radius,\n    radius = _ref$radius === void 0 ? 0 : _ref$radius,\n    texture = _ref.texture,\n    toneMapped = _ref.toneMapped,\n    transparent = _ref.transparent,\n    side = _ref.side,\n    props = _objectWithoutProperties(_ref, _excluded);\n  extend({\n    ImageMaterial: ImageMaterialImpl\n  });\n  var ref = React.useRef(null);\n  var size = useThree(function (state) {\n    return state.size;\n  });\n  var planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\n  var imageBounds = [texture.image.width, texture.image.height];\n  var resolution = Math.max(size.width, size.height);\n  React.useImperativeHandle(fref, function () {\n    return ref.current;\n  }, []);\n  React.useLayoutEffect(function () {\n    // Support arbitrary plane geometries (for instance with rounded corners)\n    // @ts-ignore\n    if (ref.current.geometry.parameters) {\n      // @ts-ignore\n      ref.current.material.scale.set(\n      // @ts-ignore\n      planeBounds[0] * ref.current.geometry.parameters.width,\n      // @ts-ignore\n      planeBounds[1] * ref.current.geometry.parameters.height);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: Array.isArray(scale) ? [].concat(_toConsumableArray(scale), [1]) : scale\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\n    color: color,\n    map: texture,\n    zoom: zoom,\n    grayscale: grayscale,\n    opacity: opacity,\n    scale: planeBounds,\n    imageBounds: imageBounds,\n    resolution: resolution,\n    radius: radius,\n    toneMapped: toneMapped,\n    transparent: transparent,\n    side: side,\n    key: ImageMaterialImpl.key\n  }), children);\n});\nvar ImageWithUrl = /* @__PURE__ */React.forwardRef(function (_ref2, ref) {\n  var url = _ref2.url,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  var texture = useTexture(url);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    texture: texture,\n    ref: ref\n  }));\n});\nvar ImageWithTexture = /* @__PURE__ */React.forwardRef(function (_ref3, ref) {\n  var _url = _ref3.url,\n    props = _objectWithoutProperties(_ref3, _excluded3);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    ref: ref\n  }));\n});\nvar Image = /* @__PURE__ */React.forwardRef(function (props, ref) {\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\n    ref: ref\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\n    ref: ref\n  }));else throw new Error('<Image /> requires a url or texture');\n});\nexport { Image };","map":{"version":3,"names":["_extends","React","THREE","extend","useThree","shaderMaterial","useTexture","version","ImageMaterialImpl","color","Color","scale","Vector2","imageBounds","resolution","map","zoom","radius","grayscale","opacity","concat","ImageBase","forwardRef","_ref","fref","children","_ref$segments","segments","_ref$scale","_ref$zoom","_ref$grayscale","_ref$opacity","_ref$radius","texture","toneMapped","transparent","side","props","_objectWithoutProperties","_excluded","ImageMaterial","ref","useRef","size","state","planeBounds","Array","isArray","image","width","height","Math","max","useImperativeHandle","current","useLayoutEffect","geometry","parameters","material","set","createElement","_toConsumableArray","args","key","ImageWithUrl","_ref2","url","_excluded2","ImageWithTexture","_ref3","_url","_excluded3","Image","Error"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@react-three/drei/core/Image.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useTexture } from './Texture.js';\nimport { version } from '../helpers/constants.js';\n\n// {texture: THREE.Texture} XOR {url: string}\n\nconst ImageMaterialImpl = /* @__PURE__ */shaderMaterial({\n  color: /* @__PURE__ */new THREE.Color('white'),\n  scale: /* @__PURE__ */new THREE.Vector2(1, 1),\n  imageBounds: /* @__PURE__ */new THREE.Vector2(1, 1),\n  resolution: 1024,\n  map: null,\n  zoom: 1,\n  radius: 0,\n  grayscale: 0,\n  opacity: 1\n}, /* glsl */`\n  varying vec2 vUv;\n  varying vec2 vPos;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n    vPos = position.xy;\n  }\n`, /* glsl */`\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  varying vec2 vPos;\n  uniform vec2 scale;\n  uniform vec2 imageBounds;\n  uniform float resolution;\n  uniform vec3 color;\n  uniform sampler2D map;\n  uniform float radius;\n  uniform float zoom;\n  uniform float grayscale;\n  uniform float opacity;\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n  vec2 aspect(vec2 size) {\n    return size / min(size.x, size.y);\n  }\n  \n  const float PI = 3.14159265;\n    \n  // from https://iquilezles.org/articles/distfunctions\n  float udRoundBox( vec2 p, vec2 b, float r ) {\n    return length(max(abs(p)-b+r,0.0))-r;\n  }\n\n  void main() {\n    vec2 s = aspect(scale);\n    vec2 i = aspect(imageBounds);\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n\n    vec2 res = vec2(scale * resolution);\n    vec2 halfRes = 0.5 * res;\n    float b = udRoundBox(vUv.xy * res - halfRes, halfRes, resolution * radius);    \n\t  vec3 a = mix(vec3(1.0,0.0,0.0), vec3(0.0,0.0,0.0), smoothstep(0.0, 1.0, b));\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity * a), grayscale);\n    \n    #include <tonemapping_fragment>\n    #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n  }\n`);\nconst ImageBase = /* @__PURE__ */React.forwardRef(({\n  children,\n  color,\n  segments = 1,\n  scale = 1,\n  zoom = 1,\n  grayscale = 0,\n  opacity = 1,\n  radius = 0,\n  texture,\n  toneMapped,\n  transparent,\n  side,\n  ...props\n}, fref) => {\n  extend({\n    ImageMaterial: ImageMaterialImpl\n  });\n  const ref = React.useRef(null);\n  const size = useThree(state => state.size);\n  const planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\n  const imageBounds = [texture.image.width, texture.image.height];\n  const resolution = Math.max(size.width, size.height);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    // Support arbitrary plane geometries (for instance with rounded corners)\n    // @ts-ignore\n    if (ref.current.geometry.parameters) {\n      // @ts-ignore\n      ref.current.material.scale.set(\n      // @ts-ignore\n      planeBounds[0] * ref.current.geometry.parameters.width,\n      // @ts-ignore\n      planeBounds[1] * ref.current.geometry.parameters.height);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: Array.isArray(scale) ? [...scale, 1] : scale\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\n    color: color,\n    map: texture,\n    zoom: zoom,\n    grayscale: grayscale,\n    opacity: opacity,\n    scale: planeBounds,\n    imageBounds: imageBounds,\n    resolution: resolution,\n    radius: radius,\n    toneMapped: toneMapped,\n    transparent: transparent,\n    side: side,\n    key: ImageMaterialImpl.key\n  }), children);\n});\nconst ImageWithUrl = /* @__PURE__ */React.forwardRef(({\n  url,\n  ...props\n}, ref) => {\n  const texture = useTexture(url);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    texture: texture,\n    ref: ref\n  }));\n});\nconst ImageWithTexture = /* @__PURE__ */React.forwardRef(({\n  url: _url,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    ref: ref\n  }));\n});\nconst Image = /* @__PURE__ */React.forwardRef((props, ref) => {\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\n    ref: ref\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\n    ref: ref\n  }));else throw new Error('<Image /> requires a url or texture');\n});\n\nexport { Image };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}