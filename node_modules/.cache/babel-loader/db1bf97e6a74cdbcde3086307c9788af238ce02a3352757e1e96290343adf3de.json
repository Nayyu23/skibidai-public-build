{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Curve, Vector4, Vector3 } from \"three\";\nimport { calcBSplinePoint, calcNURBSDerivatives } from \"./NURBSUtils.js\";\nvar NURBSCurve = /*#__PURE__*/function (_Curve) {\n  _inherits(NURBSCurve, _Curve);\n  var _super = _createSuper(NURBSCurve);\n  function NURBSCurve(degree, knots, controlPoints, startKnot, endKnot) {\n    var _this;\n    _classCallCheck(this, NURBSCurve);\n    _this = _super.call(this);\n    _this.degree = degree;\n    _this.knots = knots;\n    _this.controlPoints = [];\n    _this.startKnot = startKnot || 0;\n    _this.endKnot = endKnot || _this.knots.length - 1;\n    for (var i = 0; i < controlPoints.length; ++i) {\n      var point = controlPoints[i];\n      _this.controlPoints[i] = new Vector4(point.x, point.y, point.z, point.w);\n    }\n    return _this;\n  }\n  _createClass(NURBSCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t, optionalTarget) {\n      var point = optionalTarget || new Vector3();\n      var u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]);\n      var hpoint = calcBSplinePoint(this.degree, this.knots, this.controlPoints, u);\n      if (hpoint.w != 1) {\n        hpoint.divideScalar(hpoint.w);\n      }\n      return point.set(hpoint.x, hpoint.y, hpoint.z);\n    }\n  }, {\n    key: \"getTangent\",\n    value: function getTangent(t, optionalTarget) {\n      var tangent = optionalTarget || new Vector3();\n      var u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0]);\n      var ders = calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1);\n      tangent.copy(ders[1]).normalize();\n      return tangent;\n    }\n  }]);\n  return NURBSCurve;\n}(Curve);\nexport { NURBSCurve };","map":{"version":3,"names":["NURBSCurve","_Curve","_inherits","_super","_createSuper","degree","knots","controlPoints","startKnot","endKnot","_this","_classCallCheck","call","length","i","point","Vector4","x","y","z","w","_createClass","key","value","getPoint","t","optionalTarget","Vector3","u","hpoint","calcBSplinePoint","divideScalar","set","getTangent","tangent","ders","calcNURBSDerivatives","copy","normalize","Curve"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\curves\\NURBSCurve.js"],"sourcesContent":["import { Curve, Vector3, Vector4 } from 'three'\nimport * as NURBSUtils from '../curves/NURBSUtils'\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n  constructor(\n    degree,\n    knots /* array of reals */,\n    controlPoints /* array of Vector(2|3|4) */,\n    startKnot /* index in knots */,\n    endKnot /* index in knots */,\n  ) {\n    super()\n\n    this.degree = degree\n    this.knots = knots\n    this.controlPoints = []\n    // Used by periodic NURBS to remove hidden spans\n    this.startKnot = startKnot || 0\n    this.endKnot = endKnot || this.knots.length - 1\n    for (let i = 0; i < controlPoints.length; ++i) {\n      // ensure Vector4 for control points\n      const point = controlPoints[i]\n      this.controlPoints[i] = new Vector4(point.x, point.y, point.z, point.w)\n    }\n  }\n\n  getPoint(t, optionalTarget) {\n    const point = optionalTarget || new Vector3()\n\n    const u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]) // linear mapping t->u\n\n    // following results in (wx, wy, wz, w) homogeneous point\n    const hpoint = NURBSUtils.calcBSplinePoint(this.degree, this.knots, this.controlPoints, u)\n\n    if (hpoint.w != 1.0) {\n      // project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n      hpoint.divideScalar(hpoint.w)\n    }\n\n    return point.set(hpoint.x, hpoint.y, hpoint.z)\n  }\n\n  getTangent(t, optionalTarget) {\n    const tangent = optionalTarget || new Vector3()\n\n    const u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0])\n    const ders = NURBSUtils.calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1)\n    tangent.copy(ders[1]).normalize()\n\n    return tangent\n  }\n}\n\nexport { NURBSCurve }\n"],"mappings":";;;;;;IAYMA,UAAA,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EACJ,SAAAA,WACEK,MAAA,EACAC,KAAA,EACAC,aAAA,EACAC,SAAA,EACAC,OAAA,EACA;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAX,UAAA;IACAU,KAAA,GAAAP,MAAA,CAAAS,IAAA;IAEAF,KAAA,CAAKL,MAAA,GAASA,MAAA;IACdK,KAAA,CAAKJ,KAAA,GAAQA,KAAA;IACbI,KAAA,CAAKH,aAAA,GAAgB,EAAE;IAEvBG,KAAA,CAAKF,SAAA,GAAYA,SAAA,IAAa;IAC9BE,KAAA,CAAKD,OAAA,GAAUA,OAAA,IAAWC,KAAA,CAAKJ,KAAA,CAAMO,MAAA,GAAS;IAC9C,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAIP,aAAA,CAAcM,MAAA,EAAQ,EAAEC,CAAA,EAAG;MAE7C,IAAMC,KAAA,GAAQR,aAAA,CAAcO,CAAC;MAC7BJ,KAAA,CAAKH,aAAA,CAAcO,CAAC,IAAI,IAAIE,OAAA,CAAQD,KAAA,CAAME,CAAA,EAAGF,KAAA,CAAMG,CAAA,EAAGH,KAAA,CAAMI,CAAA,EAAGJ,KAAA,CAAMK,CAAC;IACvE;IAAA,OAAAV,KAAA;EACF;EAAAW,YAAA,CAAArB,UAAA;IAAAsB,GAAA;IAAAC,KAAA,EAED,SAAAC,SAASC,CAAA,EAAGC,cAAA,EAAgB;MAC1B,IAAMX,KAAA,GAAQW,cAAA,IAAkB,IAAIC,OAAA,CAAS;MAE7C,IAAMC,CAAA,GAAI,KAAKtB,KAAA,CAAM,KAAKE,SAAS,IAAIiB,CAAA,IAAK,KAAKnB,KAAA,CAAM,KAAKG,OAAO,IAAI,KAAKH,KAAA,CAAM,KAAKE,SAAS;MAGhG,IAAMqB,MAAA,GAASC,gBAAA,CAA4B,KAAKzB,MAAA,EAAQ,KAAKC,KAAA,EAAO,KAAKC,aAAA,EAAeqB,CAAC;MAEzF,IAAIC,MAAA,CAAOT,CAAA,IAAK,GAAK;QAEnBS,MAAA,CAAOE,YAAA,CAAaF,MAAA,CAAOT,CAAC;MAC7B;MAED,OAAOL,KAAA,CAAMiB,GAAA,CAAIH,MAAA,CAAOZ,CAAA,EAAGY,MAAA,CAAOX,CAAA,EAAGW,MAAA,CAAOV,CAAC;IAC9C;EAAA;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAU,WAAWR,CAAA,EAAGC,cAAA,EAAgB;MAC5B,IAAMQ,OAAA,GAAUR,cAAA,IAAkB,IAAIC,OAAA,CAAS;MAE/C,IAAMC,CAAA,GAAI,KAAKtB,KAAA,CAAM,CAAC,IAAImB,CAAA,IAAK,KAAKnB,KAAA,CAAM,KAAKA,KAAA,CAAMO,MAAA,GAAS,CAAC,IAAI,KAAKP,KAAA,CAAM,CAAC;MAC/E,IAAM6B,IAAA,GAAOC,oBAAA,CAAgC,KAAK/B,MAAA,EAAQ,KAAKC,KAAA,EAAO,KAAKC,aAAA,EAAeqB,CAAA,EAAG,CAAC;MAC9FM,OAAA,CAAQG,IAAA,CAAKF,IAAA,CAAK,CAAC,CAAC,EAAEG,SAAA,CAAW;MAEjC,OAAOJ,OAAA;IACR;EAAA;EAAA,OAAAlC,UAAA;AAAA,EA/CsBuC,KAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}