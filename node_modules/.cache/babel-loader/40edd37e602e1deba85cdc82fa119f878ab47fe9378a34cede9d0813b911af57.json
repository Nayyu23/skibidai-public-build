{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { GLTFLoader } from \"../loaders/GLTFLoader.js\";\nvar DEFAULT_HAND_PROFILE_PATH = \"https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/\";\nvar XRHandMeshModel = /*#__PURE__*/function () {\n  function XRHandMeshModel(handModel, controller) {\n    var _this = this;\n    var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_HAND_PROFILE_PATH;\n    var handedness = arguments.length > 3 ? arguments[3] : undefined;\n    var customModelPath = arguments.length > 4 ? arguments[4] : undefined;\n    _classCallCheck(this, XRHandMeshModel);\n    __publicField(this, \"controller\");\n    __publicField(this, \"handModel\");\n    __publicField(this, \"bones\");\n    this.controller = controller;\n    this.handModel = handModel;\n    this.bones = [];\n    var loader = new GLTFLoader();\n    if (!customModelPath) loader.setPath(path);\n    loader.load(customModelPath != null ? customModelPath : \"\".concat(handedness, \".glb\"), function (gltf) {\n      var object = gltf.scene.children[0];\n      _this.handModel.add(object);\n      var mesh = object.getObjectByProperty(\"type\", \"SkinnedMesh\");\n      mesh.frustumCulled = false;\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n      var joints = [\"wrist\", \"thumb-metacarpal\", \"thumb-phalanx-proximal\", \"thumb-phalanx-distal\", \"thumb-tip\", \"index-finger-metacarpal\", \"index-finger-phalanx-proximal\", \"index-finger-phalanx-intermediate\", \"index-finger-phalanx-distal\", \"index-finger-tip\", \"middle-finger-metacarpal\", \"middle-finger-phalanx-proximal\", \"middle-finger-phalanx-intermediate\", \"middle-finger-phalanx-distal\", \"middle-finger-tip\", \"ring-finger-metacarpal\", \"ring-finger-phalanx-proximal\", \"ring-finger-phalanx-intermediate\", \"ring-finger-phalanx-distal\", \"ring-finger-tip\", \"pinky-finger-metacarpal\", \"pinky-finger-phalanx-proximal\", \"pinky-finger-phalanx-intermediate\", \"pinky-finger-phalanx-distal\", \"pinky-finger-tip\"];\n      joints.forEach(function (jointName) {\n        var bone = object.getObjectByName(jointName);\n        if (bone !== void 0) {\n          bone.jointName = jointName;\n        } else {\n          console.warn(\"Couldn't find \".concat(jointName, \" in \").concat(handedness, \" hand mesh\"));\n        }\n        _this.bones.push(bone);\n      });\n    });\n  }\n  _createClass(XRHandMeshModel, [{\n    key: \"updateMesh\",\n    value: function updateMesh() {\n      var XRJoints = this.controller.joints;\n      for (var i = 0; i < this.bones.length; i++) {\n        var bone = this.bones[i];\n        if (bone) {\n          var XRJoint = XRJoints[bone.jointName];\n          if (XRJoint.visible) {\n            var position = XRJoint.position;\n            bone.position.copy(position);\n            bone.quaternion.copy(XRJoint.quaternion);\n          }\n        }\n      }\n    }\n  }]);\n  return XRHandMeshModel;\n}();\nexport { XRHandMeshModel };","map":{"version":3,"names":["DEFAULT_HAND_PROFILE_PATH","XRHandMeshModel","handModel","controller","_this","path","arguments","length","undefined","handedness","customModelPath","_classCallCheck","__publicField","bones","loader","GLTFLoader","setPath","load","concat","gltf","object","scene","children","add","mesh","getObjectByProperty","frustumCulled","castShadow","receiveShadow","joints","forEach","jointName","bone","getObjectByName","console","warn","push","_createClass","key","value","updateMesh","XRJoints","i","XRJoint","visible","position","copy","quaternion"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\webxr\\XRHandMeshModel.ts"],"sourcesContent":["import { Object3D } from 'three'\nimport { GLTFLoader } from '../loaders/GLTFLoader'\n\nconst DEFAULT_HAND_PROFILE_PATH =\n  'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/'\n\nclass XRHandMeshModel {\n  controller: Object3D\n  handModel: Object3D\n  bones: Object3D[]\n\n  constructor(\n    handModel: Object3D,\n    controller: Object3D,\n    path: string = DEFAULT_HAND_PROFILE_PATH,\n    handedness: string,\n    customModelPath?: string,\n  ) {\n    this.controller = controller\n    this.handModel = handModel\n\n    this.bones = []\n\n    const loader = new GLTFLoader()\n    if (!customModelPath) loader.setPath(path)\n    loader.load(customModelPath ?? `${handedness}.glb`, (gltf: { scene: Object3D }) => {\n      const object = gltf.scene.children[0]\n      this.handModel.add(object)\n\n      const mesh = object.getObjectByProperty('type', 'SkinnedMesh')!\n      mesh.frustumCulled = false\n      mesh.castShadow = true\n      mesh.receiveShadow = true\n\n      const joints = [\n        'wrist',\n        'thumb-metacarpal',\n        'thumb-phalanx-proximal',\n        'thumb-phalanx-distal',\n        'thumb-tip',\n        'index-finger-metacarpal',\n        'index-finger-phalanx-proximal',\n        'index-finger-phalanx-intermediate',\n        'index-finger-phalanx-distal',\n        'index-finger-tip',\n        'middle-finger-metacarpal',\n        'middle-finger-phalanx-proximal',\n        'middle-finger-phalanx-intermediate',\n        'middle-finger-phalanx-distal',\n        'middle-finger-tip',\n        'ring-finger-metacarpal',\n        'ring-finger-phalanx-proximal',\n        'ring-finger-phalanx-intermediate',\n        'ring-finger-phalanx-distal',\n        'ring-finger-tip',\n        'pinky-finger-metacarpal',\n        'pinky-finger-phalanx-proximal',\n        'pinky-finger-phalanx-intermediate',\n        'pinky-finger-phalanx-distal',\n        'pinky-finger-tip',\n      ]\n\n      joints.forEach((jointName) => {\n        const bone = object.getObjectByName(jointName) as any\n\n        if (bone !== undefined) {\n          bone.jointName = jointName\n        } else {\n          console.warn(`Couldn't find ${jointName} in ${handedness} hand mesh`)\n        }\n\n        this.bones.push(bone)\n      })\n    })\n  }\n\n  updateMesh(): void {\n    // XR Joints\n    const XRJoints = (this.controller as any).joints\n\n    for (let i = 0; i < this.bones.length; i++) {\n      const bone = this.bones[i]\n\n      if (bone) {\n        const XRJoint = XRJoints[(bone as any).jointName]\n\n        if (XRJoint.visible) {\n          const position = XRJoint.position\n\n          bone.position.copy(position)\n          bone.quaternion.copy(XRJoint.quaternion)\n          // bone.scale.setScalar( XRJoint.jointRadius || defaultRadius );\n        }\n      }\n    }\n  }\n}\n\nexport { XRHandMeshModel }\n"],"mappings":";;;;;;;;;;;;;;;;AAGA,IAAMA,yBAAA,GACJ;AAAA,IAEIC,eAAA;EAKJ,SAAAA,gBACEC,SAAA,EACAC,UAAA,EAIA;IAAA,IAAAC,KAAA;IAAA,IAHAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAeN,yBAAA;IAAA,IACfS,UAAA,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAA,IACAE,eAAA,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;IAAAG,eAAA,OAAAV,eAAA;IATFW,aAAA;IACAA,aAAA;IACAA,aAAA;IASE,KAAKT,UAAA,GAAaA,UAAA;IAClB,KAAKD,SAAA,GAAYA,SAAA;IAEjB,KAAKW,KAAA,GAAQ;IAEP,IAAAC,MAAA,GAAS,IAAIC,UAAA;IACnB,IAAI,CAACL,eAAA,EAAiBI,MAAA,CAAOE,OAAA,CAAQX,IAAI;IACzCS,MAAA,CAAOG,IAAA,CAAKP,eAAA,WAAAA,eAAA,MAAAQ,MAAA,CAAsBT,UAAA,WAAkB,UAACU,IAAA,EAA8B;MACjF,IAAMC,MAAA,GAASD,IAAA,CAAKE,KAAA,CAAMC,QAAA,CAAS,CAAC;MAC/BlB,KAAA,CAAAF,SAAA,CAAUqB,GAAA,CAAIH,MAAM;MAEzB,IAAMI,IAAA,GAAOJ,MAAA,CAAOK,mBAAA,CAAoB,QAAQ,aAAa;MAC7DD,IAAA,CAAKE,aAAA,GAAgB;MACrBF,IAAA,CAAKG,UAAA,GAAa;MAClBH,IAAA,CAAKI,aAAA,GAAgB;MAErB,IAAMC,MAAA,GAAS,CACb,SACA,oBACA,0BACA,wBACA,aACA,2BACA,iCACA,qCACA,+BACA,oBACA,4BACA,kCACA,sCACA,gCACA,qBACA,0BACA,gCACA,oCACA,8BACA,mBACA,2BACA,iCACA,qCACA,+BACA;MAGKA,MAAA,CAAAC,OAAA,CAAQ,UAACC,SAAA,EAAc;QACtB,IAAAC,IAAA,GAAOZ,MAAA,CAAOa,eAAA,CAAgBF,SAAS;QAE7C,IAAIC,IAAA,KAAS,QAAW;UACtBA,IAAA,CAAKD,SAAA,GAAYA,SAAA;QAAA,OACZ;UACGG,OAAA,CAAAC,IAAA,kBAAAjB,MAAA,CAAsBa,SAAA,UAAAb,MAAA,CAAgBT,UAAA,eAAsB;QACtE;QAEKL,KAAA,CAAAS,KAAA,CAAMuB,IAAA,CAAKJ,IAAI;MAAA,CACrB;IAAA,CACF;EACH;EAAAK,YAAA,CAAApC,eAAA;IAAAqC,GAAA;IAAAC,KAAA,EAEA,SAAAC,WAAA,EAAmB;MAEX,IAAAC,QAAA,GAAY,KAAKtC,UAAA,CAAmB0B,MAAA;MAE1C,SAASa,CAAA,GAAI,GAAGA,CAAA,GAAI,KAAK7B,KAAA,CAAMN,MAAA,EAAQmC,CAAA,IAAK;QACpC,IAAAV,IAAA,GAAO,KAAKnB,KAAA,CAAM6B,CAAC;QAEzB,IAAIV,IAAA,EAAM;UACF,IAAAW,OAAA,GAAUF,QAAA,CAAUT,IAAA,CAAaD,SAAS;UAEhD,IAAIY,OAAA,CAAQC,OAAA,EAAS;YACnB,IAAMC,QAAA,GAAWF,OAAA,CAAQE,QAAA;YAEpBb,IAAA,CAAAa,QAAA,CAASC,IAAA,CAAKD,QAAQ;YACtBb,IAAA,CAAAe,UAAA,CAAWD,IAAA,CAAKH,OAAA,CAAQI,UAAU;UAEzC;QACF;MACF;IACF;EAAA;EAAA,OAAA9C,eAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}