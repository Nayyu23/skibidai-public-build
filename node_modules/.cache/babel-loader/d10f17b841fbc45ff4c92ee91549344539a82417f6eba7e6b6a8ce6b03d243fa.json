{"ast":null,"code":"import _objectSpread from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _possibleConstructorReturn from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"bevelEnabled\", \"bevelSize\", \"bevelThickness\", \"font\", \"height\", \"size\", \"lineHeight\", \"letterSpacing\"];\nimport { ExtrudeGeometry } from \"three\";\nvar TextGeometry = /*#__PURE__*/function (_ExtrudeGeometry) {\n  _inherits(TextGeometry, _ExtrudeGeometry);\n  var _super = _createSuper(TextGeometry);\n  function TextGeometry(text) {\n    var _this;\n    var parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, TextGeometry);\n    var _parameters$bevelEnab = parameters.bevelEnabled,\n      bevelEnabled = _parameters$bevelEnab === void 0 ? false : _parameters$bevelEnab,\n      _parameters$bevelSize = parameters.bevelSize,\n      bevelSize = _parameters$bevelSize === void 0 ? 8 : _parameters$bevelSize,\n      _parameters$bevelThic = parameters.bevelThickness,\n      bevelThickness = _parameters$bevelThic === void 0 ? 10 : _parameters$bevelThic,\n      font = parameters.font,\n      _parameters$height = parameters.height,\n      height = _parameters$height === void 0 ? 50 : _parameters$height,\n      _parameters$size = parameters.size,\n      size = _parameters$size === void 0 ? 100 : _parameters$size,\n      _parameters$lineHeigh = parameters.lineHeight,\n      lineHeight = _parameters$lineHeigh === void 0 ? 1 : _parameters$lineHeigh,\n      _parameters$letterSpa = parameters.letterSpacing,\n      letterSpacing = _parameters$letterSpa === void 0 ? 0 : _parameters$letterSpa,\n      rest = _objectWithoutProperties(parameters, _excluded);\n    if (font === void 0) {\n      _this = _super.call(this);\n    } else {\n      var shapes = font.generateShapes(text, size, {\n        lineHeight: lineHeight,\n        letterSpacing: letterSpacing\n      });\n      _this = _super.call(this, shapes, _objectSpread(_objectSpread({}, rest), {}, {\n        bevelEnabled: bevelEnabled,\n        bevelSize: bevelSize,\n        bevelThickness: bevelThickness,\n        depth: height\n      }));\n    }\n    _this.type = \"TextGeometry\";\n    return _possibleConstructorReturn(_this);\n  }\n  return _createClass(TextGeometry);\n}(ExtrudeGeometry);\nexport { TextGeometry as TextBufferGeometry, TextGeometry };","map":{"version":3,"names":["TextGeometry","_ExtrudeGeometry","_inherits","_super","_createSuper","text","_this","parameters","arguments","length","undefined","_classCallCheck","_parameters$bevelEnab","bevelEnabled","_parameters$bevelSize","bevelSize","_parameters$bevelThic","bevelThickness","font","_parameters$height","height","_parameters$size","size","_parameters$lineHeigh","lineHeight","_parameters$letterSpa","letterSpacing","rest","_objectWithoutProperties","_excluded","call","shapes","generateShapes","_objectSpread","depth","type","_possibleConstructorReturn","_createClass","ExtrudeGeometry"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\geometries\\TextGeometry.ts"],"sourcesContent":["import { ExtrudeGeometry } from 'three'\n\nimport type { Font } from '../loaders/FontLoader'\n\nexport type TextGeometryParameters = {\n  bevelEnabled?: boolean\n  bevelOffset?: number\n  bevelSize?: number\n  bevelThickness?: number\n  curveSegments?: number\n  font: Font\n  height?: number\n  size?: number\n  lineHeight?: number\n  letterSpacing?: number\n}\n\nexport class TextGeometry extends ExtrudeGeometry {\n  constructor(text: string, parameters: TextGeometryParameters = {} as TextGeometryParameters) {\n    const {\n      bevelEnabled = false,\n      bevelSize = 8,\n      bevelThickness = 10,\n      font,\n      height = 50,\n      size = 100,\n      lineHeight = 1,\n      letterSpacing = 0,\n      ...rest\n    } = parameters\n\n    if (font === undefined) {\n      // @ts-ignore\n      super() // generate default extrude geometry\n    } else {\n      const shapes = font.generateShapes(text, size, { lineHeight, letterSpacing })\n      super(shapes, { ...rest, bevelEnabled, bevelSize, bevelThickness, depth: height })\n    }\n    // @ts-ignore\n    this.type = 'TextGeometry'\n  }\n}\n\nexport { TextGeometry as TextBufferGeometry }\n"],"mappings":";;;;;;;;;IAiBaA,YAAA,0BAAAC,gBAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,gBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EACX,SAAAA,aAAYK,IAAA,EAAiF;IAAA,IAAAC,KAAA;IAAA,IAAnEC,UAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAqC;IAAAG,eAAA,OAAAX,YAAA;IACvD,IAAAY,qBAAA,GAUFL,UAAA,CATFM,YAAA;MAAAA,YAAA,GAAAD,qBAAA,cAAe,QAAAA,qBAAA;MAAAE,qBAAA,GASbP,UAAA,CARFQ,SAAA;MAAAA,SAAA,GAAAD,qBAAA,cAAY,IAAAA,qBAAA;MAAAE,qBAAA,GAQVT,UAAA,CAPFU,cAAA;MAAAA,cAAA,GAAAD,qBAAA,cAAiB,KAAAA,qBAAA;MACjBE,IAAA,GAMEX,UAAA,CANFW,IAAA;MAAAC,kBAAA,GAMEZ,UAAA,CALFa,MAAA;MAAAA,MAAA,GAAAD,kBAAA,cAAS,KAAAA,kBAAA;MAAAE,gBAAA,GAKPd,UAAA,CAJFe,IAAA;MAAAA,IAAA,GAAAD,gBAAA,cAAO,MAAAA,gBAAA;MAAAE,qBAAA,GAILhB,UAAA,CAHFiB,UAAA;MAAAA,UAAA,GAAAD,qBAAA,cAAa,IAAAA,qBAAA;MAAAE,qBAAA,GAGXlB,UAAA,CAFFmB,aAAA;MAAAA,aAAA,GAAAD,qBAAA,cAAgB,IAAAA,qBAAA;MACbE,IAAA,GAAAC,wBAAA,CACDrB,UAAA,EAAAsB,SAAA;IAEJ,IAAIX,IAAA,KAAS,QAAW;MAEhBZ,KAAA,GAAAH,MAAA,CAAA2B,IAAA;IAAA,OACD;MACC,IAAAC,MAAA,GAASb,IAAA,CAAKc,cAAA,CAAe3B,IAAA,EAAMiB,IAAA,EAAM;QAAEE,UAAA,EAAAA,UAAA;QAAYE,aAAA,EAAAA;MAAA,CAAe;MACtEpB,KAAA,GAAAH,MAAA,CAAA2B,IAAA,OAAAC,MAAA,EAAAE,aAAA,CAAAA,aAAA,KAAaN,IAAA;QAAMd,YAAA,EAAAA,YAAA;QAAcE,SAAA,EAAAA,SAAA;QAAWE,cAAA,EAAAA,cAAA;QAAgBiB,KAAA,EAAOd;MAAA;IAC3E;IAEAd,KAAA,CAAK6B,IAAA,GAAO;IAAA,OAAAC,0BAAA,CAAA9B,KAAA;EACd;EAAA,OAAA+B,YAAA,CAAArC,YAAA;AAAA,EAvBgCsC,eAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}