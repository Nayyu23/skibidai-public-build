{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Curve, Vector3 } from \"three\";\nvar GrannyKnot = /*#__PURE__*/function (_Curve) {\n  _inherits(GrannyKnot, _Curve);\n  var _super = _createSuper(GrannyKnot);\n  function GrannyKnot() {\n    _classCallCheck(this, GrannyKnot);\n    return _super.apply(this, arguments);\n  }\n  _createClass(GrannyKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      t = 2 * Math.PI * t;\n      var x = -0.22 * Math.cos(t) - 1.28 * Math.sin(t) - 0.44 * Math.cos(3 * t) - 0.78 * Math.sin(3 * t);\n      var y = -0.1 * Math.cos(2 * t) - 0.27 * Math.sin(2 * t) + 0.38 * Math.cos(4 * t) + 0.46 * Math.sin(4 * t);\n      var z = 0.7 * Math.cos(3 * t) - 0.4 * Math.sin(3 * t);\n      return point.set(x, y, z).multiplyScalar(20);\n    }\n  }]);\n  return GrannyKnot;\n}(Curve);\nvar HeartCurve = /*#__PURE__*/function (_Curve2) {\n  _inherits(HeartCurve, _Curve2);\n  var _super2 = _createSuper(HeartCurve);\n  function HeartCurve() {\n    var _this;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n    _classCallCheck(this, HeartCurve);\n    _this = _super2.call(this);\n    _this.scale = scale;\n    return _this;\n  }\n  _createClass(HeartCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      t *= 2 * Math.PI;\n      var x = 16 * Math.pow(Math.sin(t), 3);\n      var y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t);\n      var z = 0;\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return HeartCurve;\n}(Curve);\nvar VivianiCurve = /*#__PURE__*/function (_Curve3) {\n  _inherits(VivianiCurve, _Curve3);\n  var _super3 = _createSuper(VivianiCurve);\n  function VivianiCurve() {\n    var _this2;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 70;\n    _classCallCheck(this, VivianiCurve);\n    _this2 = _super3.call(this);\n    _this2.scale = scale;\n    return _this2;\n  }\n  _createClass(VivianiCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      t = t * 4 * Math.PI;\n      var a = this.scale / 2;\n      var x = a * (1 + Math.cos(t));\n      var y = a * Math.sin(t);\n      var z = 2 * a * Math.sin(t / 2);\n      return point.set(x, y, z);\n    }\n  }]);\n  return VivianiCurve;\n}(Curve);\nvar KnotCurve = /*#__PURE__*/function (_Curve4) {\n  _inherits(KnotCurve, _Curve4);\n  var _super4 = _createSuper(KnotCurve);\n  function KnotCurve() {\n    _classCallCheck(this, KnotCurve);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(KnotCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      t *= 2 * Math.PI;\n      var R = 10;\n      var s = 50;\n      var x = s * Math.sin(t);\n      var y = Math.cos(t) * (R + s * Math.cos(t));\n      var z = Math.sin(t) * (R + s * Math.cos(t));\n      return point.set(x, y, z);\n    }\n  }]);\n  return KnotCurve;\n}(Curve);\nvar HelixCurve = /*#__PURE__*/function (_Curve5) {\n  _inherits(HelixCurve, _Curve5);\n  var _super5 = _createSuper(HelixCurve);\n  function HelixCurve() {\n    _classCallCheck(this, HelixCurve);\n    return _super5.apply(this, arguments);\n  }\n  _createClass(HelixCurve, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      var a = 30;\n      var b = 150;\n      var t2 = 2 * Math.PI * t * b / 30;\n      var x = Math.cos(t2) * a;\n      var y = Math.sin(t2) * a;\n      var z = b * t;\n      return point.set(x, y, z);\n    }\n  }]);\n  return HelixCurve;\n}(Curve);\nvar TrefoilKnot = /*#__PURE__*/function (_Curve6) {\n  _inherits(TrefoilKnot, _Curve6);\n  var _super6 = _createSuper(TrefoilKnot);\n  function TrefoilKnot() {\n    var _this3;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    _classCallCheck(this, TrefoilKnot);\n    _this3 = _super6.call(this);\n    _this3.scale = scale;\n    return _this3;\n  }\n  _createClass(TrefoilKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      t *= Math.PI * 2;\n      var x = (2 + Math.cos(3 * t)) * Math.cos(2 * t);\n      var y = (2 + Math.cos(3 * t)) * Math.sin(2 * t);\n      var z = Math.sin(3 * t);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return TrefoilKnot;\n}(Curve);\nvar TorusKnot = /*#__PURE__*/function (_Curve7) {\n  _inherits(TorusKnot, _Curve7);\n  var _super7 = _createSuper(TorusKnot);\n  function TorusKnot() {\n    var _this4;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    _classCallCheck(this, TorusKnot);\n    _this4 = _super7.call(this);\n    _this4.scale = scale;\n    return _this4;\n  }\n  _createClass(TorusKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      var p = 3;\n      var q = 4;\n      t *= Math.PI * 2;\n      var x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n      var y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n      var z = Math.sin(q * t);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return TorusKnot;\n}(Curve);\nvar CinquefoilKnot = /*#__PURE__*/function (_Curve8) {\n  _inherits(CinquefoilKnot, _Curve8);\n  var _super8 = _createSuper(CinquefoilKnot);\n  function CinquefoilKnot() {\n    var _this5;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    _classCallCheck(this, CinquefoilKnot);\n    _this5 = _super8.call(this);\n    _this5.scale = scale;\n    return _this5;\n  }\n  _createClass(CinquefoilKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      var p = 2;\n      var q = 5;\n      t *= Math.PI * 2;\n      var x = (2 + Math.cos(q * t)) * Math.cos(p * t);\n      var y = (2 + Math.cos(q * t)) * Math.sin(p * t);\n      var z = Math.sin(q * t);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return CinquefoilKnot;\n}(Curve);\nvar TrefoilPolynomialKnot = /*#__PURE__*/function (_Curve9) {\n  _inherits(TrefoilPolynomialKnot, _Curve9);\n  var _super9 = _createSuper(TrefoilPolynomialKnot);\n  function TrefoilPolynomialKnot() {\n    var _this6;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    _classCallCheck(this, TrefoilPolynomialKnot);\n    _this6 = _super9.call(this);\n    _this6.scale = scale;\n    return _this6;\n  }\n  _createClass(TrefoilPolynomialKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      t = t * 4 - 2;\n      var x = Math.pow(t, 3) - 3 * t;\n      var y = Math.pow(t, 4) - 4 * t * t;\n      var z = 1 / 5 * Math.pow(t, 5) - 2 * t;\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return TrefoilPolynomialKnot;\n}(Curve);\nfunction scaleTo(x, y, t) {\n  var r = y - x;\n  return t * r + x;\n}\nvar FigureEightPolynomialKnot = /*#__PURE__*/function (_Curve10) {\n  _inherits(FigureEightPolynomialKnot, _Curve10);\n  var _super10 = _createSuper(FigureEightPolynomialKnot);\n  function FigureEightPolynomialKnot() {\n    var _this7;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    _classCallCheck(this, FigureEightPolynomialKnot);\n    _this7 = _super10.call(this);\n    _this7.scale = scale;\n    return _this7;\n  }\n  _createClass(FigureEightPolynomialKnot, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      t = scaleTo(-4, 4, t);\n      var x = 2 / 5 * t * (t * t - 7) * (t * t - 10);\n      var y = Math.pow(t, 4) - 13 * t * t;\n      var z = 1 / 10 * t * (t * t - 4) * (t * t - 9) * (t * t - 12);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return FigureEightPolynomialKnot;\n}(Curve);\nvar DecoratedTorusKnot4a = /*#__PURE__*/function (_Curve11) {\n  _inherits(DecoratedTorusKnot4a, _Curve11);\n  var _super11 = _createSuper(DecoratedTorusKnot4a);\n  function DecoratedTorusKnot4a() {\n    var _this8;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    _classCallCheck(this, DecoratedTorusKnot4a);\n    _this8 = _super11.call(this);\n    _this8.scale = scale;\n    return _this8;\n  }\n  _createClass(DecoratedTorusKnot4a, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      t *= Math.PI * 2;\n      var x = Math.cos(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n      var y = Math.sin(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)));\n      var z = 0.35 * Math.sin(5 * t);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return DecoratedTorusKnot4a;\n}(Curve);\nvar DecoratedTorusKnot4b = /*#__PURE__*/function (_Curve12) {\n  _inherits(DecoratedTorusKnot4b, _Curve12);\n  var _super12 = _createSuper(DecoratedTorusKnot4b);\n  function DecoratedTorusKnot4b() {\n    var _this9;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    _classCallCheck(this, DecoratedTorusKnot4b);\n    _this9 = _super12.call(this);\n    _this9.scale = scale;\n    return _this9;\n  }\n  _createClass(DecoratedTorusKnot4b, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      var fi = t * Math.PI * 2;\n      var x = Math.cos(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n      var y = Math.sin(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi));\n      var z = 0.2 * Math.sin(9 * fi);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return DecoratedTorusKnot4b;\n}(Curve);\nvar DecoratedTorusKnot5a = /*#__PURE__*/function (_Curve13) {\n  _inherits(DecoratedTorusKnot5a, _Curve13);\n  var _super13 = _createSuper(DecoratedTorusKnot5a);\n  function DecoratedTorusKnot5a() {\n    var _this10;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    _classCallCheck(this, DecoratedTorusKnot5a);\n    _this10 = _super13.call(this);\n    _this10.scale = scale;\n    return _this10;\n  }\n  _createClass(DecoratedTorusKnot5a, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      var fi = t * Math.PI * 2;\n      var x = Math.cos(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n      var y = Math.sin(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi));\n      var z = 0.2 * Math.sin(20 * fi);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return DecoratedTorusKnot5a;\n}(Curve);\nvar DecoratedTorusKnot5c = /*#__PURE__*/function (_Curve14) {\n  _inherits(DecoratedTorusKnot5c, _Curve14);\n  var _super14 = _createSuper(DecoratedTorusKnot5c);\n  function DecoratedTorusKnot5c() {\n    var _this11;\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    _classCallCheck(this, DecoratedTorusKnot5c);\n    _this11 = _super14.call(this);\n    _this11.scale = scale;\n    return _this11;\n  }\n  _createClass(DecoratedTorusKnot5c, [{\n    key: \"getPoint\",\n    value: function getPoint(t) {\n      var optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n      var point = optionalTarget;\n      var fi = t * Math.PI * 2;\n      var x = Math.cos(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n      var y = Math.sin(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)));\n      var z = 0.35 * Math.sin(15 * fi);\n      return point.set(x, y, z).multiplyScalar(this.scale);\n    }\n  }]);\n  return DecoratedTorusKnot5c;\n}(Curve);\nexport { CinquefoilKnot, DecoratedTorusKnot4a, DecoratedTorusKnot4b, DecoratedTorusKnot5a, DecoratedTorusKnot5c, FigureEightPolynomialKnot, GrannyKnot, HeartCurve, HelixCurve, KnotCurve, TorusKnot, TrefoilKnot, TrefoilPolynomialKnot, VivianiCurve };","map":{"version":3,"names":["GrannyKnot","_Curve","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","getPoint","t","optionalTarget","length","undefined","Vector3","point","Math","PI","x","cos","sin","y","z","set","multiplyScalar","Curve","HeartCurve","_Curve2","_super2","_this","scale","call","pow","VivianiCurve","_Curve3","_super3","_this2","a","KnotCurve","_Curve4","_super4","R","s","HelixCurve","_Curve5","_super5","b","t2","TrefoilKnot","_Curve6","_super6","_this3","TorusKnot","_Curve7","_super7","_this4","p","q","CinquefoilKnot","_Curve8","_super8","_this5","TrefoilPolynomialKnot","_Curve9","_super9","_this6","scaleTo","r","FigureEightPolynomialKnot","_Curve10","_super10","_this7","DecoratedTorusKnot4a","_Curve11","_super11","_this8","DecoratedTorusKnot4b","_Curve12","_super12","_this9","fi","DecoratedTorusKnot5a","_Curve13","_super13","_this10","DecoratedTorusKnot5c","_Curve14","_super14","_this11"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\curves\\CurveExtras.js"],"sourcesContent":["import { Curve, Vector3 } from 'three'\n\n/**\n * A bunch of parametric curves\n *\n * Formulas collected from various sources\n * http://mathworld.wolfram.com/HeartCurve.html\n * http://en.wikipedia.org/wiki/Viviani%27s_curve\n * http://www.mi.sanu.ac.rs/vismath/taylorapril2011/Taylor.pdf\n * https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\n// GrannyKnot\n\nclass GrannyKnot extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t = 2 * Math.PI * t\n\n    const x = -0.22 * Math.cos(t) - 1.28 * Math.sin(t) - 0.44 * Math.cos(3 * t) - 0.78 * Math.sin(3 * t)\n    const y = -0.1 * Math.cos(2 * t) - 0.27 * Math.sin(2 * t) + 0.38 * Math.cos(4 * t) + 0.46 * Math.sin(4 * t)\n    const z = 0.7 * Math.cos(3 * t) - 0.4 * Math.sin(3 * t)\n\n    return point.set(x, y, z).multiplyScalar(20)\n  }\n}\n\n// HeartCurve\n\nclass HeartCurve extends Curve {\n  constructor(scale = 5) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t *= 2 * Math.PI\n\n    const x = 16 * Math.pow(Math.sin(t), 3)\n    const y = 13 * Math.cos(t) - 5 * Math.cos(2 * t) - 2 * Math.cos(3 * t) - Math.cos(4 * t)\n    const z = 0\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// Viviani's Curve\n\nclass VivianiCurve extends Curve {\n  constructor(scale = 70) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t = t * 4 * Math.PI // normalized to 0..1\n    const a = this.scale / 2\n\n    const x = a * (1 + Math.cos(t))\n    const y = a * Math.sin(t)\n    const z = 2 * a * Math.sin(t / 2)\n\n    return point.set(x, y, z)\n  }\n}\n\n// KnotCurve\n\nclass KnotCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t *= 2 * Math.PI\n\n    const R = 10\n    const s = 50\n\n    const x = s * Math.sin(t)\n    const y = Math.cos(t) * (R + s * Math.cos(t))\n    const z = Math.sin(t) * (R + s * Math.cos(t))\n\n    return point.set(x, y, z)\n  }\n}\n\n// HelixCurve\n\nclass HelixCurve extends Curve {\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const a = 30 // radius\n    const b = 150 // height\n\n    const t2 = (2 * Math.PI * t * b) / 30\n\n    const x = Math.cos(t2) * a\n    const y = Math.sin(t2) * a\n    const z = b * t\n\n    return point.set(x, y, z)\n  }\n}\n\n// TrefoilKnot\n\nclass TrefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t *= Math.PI * 2\n\n    const x = (2 + Math.cos(3 * t)) * Math.cos(2 * t)\n    const y = (2 + Math.cos(3 * t)) * Math.sin(2 * t)\n    const z = Math.sin(3 * t)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// TorusKnot\n\nclass TorusKnot extends Curve {\n  constructor(scale = 10) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const p = 3\n    const q = 4\n\n    t *= Math.PI * 2\n\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t)\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t)\n    const z = Math.sin(q * t)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// CinquefoilKnot\n\nclass CinquefoilKnot extends Curve {\n  constructor(scale = 10) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const p = 2\n    const q = 5\n\n    t *= Math.PI * 2\n\n    const x = (2 + Math.cos(q * t)) * Math.cos(p * t)\n    const y = (2 + Math.cos(q * t)) * Math.sin(p * t)\n    const z = Math.sin(q * t)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// TrefoilPolynomialKnot\n\nclass TrefoilPolynomialKnot extends Curve {\n  constructor(scale = 10) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t = t * 4 - 2\n\n    const x = Math.pow(t, 3) - 3 * t\n    const y = Math.pow(t, 4) - 4 * t * t\n    const z = (1 / 5) * Math.pow(t, 5) - 2 * t\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\nfunction scaleTo(x, y, t) {\n  const r = y - x\n  return t * r + x\n}\n\n// FigureEightPolynomialKnot\n\nclass FigureEightPolynomialKnot extends Curve {\n  constructor(scale = 1) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t = scaleTo(-4, 4, t)\n\n    const x = (2 / 5) * t * (t * t - 7) * (t * t - 10)\n    const y = Math.pow(t, 4) - 13 * t * t\n    const z = (1 / 10) * t * (t * t - 4) * (t * t - 9) * (t * t - 12)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// DecoratedTorusKnot4a\n\nclass DecoratedTorusKnot4a extends Curve {\n  constructor(scale = 40) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    t *= Math.PI * 2\n\n    const x = Math.cos(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)))\n    const y = Math.sin(2 * t) * (1 + 0.6 * (Math.cos(5 * t) + 0.75 * Math.cos(10 * t)))\n    const z = 0.35 * Math.sin(5 * t)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// DecoratedTorusKnot4b\n\nclass DecoratedTorusKnot4b extends Curve {\n  constructor(scale = 40) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const fi = t * Math.PI * 2\n\n    const x = Math.cos(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi))\n    const y = Math.sin(2 * fi) * (1 + 0.45 * Math.cos(3 * fi) + 0.4 * Math.cos(9 * fi))\n    const z = 0.2 * Math.sin(9 * fi)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// DecoratedTorusKnot5a\n\nclass DecoratedTorusKnot5a extends Curve {\n  constructor(scale = 40) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const fi = t * Math.PI * 2\n\n    const x = Math.cos(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi))\n    const y = Math.sin(3 * fi) * (1 + 0.3 * Math.cos(5 * fi) + 0.5 * Math.cos(10 * fi))\n    const z = 0.2 * Math.sin(20 * fi)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\n// DecoratedTorusKnot5c\n\nclass DecoratedTorusKnot5c extends Curve {\n  constructor(scale = 40) {\n    super()\n\n    this.scale = scale\n  }\n\n  getPoint(t, optionalTarget = new Vector3()) {\n    const point = optionalTarget\n\n    const fi = t * Math.PI * 2\n\n    const x = Math.cos(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)))\n    const y = Math.sin(4 * fi) * (1 + 0.5 * (Math.cos(5 * fi) + 0.4 * Math.cos(20 * fi)))\n    const z = 0.35 * Math.sin(15 * fi)\n\n    return point.set(x, y, z).multiplyScalar(this.scale)\n  }\n}\n\nexport {\n  GrannyKnot,\n  HeartCurve,\n  VivianiCurve,\n  KnotCurve,\n  HelixCurve,\n  TrefoilKnot,\n  TorusKnot,\n  CinquefoilKnot,\n  TrefoilPolynomialKnot,\n  FigureEightPolynomialKnot,\n  DecoratedTorusKnot4a,\n  DecoratedTorusKnot4b,\n  DecoratedTorusKnot5a,\n  DecoratedTorusKnot5c,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}