{"ast":null,"code":"import _defineProperty from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './Texture.js';\nvar cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\nfunction useKTX2(input) {\n  var basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(cdn, \"/basis/\");\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, function (loader) {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  });\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  useEffect(function () {\n    var array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n  if (IsObject(input)) {\n    var keys = Object.keys(input);\n    var keyed = {};\n    keys.forEach(function (key) {\n      return Object.assign(keyed, _defineProperty({}, key, textures[keys.indexOf(key)]));\n    });\n    return keyed;\n  } else {\n    return textures;\n  }\n}\nuseKTX2.preload = function (url) {\n  var basisPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(cdn, \"/basis/\");\n  return useLoader.preload(KTX2Loader, url, function (loader) {\n    loader.setTranscoderPath(basisPath);\n  });\n};\nuseKTX2.clear = function (input) {\n  return useLoader.clear(KTX2Loader, input);\n};\n\n//\n\nvar Ktx2 = function Ktx2(_ref) {\n  var children = _ref.children,\n    input = _ref.input,\n    basisPath = _ref.basisPath;\n  var texture = useKTX2(input, basisPath);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(texture));\n};\nexport { Ktx2, useKTX2 };","map":{"version":3,"names":["React","useEffect","useThree","useLoader","KTX2Loader","IsObject","cdn","useKTX2","input","basisPath","arguments","length","undefined","concat","gl","state","textures","Object","values","loader","detectSupport","setTranscoderPath","array","Array","isArray","forEach","initTexture","keys","keyed","key","assign","_defineProperty","indexOf","preload","url","clear","Ktx2","_ref","children","texture","createElement","Fragment"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@react-three/drei/core/Ktx2.js"],"sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './Texture.js';\n\nconst cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\nfunction useKTX2(input, basisPath = `${cdn}/basis/`) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, loader => {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  });\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  useEffect(() => {\n    const array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\nuseKTX2.preload = (url, basisPath = `${cdn}/basis/`) => useLoader.preload(KTX2Loader, url, loader => {\n  loader.setTranscoderPath(basisPath);\n});\nuseKTX2.clear = input => useLoader.clear(KTX2Loader, input);\n\n//\n\nconst Ktx2 = ({\n  children,\n  input,\n  basisPath\n}) => {\n  const texture = useKTX2(input, basisPath);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(texture));\n};\n\nexport { Ktx2, useKTX2 };\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AACxD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,QAAQ,QAAQ,cAAc;AAEvC,IAAMC,GAAG,GAAG,uDAAuD;AACnE,SAASC,OAAOA,CAACC,KAAK,EAA+B;EAAA,IAA7BC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,SAAAG,MAAA,CAAMP,GAAG;EACxC,IAAMQ,EAAE,GAAGZ,QAAQ,CAAC,UAAAa,KAAK;IAAA,OAAIA,KAAK,CAACD,EAAE;EAAA,EAAC;EACtC,IAAME,QAAQ,GAAGb,SAAS,CAACC,UAAU,EAAEC,QAAQ,CAACG,KAAK,CAAC,GAAGS,MAAM,CAACC,MAAM,CAACV,KAAK,CAAC,GAAGA,KAAK,EAAE,UAAAW,MAAM,EAAI;IAC/FA,MAAM,CAACC,aAAa,CAACN,EAAE,CAAC;IACxBK,MAAM,CAACE,iBAAiB,CAACZ,SAAS,CAAC;EACrC,CAAC,CAAC;;EAEF;EACA;EACAR,SAAS,CAAC,YAAM;IACd,IAAMqB,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACR,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;IAC7DM,KAAK,CAACG,OAAO,CAACX,EAAE,CAACY,WAAW,CAAC;EAC/B,CAAC,EAAE,CAACZ,EAAE,EAAEE,QAAQ,CAAC,CAAC;EAClB,IAAIX,QAAQ,CAACG,KAAK,CAAC,EAAE;IACnB,IAAMmB,IAAI,GAAGV,MAAM,CAACU,IAAI,CAACnB,KAAK,CAAC;IAC/B,IAAMoB,KAAK,GAAG,CAAC,CAAC;IAChBD,IAAI,CAACF,OAAO,CAAC,UAAAI,GAAG;MAAA,OAAIZ,MAAM,CAACa,MAAM,CAACF,KAAK,EAAAG,eAAA,KACpCF,GAAG,EAAGb,QAAQ,CAACW,IAAI,CAACK,OAAO,CAACH,GAAG,CAAC,CAAC,CACnC,CAAC;IAAA,EAAC;IACH,OAAOD,KAAK;EACd,CAAC,MAAM;IACL,OAAOZ,QAAQ;EACjB;AACF;AACAT,OAAO,CAAC0B,OAAO,GAAG,UAACC,GAAG;EAAA,IAAEzB,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,SAAAG,MAAA,CAAMP,GAAG;EAAA,OAAcH,SAAS,CAAC8B,OAAO,CAAC7B,UAAU,EAAE8B,GAAG,EAAE,UAAAf,MAAM,EAAI;IACnGA,MAAM,CAACE,iBAAiB,CAACZ,SAAS,CAAC;EACrC,CAAC,CAAC;AAAA;AACFF,OAAO,CAAC4B,KAAK,GAAG,UAAA3B,KAAK;EAAA,OAAIL,SAAS,CAACgC,KAAK,CAAC/B,UAAU,EAAEI,KAAK,CAAC;AAAA;;AAE3D;;AAEA,IAAM4B,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAIJ;EAAA,IAHJC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACR9B,KAAK,GAAA6B,IAAA,CAAL7B,KAAK;IACLC,SAAS,GAAA4B,IAAA,CAAT5B,SAAS;EAET,IAAM8B,OAAO,GAAGhC,OAAO,CAACC,KAAK,EAAEC,SAAS,CAAC;EACzC,OAAO,aAAaT,KAAK,CAACwC,aAAa,CAACxC,KAAK,CAACyC,QAAQ,EAAE,IAAI,EAAEH,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACC,OAAO,CAAC,CAAC;AAC9G,CAAC;AAED,SAASH,IAAI,EAAE7B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}