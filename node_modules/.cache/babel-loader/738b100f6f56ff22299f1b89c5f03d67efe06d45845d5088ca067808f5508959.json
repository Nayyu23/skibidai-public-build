{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { UniformsUtils, ShaderMaterial } from \"three\";\nimport { HalftoneShader } from \"../shaders/HalftoneShader.js\";\nvar HalftonePass = /*#__PURE__*/function (_Pass) {\n  _inherits(HalftonePass, _Pass);\n  var _super = _createSuper(HalftonePass);\n  function HalftonePass(width, height, params) {\n    var _this;\n    _classCallCheck(this, HalftonePass);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"material\");\n    __publicField(_assertThisInitialized(_this), \"fsQuad\");\n    __publicField(_assertThisInitialized(_this), \"uniforms\");\n    if (HalftoneShader === void 0) {\n      console.error(\"THREE.HalftonePass requires HalftoneShader\");\n    }\n    _this.uniforms = UniformsUtils.clone(HalftoneShader.uniforms);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      fragmentShader: HalftoneShader.fragmentShader,\n      vertexShader: HalftoneShader.vertexShader\n    });\n    _this.uniforms.width.value = width;\n    _this.uniforms.height.value = height;\n    for (var key in params) {\n      if (params.hasOwnProperty(key) && _this.uniforms.hasOwnProperty(key)) {\n        _this.uniforms[key].value = params[key];\n      }\n    }\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n  _createClass(HalftonePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      this.material.uniforms[\"tDiffuse\"].value = readBuffer.texture;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n    }\n  }, {\n    key: \"setSize\",\n    value: function setSize(width, height) {\n      this.uniforms.width.value = width;\n      this.uniforms.height.value = height;\n    }\n  }]);\n  return HalftonePass;\n}(Pass);\nexport { HalftonePass };","map":{"version":3,"names":["HalftonePass","_Pass","_inherits","_super","_createSuper","width","height","params","_this","_classCallCheck","call","__publicField","_assertThisInitialized","HalftoneShader","console","error","uniforms","UniformsUtils","clone","material","ShaderMaterial","fragmentShader","vertexShader","value","key","hasOwnProperty","fsQuad","FullScreenQuad","_createClass","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","setSize","Pass"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\postprocessing\\HalftonePass.ts"],"sourcesContent":["import { Pass, FullScreenQuad } from './Pass'\nimport { ShaderMaterial, UniformsUtils, WebGLRenderer, WebGLRenderTarget } from 'three'\nimport { HalftoneShader } from '../shaders/HalftoneShader'\n\ntype HalftonePassParams = {\n  shape?: number\n  radius?: number\n  rotateR?: number\n  rotateB?: number\n  rotateG?: number\n  scatter?: number\n  blending?: number\n  blendingMode?: number\n  greyscale?: number\n  disable?: number\n}\n\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\n\nclass HalftonePass extends Pass {\n  public material: ShaderMaterial\n  public fsQuad: FullScreenQuad\n\n  public uniforms: any\n\n  constructor(width: number, height: number, params: HalftonePassParams) {\n    super()\n\n    if (HalftoneShader === undefined) {\n      console.error('THREE.HalftonePass requires HalftoneShader')\n    }\n\n    this.uniforms = UniformsUtils.clone(HalftoneShader.uniforms)\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      fragmentShader: HalftoneShader.fragmentShader,\n      vertexShader: HalftoneShader.vertexShader,\n    })\n\n    // set params\n    this.uniforms.width.value = width\n    this.uniforms.height.value = height\n\n    for (const key in params) {\n      if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\n        this.uniforms[key].value = params[key as keyof HalftonePassParams]\n      }\n    }\n\n    this.fsQuad = new FullScreenQuad(this.material)\n  }\n\n  public render(\n    renderer: WebGLRenderer,\n    writeBuffer: WebGLRenderTarget,\n    readBuffer: WebGLRenderTarget,\n    /*, deltaTime, maskActive */\n  ): void {\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      this.fsQuad.render(renderer)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      this.fsQuad.render(renderer)\n    }\n  }\n\n  public setSize(width: number, height: number): void {\n    this.uniforms.width.value = width\n    this.uniforms.height.value = height\n  }\n}\n\nexport { HalftonePass }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAqBMA,YAAA,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,YAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,YAAA;EAMJ,SAAAA,aAAYK,KAAA,EAAeC,MAAA,EAAgBC,MAAA,EAA4B;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,YAAA;IAC/DQ,KAAA,GAAAL,MAAA,CAAAO,IAAA;IANDC,aAAA,CAAAC,sBAAA,CAAAJ,KAAA;IACAG,aAAA,CAAAC,sBAAA,CAAAJ,KAAA;IAEAG,aAAA,CAAAC,sBAAA,CAAAJ,KAAA;IAKL,IAAIK,cAAA,KAAmB,QAAW;MAChCC,OAAA,CAAQC,KAAA,CAAM,4CAA4C;IAC5D;IAEAP,KAAA,CAAKQ,QAAA,GAAWC,aAAA,CAAcC,KAAA,CAAML,cAAA,CAAeG,QAAQ;IACtDR,KAAA,CAAAW,QAAA,GAAW,IAAIC,cAAA,CAAe;MACjCJ,QAAA,EAAUR,KAAA,CAAKQ,QAAA;MACfK,cAAA,EAAgBR,cAAA,CAAeQ,cAAA;MAC/BC,YAAA,EAAcT,cAAA,CAAeS;IAAA,CAC9B;IAGId,KAAA,CAAAQ,QAAA,CAASX,KAAA,CAAMkB,KAAA,GAAQlB,KAAA;IACvBG,KAAA,CAAAQ,QAAA,CAASV,MAAA,CAAOiB,KAAA,GAAQjB,MAAA;IAE7B,SAAWkB,GAAA,IAAOjB,MAAA,EAAQ;MACpB,IAAAA,MAAA,CAAOkB,cAAA,CAAeD,GAAG,KAAKhB,KAAA,CAAKQ,QAAA,CAASS,cAAA,CAAeD,GAAG,GAAG;QACnEhB,KAAA,CAAKQ,QAAA,CAASQ,GAAG,EAAED,KAAA,GAAQhB,MAAA,CAAOiB,GAA+B;MACnE;IACF;IAEAhB,KAAA,CAAKkB,MAAA,GAAS,IAAIC,cAAA,CAAenB,KAAA,CAAKW,QAAQ;IAAA,OAAAX,KAAA;EAChD;EAAAoB,YAAA,CAAA5B,YAAA;IAAAwB,GAAA;IAAAD,KAAA,EAEO,SAAAM,OACLC,QAAA,EACAC,WAAA,EACAC,UAAA,EAEM;MACN,KAAKb,QAAA,CAASH,QAAA,CAAS,UAAU,EAAEO,KAAA,GAAQS,UAAA,CAAWC,OAAA;MAEtD,IAAI,KAAKC,cAAA,EAAgB;QACvBJ,QAAA,CAASK,eAAA,CAAgB,IAAI;QACxB,KAAAT,MAAA,CAAOG,MAAA,CAAOC,QAAQ;MAAA,OACtB;QACLA,QAAA,CAASK,eAAA,CAAgBJ,WAAW;QACpC,IAAI,KAAKK,KAAA,EAAON,QAAA,CAASM,KAAA,CAAM;QAC1B,KAAAV,MAAA,CAAOG,MAAA,CAAOC,QAAQ;MAC7B;IACF;EAAA;IAAAN,GAAA;IAAAD,KAAA,EAEO,SAAAc,QAAQhC,KAAA,EAAeC,MAAA,EAAsB;MAC7C,KAAAU,QAAA,CAASX,KAAA,CAAMkB,KAAA,GAAQlB,KAAA;MACvB,KAAAW,QAAA,CAASV,MAAA,CAAOiB,KAAA,GAAQjB,MAAA;IAC/B;EAAA;EAAA,OAAAN,YAAA;AAAA,EAtDyBsC,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}