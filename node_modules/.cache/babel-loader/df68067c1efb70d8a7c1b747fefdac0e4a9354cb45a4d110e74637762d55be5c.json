{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Timer = /*#__PURE__*/function () {\n  function Timer() {\n    _classCallCheck(this, Timer);\n    __publicField(this, \"_previousTime\");\n    __publicField(this, \"_currentTime\");\n    __publicField(this, \"_delta\");\n    __publicField(this, \"_elapsed\");\n    __publicField(this, \"_timescale\");\n    __publicField(this, \"_useFixedDelta\");\n    __publicField(this, \"_fixedDelta\");\n    __publicField(this, \"_usePageVisibilityAPI\");\n    __publicField(this, \"_pageVisibilityHandler\");\n    this._previousTime = 0;\n    this._currentTime = 0;\n    this._delta = 0;\n    this._elapsed = 0;\n    this._timescale = 1;\n    this._useFixedDelta = false;\n    this._fixedDelta = 16.67;\n    this._usePageVisibilityAPI = typeof document !== \"undefined\" && document.hidden !== void 0;\n  }\n  // https://github.com/mrdoob/three.js/issues/20575\n  // use Page Visibility API to avoid large time delta values\n  _createClass(Timer, [{\n    key: \"connect\",\n    value: function connect() {\n      if (this._usePageVisibilityAPI) {\n        this._pageVisibilityHandler = handleVisibilityChange.bind(this);\n        document.addEventListener(\"visibilitychange\", this._pageVisibilityHandler, false);\n      }\n      return this;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (this._usePageVisibilityAPI && this._pageVisibilityHandler) {\n        document.removeEventListener(\"visibilitychange\", this._pageVisibilityHandler);\n      }\n      return this;\n    }\n  }, {\n    key: \"disableFixedDelta\",\n    value: function disableFixedDelta() {\n      this._useFixedDelta = false;\n      return this;\n    }\n  }, {\n    key: \"enableFixedDelta\",\n    value: function enableFixedDelta() {\n      this._useFixedDelta = true;\n      return this;\n    }\n  }, {\n    key: \"getDelta\",\n    value: function getDelta() {\n      return this._delta / 1e3;\n    }\n  }, {\n    key: \"getElapsedTime\",\n    value: function getElapsedTime() {\n      return this._elapsed / 1e3;\n    }\n  }, {\n    key: \"getFixedDelta\",\n    value: function getFixedDelta() {\n      return this._fixedDelta / 1e3;\n    }\n  }, {\n    key: \"getTimescale\",\n    value: function getTimescale() {\n      return this._timescale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._currentTime = this._now();\n      return this;\n    }\n  }, {\n    key: \"setFixedDelta\",\n    value: function setFixedDelta(fixedDelta) {\n      this._fixedDelta = fixedDelta * 1e3;\n      return this;\n    }\n  }, {\n    key: \"setTimescale\",\n    value: function setTimescale(timescale) {\n      this._timescale = timescale;\n      return this;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this._useFixedDelta === true) {\n        this._delta = this._fixedDelta;\n      } else {\n        this._previousTime = this._currentTime;\n        this._currentTime = this._now();\n        this._delta = this._currentTime - this._previousTime;\n      }\n      this._delta *= this._timescale;\n      this._elapsed += this._delta;\n      return this;\n    }\n    // For THREE.Clock backward compatibility\n  }, {\n    key: \"elapsedTime\",\n    get: function get() {\n      return this.getElapsedTime();\n    }\n    // private\n  }, {\n    key: \"_now\",\n    value: function _now() {\n      return (typeof performance === \"undefined\" ? Date : performance).now();\n    }\n  }]);\n  return Timer;\n}();\nfunction handleVisibilityChange() {\n  if (document.hidden === false) this.reset();\n}\nexport { Timer };","map":{"version":3,"names":["Timer","_classCallCheck","__publicField","_previousTime","_currentTime","_delta","_elapsed","_timescale","_useFixedDelta","_fixedDelta","_usePageVisibilityAPI","document","hidden","_createClass","key","value","connect","_pageVisibilityHandler","handleVisibilityChange","bind","addEventListener","dispose","removeEventListener","disableFixedDelta","enableFixedDelta","getDelta","getElapsedTime","getFixedDelta","getTimescale","reset","_now","setFixedDelta","fixedDelta","setTimescale","timescale","update","get","performance","Date","now"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\misc\\Timer.ts"],"sourcesContent":["class Timer {\n  private _previousTime: number\n  private _currentTime: number\n  private _delta: number\n  private _elapsed: number\n  private _timescale: number\n  private _useFixedDelta: boolean\n  private _fixedDelta: number\n  private _usePageVisibilityAPI: boolean\n  private _pageVisibilityHandler: ((...args: any[]) => void) | undefined\n\n  constructor() {\n    this._previousTime = 0\n    this._currentTime = 0\n    this._delta = 0\n    this._elapsed = 0\n    this._timescale = 1\n    this._useFixedDelta = false\n    this._fixedDelta = 16.67 // ms, corresponds to approx. 60 FPS\n    this._usePageVisibilityAPI = typeof document !== 'undefined' && document.hidden !== undefined\n  }\n\n  // https://github.com/mrdoob/three.js/issues/20575\n  // use Page Visibility API to avoid large time delta values\n  connect(): this {\n    if (this._usePageVisibilityAPI) {\n      this._pageVisibilityHandler = handleVisibilityChange.bind(this)\n      document.addEventListener('visibilitychange', this._pageVisibilityHandler, false)\n    }\n    return this\n  }\n\n  dispose(): this {\n    if (this._usePageVisibilityAPI && this._pageVisibilityHandler) {\n      document.removeEventListener('visibilitychange', this._pageVisibilityHandler)\n    }\n    return this\n  }\n\n  disableFixedDelta(): this {\n    this._useFixedDelta = false\n    return this\n  }\n\n  enableFixedDelta(): this {\n    this._useFixedDelta = true\n    return this\n  }\n\n  getDelta(): number {\n    return this._delta / 1000\n  }\n\n  getElapsedTime(): number {\n    return this._elapsed / 1000\n  }\n\n  getFixedDelta(): number {\n    return this._fixedDelta / 1000\n  }\n\n  getTimescale(): number {\n    return this._timescale\n  }\n\n  reset(): this {\n    this._currentTime = this._now()\n    return this\n  }\n\n  setFixedDelta(fixedDelta: number): this {\n    this._fixedDelta = fixedDelta * 1000\n    return this\n  }\n\n  setTimescale(timescale: number): this {\n    this._timescale = timescale\n    return this\n  }\n\n  update(): this {\n    if (this._useFixedDelta === true) {\n      this._delta = this._fixedDelta\n    } else {\n      this._previousTime = this._currentTime\n      this._currentTime = this._now()\n      this._delta = this._currentTime - this._previousTime\n    }\n    this._delta *= this._timescale\n    this._elapsed += this._delta // _elapsed is the accumulation of all previous deltas\n    return this\n  }\n\n  // For THREE.Clock backward compatibility\n  get elapsedTime(): number {\n    return this.getElapsedTime()\n  }\n\n  // private\n\n  private _now(): number {\n    return (typeof performance === 'undefined' ? Date : performance).now()\n  }\n}\n\nfunction handleVisibilityChange(this: Timer): void {\n  if (document.hidden === false) this.reset()\n}\n\nexport { Timer }\n"],"mappings":";;;;;;;;;;;;;;;IAAMA,KAAA;EAWJ,SAAAA,MAAA,EAAc;IAAAC,eAAA,OAAAD,KAAA;IAVNE,aAAA;IACAA,aAAA;IACAA,aAAA;IACAA,aAAA;IACAA,aAAA;IACAA,aAAA;IACAA,aAAA;IACAA,aAAA;IACAA,aAAA;IAGN,KAAKC,aAAA,GAAgB;IACrB,KAAKC,YAAA,GAAe;IACpB,KAAKC,MAAA,GAAS;IACd,KAAKC,QAAA,GAAW;IAChB,KAAKC,UAAA,GAAa;IAClB,KAAKC,cAAA,GAAiB;IACtB,KAAKC,WAAA,GAAc;IACnB,KAAKC,qBAAA,GAAwB,OAAOC,QAAA,KAAa,eAAeA,QAAA,CAASC,MAAA,KAAW;EACtF;EAAA;EAAA;EAAAC,YAAA,CAAAb,KAAA;IAAAc,GAAA;IAAAC,KAAA,EAIA,SAAAC,QAAA,EAAgB;MACd,IAAI,KAAKN,qBAAA,EAAuB;QACzB,KAAAO,sBAAA,GAAyBC,sBAAA,CAAuBC,IAAA,CAAK,IAAI;QAC9DR,QAAA,CAASS,gBAAA,CAAiB,oBAAoB,KAAKH,sBAAA,EAAwB,KAAK;MAClF;MACO;IACT;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAEA,SAAAM,QAAA,EAAgB;MACV,SAAKX,qBAAA,IAAyB,KAAKO,sBAAA,EAAwB;QACpDN,QAAA,CAAAW,mBAAA,CAAoB,oBAAoB,KAAKL,sBAAsB;MAC9E;MACO;IACT;EAAA;IAAAH,GAAA;IAAAC,KAAA,EAEA,SAAAQ,kBAAA,EAA0B;MACxB,KAAKf,cAAA,GAAiB;MACf;IACT;EAAA;IAAAM,GAAA;IAAAC,KAAA,EAEA,SAAAS,iBAAA,EAAyB;MACvB,KAAKhB,cAAA,GAAiB;MACf;IACT;EAAA;IAAAM,GAAA;IAAAC,KAAA,EAEA,SAAAU,SAAA,EAAmB;MACjB,OAAO,KAAKpB,MAAA,GAAS;IACvB;EAAA;IAAAS,GAAA;IAAAC,KAAA,EAEA,SAAAW,eAAA,EAAyB;MACvB,OAAO,KAAKpB,QAAA,GAAW;IACzB;EAAA;IAAAQ,GAAA;IAAAC,KAAA,EAEA,SAAAY,cAAA,EAAwB;MACtB,OAAO,KAAKlB,WAAA,GAAc;IAC5B;EAAA;IAAAK,GAAA;IAAAC,KAAA,EAEA,SAAAa,aAAA,EAAuB;MACrB,OAAO,KAAKrB,UAAA;IACd;EAAA;IAAAO,GAAA;IAAAC,KAAA,EAEA,SAAAc,MAAA,EAAc;MACP,KAAAzB,YAAA,GAAe,KAAK0B,IAAA;MAClB;IACT;EAAA;IAAAhB,GAAA;IAAAC,KAAA,EAEA,SAAAgB,cAAcC,UAAA,EAA0B;MACtC,KAAKvB,WAAA,GAAcuB,UAAA,GAAa;MACzB;IACT;EAAA;IAAAlB,GAAA;IAAAC,KAAA,EAEA,SAAAkB,aAAaC,SAAA,EAAyB;MACpC,KAAK3B,UAAA,GAAa2B,SAAA;MACX;IACT;EAAA;IAAApB,GAAA;IAAAC,KAAA,EAEA,SAAAoB,OAAA,EAAe;MACT,SAAK3B,cAAA,KAAmB,MAAM;QAChC,KAAKH,MAAA,GAAS,KAAKI,WAAA;MAAA,OACd;QACL,KAAKN,aAAA,GAAgB,KAAKC,YAAA;QACrB,KAAAA,YAAA,GAAe,KAAK0B,IAAA;QACpB,KAAAzB,MAAA,GAAS,KAAKD,YAAA,GAAe,KAAKD,aAAA;MACzC;MACA,KAAKE,MAAA,IAAU,KAAKE,UAAA;MACpB,KAAKD,QAAA,IAAY,KAAKD,MAAA;MACf;IACT;IAAA;EAAA;IAAAS,GAAA;IAAAsB,GAAA,EAGA,SAAAA,IAAA,EAA0B;MACxB,OAAO,KAAKV,cAAA;IACd;IAAA;EAAA;IAAAZ,GAAA;IAAAC,KAAA,EAIQ,SAAAe,KAAA,EAAe;MACrB,QAAQ,OAAOO,WAAA,KAAgB,cAAcC,IAAA,GAAOD,WAAA,EAAaE,GAAA;IACnE;EAAA;EAAA,OAAAvC,KAAA;AAAA;AAGF,SAASkB,uBAAA,EAA0C;EACjD,IAAIP,QAAA,CAASC,MAAA,KAAW,OAAO,KAAKiB,KAAA,CAAM;AAC5C"},"metadata":{},"sourceType":"module","externalDependencies":[]}