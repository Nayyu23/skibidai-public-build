{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { UniformsUtils, ShaderMaterial, LuminanceFormat, MathUtils, DataTexture, RedFormat, FloatType } from \"three\";\nimport { DigitalGlitch } from \"../shaders/DigitalGlitch.js\";\nvar GlitchPass = /*#__PURE__*/function (_Pass) {\n  _inherits(GlitchPass, _Pass);\n  var _super = _createSuper(GlitchPass);\n  function GlitchPass() {\n    var _this;\n    var dt_size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 64;\n    _classCallCheck(this, GlitchPass);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"material\");\n    __publicField(_assertThisInitialized(_this), \"fsQuad\");\n    __publicField(_assertThisInitialized(_this), \"goWild\");\n    __publicField(_assertThisInitialized(_this), \"curF\");\n    __publicField(_assertThisInitialized(_this), \"randX\");\n    __publicField(_assertThisInitialized(_this), \"uniforms\");\n    _this.uniforms = UniformsUtils.clone(DigitalGlitch.uniforms);\n    _this.uniforms[\"tDisp\"].value = _this.generateHeightmap(dt_size);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: DigitalGlitch.vertexShader,\n      fragmentShader: DigitalGlitch.fragmentShader\n    });\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    _this.goWild = false;\n    _this.curF = 0;\n    _this.generateTrigger();\n    return _this;\n  }\n  _createClass(GlitchPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      if (renderer.capabilities.isWebGL2 === false) this.uniforms[\"tDisp\"].value.format = LuminanceFormat;\n      this.uniforms[\"tDiffuse\"].value = readBuffer.texture;\n      this.uniforms[\"seed\"].value = Math.random();\n      this.uniforms[\"byp\"].value = 0;\n      if (this.curF % this.randX == 0 || this.goWild == true) {\n        this.uniforms[\"amount\"].value = Math.random() / 30;\n        this.uniforms[\"angle\"].value = MathUtils.randFloat(-Math.PI, Math.PI);\n        this.uniforms[\"seed_x\"].value = MathUtils.randFloat(-1, 1);\n        this.uniforms[\"seed_y\"].value = MathUtils.randFloat(-1, 1);\n        this.uniforms[\"distortion_x\"].value = MathUtils.randFloat(0, 1);\n        this.uniforms[\"distortion_y\"].value = MathUtils.randFloat(0, 1);\n        this.curF = 0;\n        this.generateTrigger();\n      } else if (this.curF % this.randX < this.randX / 5) {\n        this.uniforms[\"amount\"].value = Math.random() / 90;\n        this.uniforms[\"angle\"].value = MathUtils.randFloat(-Math.PI, Math.PI);\n        this.uniforms[\"distortion_x\"].value = MathUtils.randFloat(0, 1);\n        this.uniforms[\"distortion_y\"].value = MathUtils.randFloat(0, 1);\n        this.uniforms[\"seed_x\"].value = MathUtils.randFloat(-0.3, 0.3);\n        this.uniforms[\"seed_y\"].value = MathUtils.randFloat(-0.3, 0.3);\n      } else if (this.goWild == false) {\n        this.uniforms[\"byp\"].value = 1;\n      }\n      this.curF++;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n    }\n  }, {\n    key: \"generateTrigger\",\n    value: function generateTrigger() {\n      this.randX = MathUtils.randInt(120, 240);\n    }\n  }, {\n    key: \"generateHeightmap\",\n    value: function generateHeightmap(dt_size) {\n      var data_arr = new Float32Array(dt_size * dt_size);\n      var length = dt_size * dt_size;\n      for (var i = 0; i < length; i++) {\n        var val = MathUtils.randFloat(0, 1);\n        data_arr[i] = val;\n      }\n      var texture = new DataTexture(data_arr, dt_size, dt_size, RedFormat, FloatType);\n      texture.needsUpdate = true;\n      return texture;\n    }\n  }]);\n  return GlitchPass;\n}(Pass);\nexport { GlitchPass };","map":{"version":3,"names":["GlitchPass","_Pass","_inherits","_super","_createSuper","_this","dt_size","arguments","length","undefined","_classCallCheck","call","__publicField","_assertThisInitialized","uniforms","UniformsUtils","clone","DigitalGlitch","value","generateHeightmap","material","ShaderMaterial","vertexShader","fragmentShader","fsQuad","FullScreenQuad","goWild","curF","generateTrigger","_createClass","key","render","renderer","writeBuffer","readBuffer","capabilities","isWebGL2","format","LuminanceFormat","texture","Math","random","randX","MathUtils","randFloat","PI","renderToScreen","setRenderTarget","clear","randInt","data_arr","Float32Array","i","val","DataTexture","RedFormat","FloatType","needsUpdate","Pass"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\postprocessing\\GlitchPass.ts"],"sourcesContent":["import { Pass, FullScreenQuad } from './Pass'\nimport {\n  DataTexture,\n  FloatType,\n  MathUtils,\n  RedFormat,\n  LuminanceFormat,\n  ShaderMaterial,\n  UniformsUtils,\n  WebGLRenderTarget,\n  WebGLRenderer,\n  IUniform,\n} from 'three'\nimport { DigitalGlitch } from '../shaders/DigitalGlitch'\n\nclass GlitchPass extends Pass {\n  public material: ShaderMaterial\n  public fsQuad: FullScreenQuad\n  public goWild: boolean\n  public curF: number\n  public randX!: number\n\n  public uniforms: Record<keyof typeof DigitalGlitch['uniforms'], IUniform<any>>\n\n  constructor(dt_size = 64) {\n    super()\n    this.uniforms = UniformsUtils.clone(DigitalGlitch.uniforms)\n    this.uniforms['tDisp'].value = this.generateHeightmap(dt_size)\n\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: DigitalGlitch.vertexShader,\n      fragmentShader: DigitalGlitch.fragmentShader,\n    })\n\n    this.fsQuad = new FullScreenQuad(this.material)\n    this.goWild = false\n    this.curF = 0\n    this.generateTrigger()\n  }\n\n  public render(\n    renderer: WebGLRenderer,\n    writeBuffer: WebGLRenderTarget,\n    readBuffer: WebGLRenderTarget,\n    /*, deltaTime, maskActive */\n  ): void {\n    if (renderer.capabilities.isWebGL2 === false) this.uniforms['tDisp'].value.format = LuminanceFormat\n\n    this.uniforms['tDiffuse'].value = readBuffer.texture\n    this.uniforms['seed'].value = Math.random() //default seeding\n    this.uniforms['byp'].value = 0\n\n    if (this.curF % this.randX == 0 || this.goWild == true) {\n      this.uniforms['amount'].value = Math.random() / 30\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI)\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-1, 1)\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-1, 1)\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1)\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1)\n      this.curF = 0\n      this.generateTrigger()\n    } else if (this.curF % this.randX < this.randX / 5) {\n      this.uniforms['amount'].value = Math.random() / 90\n      this.uniforms['angle'].value = MathUtils.randFloat(-Math.PI, Math.PI)\n      this.uniforms['distortion_x'].value = MathUtils.randFloat(0, 1)\n      this.uniforms['distortion_y'].value = MathUtils.randFloat(0, 1)\n      this.uniforms['seed_x'].value = MathUtils.randFloat(-0.3, 0.3)\n      this.uniforms['seed_y'].value = MathUtils.randFloat(-0.3, 0.3)\n    } else if (this.goWild == false) {\n      this.uniforms['byp'].value = 1\n    }\n\n    this.curF++\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      this.fsQuad.render(renderer)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      if (this.clear) renderer.clear()\n      this.fsQuad.render(renderer)\n    }\n  }\n\n  generateTrigger(): void {\n    this.randX = MathUtils.randInt(120, 240)\n  }\n\n  generateHeightmap(dt_size: number): DataTexture {\n    const data_arr = new Float32Array(dt_size * dt_size)\n    const length = dt_size * dt_size\n\n    for (let i = 0; i < length; i++) {\n      const val = MathUtils.randFloat(0, 1)\n      data_arr[i] = val\n    }\n\n    const texture = new DataTexture(data_arr, dt_size, dt_size, RedFormat, FloatType)\n    texture.needsUpdate = true\n    return texture\n  }\n}\n\nexport { GlitchPass }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}