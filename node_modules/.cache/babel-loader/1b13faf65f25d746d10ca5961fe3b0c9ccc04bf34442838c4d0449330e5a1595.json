{"ast":null,"code":"import _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, MOUSE, Vector3, Vector2, Quaternion } from \"three\";\nvar TrackballControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(TrackballControls, _EventDispatcher);\n  var _super = _createSuper(TrackballControls);\n  function TrackballControls(object, domElement) {\n    var _this;\n    _classCallCheck(this, TrackballControls);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"enabled\", true);\n    __publicField(_assertThisInitialized(_this), \"screen\", {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    });\n    __publicField(_assertThisInitialized(_this), \"rotateSpeed\", 1);\n    __publicField(_assertThisInitialized(_this), \"zoomSpeed\", 1.2);\n    __publicField(_assertThisInitialized(_this), \"panSpeed\", 0.3);\n    __publicField(_assertThisInitialized(_this), \"noRotate\", false);\n    __publicField(_assertThisInitialized(_this), \"noZoom\", false);\n    __publicField(_assertThisInitialized(_this), \"noPan\", false);\n    __publicField(_assertThisInitialized(_this), \"staticMoving\", false);\n    __publicField(_assertThisInitialized(_this), \"dynamicDampingFactor\", 0.2);\n    __publicField(_assertThisInitialized(_this), \"minDistance\", 0);\n    __publicField(_assertThisInitialized(_this), \"maxDistance\", Infinity);\n    __publicField(_assertThisInitialized(_this), \"keys\", [\"KeyA\", \"KeyS\", \"KeyD\"\n    /*D*/]);\n\n    __publicField(_assertThisInitialized(_this), \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    __publicField(_assertThisInitialized(_this), \"object\");\n    __publicField(_assertThisInitialized(_this), \"domElement\");\n    __publicField(_assertThisInitialized(_this), \"cursorZoom\", false);\n    __publicField(_assertThisInitialized(_this), \"target\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"mousePosition\", new Vector2());\n    // internals\n    __publicField(_assertThisInitialized(_this), \"STATE\", {\n      NONE: -1,\n      ROTATE: 0,\n      ZOOM: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_ZOOM_PAN: 4\n    });\n    __publicField(_assertThisInitialized(_this), \"EPS\", 1e-6);\n    __publicField(_assertThisInitialized(_this), \"lastZoom\", 1);\n    __publicField(_assertThisInitialized(_this), \"lastPosition\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"cursorVector\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"targetVector\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"_state\", _this.STATE.NONE);\n    __publicField(_assertThisInitialized(_this), \"_keyState\", _this.STATE.NONE);\n    __publicField(_assertThisInitialized(_this), \"_eye\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"_movePrev\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"_moveCurr\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"_lastAxis\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"_lastAngle\", 0);\n    __publicField(_assertThisInitialized(_this), \"_zoomStart\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"_zoomEnd\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"_touchZoomDistanceStart\", 0);\n    __publicField(_assertThisInitialized(_this), \"_touchZoomDistanceEnd\", 0);\n    __publicField(_assertThisInitialized(_this), \"_panStart\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"_panEnd\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"target0\");\n    __publicField(_assertThisInitialized(_this), \"position0\");\n    __publicField(_assertThisInitialized(_this), \"up0\");\n    __publicField(_assertThisInitialized(_this), \"zoom0\");\n    // events\n    __publicField(_assertThisInitialized(_this), \"changeEvent\", {\n      type: \"change\"\n    });\n    __publicField(_assertThisInitialized(_this), \"startEvent\", {\n      type: \"start\"\n    });\n    __publicField(_assertThisInitialized(_this), \"endEvent\", {\n      type: \"end\"\n    });\n    __publicField(_assertThisInitialized(_this), \"onScreenVector\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"getMouseOnScreen\", function (pageX, pageY) {\n      _this.onScreenVector.set((pageX - _this.screen.left) / _this.screen.width, (pageY - _this.screen.top) / _this.screen.height);\n      return _this.onScreenVector;\n    });\n    __publicField(_assertThisInitialized(_this), \"onCircleVector\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"getMouseOnCircle\", function (pageX, pageY) {\n      _this.onCircleVector.set((pageX - _this.screen.width * 0.5 - _this.screen.left) / (_this.screen.width * 0.5), (_this.screen.height + 2 * (_this.screen.top - pageY)) / _this.screen.width\n      // screen.width intentional\n      );\n\n      return _this.onCircleVector;\n    });\n    __publicField(_assertThisInitialized(_this), \"axis\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"quaternion\", new Quaternion());\n    __publicField(_assertThisInitialized(_this), \"eyeDirection\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"objectUpDirection\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"objectSidewaysDirection\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"moveDirection\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"angle\", 0);\n    __publicField(_assertThisInitialized(_this), \"rotateCamera\", function () {\n      _this.moveDirection.set(_this._moveCurr.x - _this._movePrev.x, _this._moveCurr.y - _this._movePrev.y, 0);\n      _this.angle = _this.moveDirection.length();\n      if (_this.angle) {\n        _this._eye.copy(_this.object.position).sub(_this.target);\n        _this.eyeDirection.copy(_this._eye).normalize();\n        _this.objectUpDirection.copy(_this.object.up).normalize();\n        _this.objectSidewaysDirection.crossVectors(_this.objectUpDirection, _this.eyeDirection).normalize();\n        _this.objectUpDirection.setLength(_this._moveCurr.y - _this._movePrev.y);\n        _this.objectSidewaysDirection.setLength(_this._moveCurr.x - _this._movePrev.x);\n        _this.moveDirection.copy(_this.objectUpDirection.add(_this.objectSidewaysDirection));\n        _this.axis.crossVectors(_this.moveDirection, _this._eye).normalize();\n        _this.angle *= _this.rotateSpeed;\n        _this.quaternion.setFromAxisAngle(_this.axis, _this.angle);\n        _this._eye.applyQuaternion(_this.quaternion);\n        _this.object.up.applyQuaternion(_this.quaternion);\n        _this._lastAxis.copy(_this.axis);\n        _this._lastAngle = _this.angle;\n      } else if (!_this.staticMoving && _this._lastAngle) {\n        _this._lastAngle *= Math.sqrt(1 - _this.dynamicDampingFactor);\n        _this._eye.copy(_this.object.position).sub(_this.target);\n        _this.quaternion.setFromAxisAngle(_this._lastAxis, _this._lastAngle);\n        _this._eye.applyQuaternion(_this.quaternion);\n        _this.object.up.applyQuaternion(_this.quaternion);\n      }\n      _this._movePrev.copy(_this._moveCurr);\n    });\n    __publicField(_assertThisInitialized(_this), \"zoomCamera\", function () {\n      var factor;\n      if (_this._state === _this.STATE.TOUCH_ZOOM_PAN) {\n        factor = _this._touchZoomDistanceStart / _this._touchZoomDistanceEnd;\n        _this._touchZoomDistanceStart = _this._touchZoomDistanceEnd;\n        if (_this.object.isPerspectiveCamera) {\n          _this._eye.multiplyScalar(factor);\n        } else if (_this.object.isOrthographicCamera) {\n          _this.object.zoom /= factor;\n          _this.object.updateProjectionMatrix();\n        } else {\n          console.warn(\"THREE.TrackballControls: Unsupported camera type\");\n        }\n      } else {\n        factor = 1 + (_this._zoomEnd.y - _this._zoomStart.y) * _this.zoomSpeed;\n        if (Math.abs(factor - 1) > _this.EPS && factor > 0) {\n          if (_this.object.isPerspectiveCamera) {\n            if (factor > 1 && _this._eye.length() >= _this.maxDistance - _this.EPS) {\n              factor = 1;\n            }\n            _this._eye.multiplyScalar(factor);\n          } else if (_this.object.isOrthographicCamera) {\n            if (factor > 1 && _this.object.zoom < _this.maxDistance * _this.maxDistance) {\n              factor = 1;\n            }\n            _this.object.zoom /= factor;\n          } else {\n            console.warn(\"THREE.TrackballControls: Unsupported camera type\");\n          }\n        }\n        if (_this.staticMoving) {\n          _this._zoomStart.copy(_this._zoomEnd);\n        } else {\n          _this._zoomStart.y += (_this._zoomEnd.y - _this._zoomStart.y) * _this.dynamicDampingFactor;\n        }\n        if (_this.cursorZoom) {\n          _this.targetVector.copy(_this.target).project(_this.object);\n          var worldPos = _this.cursorVector.set(_this.mousePosition.x, _this.mousePosition.y, _this.targetVector.z).unproject(_this.object);\n          _this.target.lerpVectors(worldPos, _this.target, factor);\n        }\n        if (_this.object.isOrthographicCamera) {\n          _this.object.updateProjectionMatrix();\n        }\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"mouseChange\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"objectUp\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"pan\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"panCamera\", function () {\n      if (!_this.domElement) return;\n      _this.mouseChange.copy(_this._panEnd).sub(_this._panStart);\n      if (_this.mouseChange.lengthSq() > _this.EPS) {\n        if (_this.object.isOrthographicCamera) {\n          var orthoObject = _this.object;\n          var scale_x = (orthoObject.right - orthoObject.left) / _this.object.zoom;\n          var scale_y = (orthoObject.top - orthoObject.bottom) / _this.object.zoom;\n          _this.mouseChange.x *= scale_x;\n          _this.mouseChange.y *= scale_y;\n        } else {\n          _this.mouseChange.multiplyScalar(_this._eye.length() * _this.panSpeed);\n        }\n        _this.pan.copy(_this._eye).cross(_this.object.up).setLength(_this.mouseChange.x);\n        _this.pan.add(_this.objectUp.copy(_this.object.up).setLength(_this.mouseChange.y));\n        _this.object.position.add(_this.pan);\n        _this.target.add(_this.pan);\n        if (_this.staticMoving) {\n          _this._panStart.copy(_this._panEnd);\n        } else {\n          _this._panStart.add(_this.mouseChange.subVectors(_this._panEnd, _this._panStart).multiplyScalar(_this.dynamicDampingFactor));\n        }\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"checkDistances\", function () {\n      if (!_this.noZoom || !_this.noPan) {\n        if (_this._eye.lengthSq() > _this.maxDistance * _this.maxDistance) {\n          _this.object.position.addVectors(_this.target, _this._eye.setLength(_this.maxDistance));\n          _this._zoomStart.copy(_this._zoomEnd);\n        }\n        if (_this._eye.lengthSq() < _this.minDistance * _this.minDistance) {\n          _this.object.position.addVectors(_this.target, _this._eye.setLength(_this.minDistance));\n          _this._zoomStart.copy(_this._zoomEnd);\n        }\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"handleResize\", function () {\n      if (!_this.domElement) return;\n      var box = _this.domElement.getBoundingClientRect();\n      var d = _this.domElement.ownerDocument.documentElement;\n      _this.screen.left = box.left + window.pageXOffset - d.clientLeft;\n      _this.screen.top = box.top + window.pageYOffset - d.clientTop;\n      _this.screen.width = box.width;\n      _this.screen.height = box.height;\n    });\n    __publicField(_assertThisInitialized(_this), \"update\", function () {\n      _this._eye.subVectors(_this.object.position, _this.target);\n      if (!_this.noRotate) {\n        _this.rotateCamera();\n      }\n      if (!_this.noZoom) {\n        _this.zoomCamera();\n      }\n      if (!_this.noPan) {\n        _this.panCamera();\n      }\n      _this.object.position.addVectors(_this.target, _this._eye);\n      if (_this.object.isPerspectiveCamera) {\n        _this.checkDistances();\n        _this.object.lookAt(_this.target);\n        if (_this.lastPosition.distanceToSquared(_this.object.position) > _this.EPS) {\n          _this.dispatchEvent(_this.changeEvent);\n          _this.lastPosition.copy(_this.object.position);\n        }\n      } else if (_this.object.isOrthographicCamera) {\n        _this.object.lookAt(_this.target);\n        if (_this.lastPosition.distanceToSquared(_this.object.position) > _this.EPS || _this.lastZoom !== _this.object.zoom) {\n          _this.dispatchEvent(_this.changeEvent);\n          _this.lastPosition.copy(_this.object.position);\n          _this.lastZoom = _this.object.zoom;\n        }\n      } else {\n        console.warn(\"THREE.TrackballControls: Unsupported camera type\");\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"reset\", function () {\n      _this._state = _this.STATE.NONE;\n      _this._keyState = _this.STATE.NONE;\n      _this.target.copy(_this.target0);\n      _this.object.position.copy(_this.position0);\n      _this.object.up.copy(_this.up0);\n      _this.object.zoom = _this.zoom0;\n      _this.object.updateProjectionMatrix();\n      _this._eye.subVectors(_this.object.position, _this.target);\n      _this.object.lookAt(_this.target);\n      _this.dispatchEvent(_this.changeEvent);\n      _this.lastPosition.copy(_this.object.position);\n      _this.lastZoom = _this.object.zoom;\n    });\n    __publicField(_assertThisInitialized(_this), \"keydown\", function (event) {\n      if (_this.enabled === false) return;\n      window.removeEventListener(\"keydown\", _this.keydown);\n      if (_this._keyState !== _this.STATE.NONE) {\n        return;\n      } else if (event.code === _this.keys[_this.STATE.ROTATE] && !_this.noRotate) {\n        _this._keyState = _this.STATE.ROTATE;\n      } else if (event.code === _this.keys[_this.STATE.ZOOM] && !_this.noZoom) {\n        _this._keyState = _this.STATE.ZOOM;\n      } else if (event.code === _this.keys[_this.STATE.PAN] && !_this.noPan) {\n        _this._keyState = _this.STATE.PAN;\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"onPointerDown\", function (event) {\n      if (_this.enabled === false) return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          _this.onMouseDown(event);\n          break;\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"onPointerMove\", function (event) {\n      if (_this.enabled === false) return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          _this.onMouseMove(event);\n          break;\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"onPointerUp\", function (event) {\n      if (_this.enabled === false) return;\n      switch (event.pointerType) {\n        case \"mouse\":\n        case \"pen\":\n          _this.onMouseUp();\n          break;\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"keyup\", function () {\n      if (_this.enabled === false) return;\n      _this._keyState = _this.STATE.NONE;\n      window.addEventListener(\"keydown\", _this.keydown);\n    });\n    __publicField(_assertThisInitialized(_this), \"onMouseDown\", function (event) {\n      if (!_this.domElement) return;\n      if (_this._state === _this.STATE.NONE) {\n        switch (event.button) {\n          case _this.mouseButtons.LEFT:\n            _this._state = _this.STATE.ROTATE;\n            break;\n          case _this.mouseButtons.MIDDLE:\n            _this._state = _this.STATE.ZOOM;\n            break;\n          case _this.mouseButtons.RIGHT:\n            _this._state = _this.STATE.PAN;\n            break;\n        }\n      }\n      var state = _this._keyState !== _this.STATE.NONE ? _this._keyState : _this._state;\n      if (state === _this.STATE.ROTATE && !_this.noRotate) {\n        _this._moveCurr.copy(_this.getMouseOnCircle(event.pageX, event.pageY));\n        _this._movePrev.copy(_this._moveCurr);\n      } else if (state === _this.STATE.ZOOM && !_this.noZoom) {\n        _this._zoomStart.copy(_this.getMouseOnScreen(event.pageX, event.pageY));\n        _this._zoomEnd.copy(_this._zoomStart);\n      } else if (state === _this.STATE.PAN && !_this.noPan) {\n        _this._panStart.copy(_this.getMouseOnScreen(event.pageX, event.pageY));\n        _this._panEnd.copy(_this._panStart);\n      }\n      _this.domElement.ownerDocument.addEventListener(\"pointermove\", _this.onPointerMove);\n      _this.domElement.ownerDocument.addEventListener(\"pointerup\", _this.onPointerUp);\n      _this.dispatchEvent(_this.startEvent);\n    });\n    __publicField(_assertThisInitialized(_this), \"onMouseMove\", function (event) {\n      if (_this.enabled === false) return;\n      var state = _this._keyState !== _this.STATE.NONE ? _this._keyState : _this._state;\n      if (state === _this.STATE.ROTATE && !_this.noRotate) {\n        _this._movePrev.copy(_this._moveCurr);\n        _this._moveCurr.copy(_this.getMouseOnCircle(event.pageX, event.pageY));\n      } else if (state === _this.STATE.ZOOM && !_this.noZoom) {\n        _this._zoomEnd.copy(_this.getMouseOnScreen(event.pageX, event.pageY));\n      } else if (state === _this.STATE.PAN && !_this.noPan) {\n        _this._panEnd.copy(_this.getMouseOnScreen(event.pageX, event.pageY));\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"onMouseUp\", function () {\n      if (!_this.domElement) return;\n      if (_this.enabled === false) return;\n      _this._state = _this.STATE.NONE;\n      _this.domElement.ownerDocument.removeEventListener(\"pointermove\", _this.onPointerMove);\n      _this.domElement.ownerDocument.removeEventListener(\"pointerup\", _this.onPointerUp);\n      _this.dispatchEvent(_this.endEvent);\n    });\n    __publicField(_assertThisInitialized(_this), \"mousewheel\", function (event) {\n      if (_this.enabled === false) return;\n      if (_this.noZoom === true) return;\n      event.preventDefault();\n      switch (event.deltaMode) {\n        case 2:\n          _this._zoomStart.y -= event.deltaY * 0.025;\n          break;\n        case 1:\n          _this._zoomStart.y -= event.deltaY * 0.01;\n          break;\n        default:\n          _this._zoomStart.y -= event.deltaY * 25e-5;\n          break;\n      }\n      _this.mousePosition.x = event.offsetX / _this.screen.width * 2 - 1;\n      _this.mousePosition.y = -(event.offsetY / _this.screen.height) * 2 + 1;\n      _this.dispatchEvent(_this.startEvent);\n      _this.dispatchEvent(_this.endEvent);\n    });\n    __publicField(_assertThisInitialized(_this), \"touchstart\", function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n      switch (event.touches.length) {\n        case 1:\n          _this._state = _this.STATE.TOUCH_ROTATE;\n          _this._moveCurr.copy(_this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n          _this._movePrev.copy(_this._moveCurr);\n          break;\n        default:\n          _this._state = _this.STATE.TOUCH_ZOOM_PAN;\n          var dx = event.touches[0].pageX - event.touches[1].pageX;\n          var dy = event.touches[0].pageY - event.touches[1].pageY;\n          _this._touchZoomDistanceEnd = _this._touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy);\n          var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n          var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n          _this._panStart.copy(_this.getMouseOnScreen(x, y));\n          _this._panEnd.copy(_this._panStart);\n          break;\n      }\n      _this.dispatchEvent(_this.startEvent);\n    });\n    __publicField(_assertThisInitialized(_this), \"touchmove\", function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n      switch (event.touches.length) {\n        case 1:\n          _this._movePrev.copy(_this._moveCurr);\n          _this._moveCurr.copy(_this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n          break;\n        default:\n          var dx = event.touches[0].pageX - event.touches[1].pageX;\n          var dy = event.touches[0].pageY - event.touches[1].pageY;\n          _this._touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy);\n          var x = (event.touches[0].pageX + event.touches[1].pageX) / 2;\n          var y = (event.touches[0].pageY + event.touches[1].pageY) / 2;\n          _this._panEnd.copy(_this.getMouseOnScreen(x, y));\n          break;\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"touchend\", function (event) {\n      if (_this.enabled === false) return;\n      switch (event.touches.length) {\n        case 0:\n          _this._state = _this.STATE.NONE;\n          break;\n        case 1:\n          _this._state = _this.STATE.TOUCH_ROTATE;\n          _this._moveCurr.copy(_this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY));\n          _this._movePrev.copy(_this._moveCurr);\n          break;\n      }\n      _this.dispatchEvent(_this.endEvent);\n    });\n    __publicField(_assertThisInitialized(_this), \"contextmenu\", function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n    });\n    // https://github.com/mrdoob/three.js/issues/20575\n    __publicField(_assertThisInitialized(_this), \"connect\", function (domElement) {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n      _this.domElement = domElement;\n      _this.domElement.addEventListener(\"contextmenu\", _this.contextmenu);\n      _this.domElement.addEventListener(\"pointerdown\", _this.onPointerDown);\n      _this.domElement.addEventListener(\"wheel\", _this.mousewheel);\n      _this.domElement.addEventListener(\"touchstart\", _this.touchstart);\n      _this.domElement.addEventListener(\"touchend\", _this.touchend);\n      _this.domElement.addEventListener(\"touchmove\", _this.touchmove);\n      _this.domElement.ownerDocument.addEventListener(\"pointermove\", _this.onPointerMove);\n      _this.domElement.ownerDocument.addEventListener(\"pointerup\", _this.onPointerUp);\n      window.addEventListener(\"keydown\", _this.keydown);\n      window.addEventListener(\"keyup\", _this.keyup);\n      _this.handleResize();\n    });\n    __publicField(_assertThisInitialized(_this), \"dispose\", function () {\n      if (!_this.domElement) return;\n      _this.domElement.removeEventListener(\"contextmenu\", _this.contextmenu);\n      _this.domElement.removeEventListener(\"pointerdown\", _this.onPointerDown);\n      _this.domElement.removeEventListener(\"wheel\", _this.mousewheel);\n      _this.domElement.removeEventListener(\"touchstart\", _this.touchstart);\n      _this.domElement.removeEventListener(\"touchend\", _this.touchend);\n      _this.domElement.removeEventListener(\"touchmove\", _this.touchmove);\n      _this.domElement.ownerDocument.removeEventListener(\"pointermove\", _this.onPointerMove);\n      _this.domElement.ownerDocument.removeEventListener(\"pointerup\", _this.onPointerUp);\n      window.removeEventListener(\"keydown\", _this.keydown);\n      window.removeEventListener(\"keyup\", _this.keyup);\n    });\n    _this.object = object;\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.up0 = _this.object.up.clone();\n    _this.zoom0 = _this.object.zoom;\n    if (domElement !== void 0) _this.connect(domElement);\n    _this.update();\n    return _this;\n  }\n  return _createClass(TrackballControls);\n}(EventDispatcher);\nexport { TrackballControls };","map":{"version":3,"names":["TrackballControls","_EventDispatcher","_inherits","_super","_createSuper","object","domElement","_this","_classCallCheck","call","__publicField","_assertThisInitialized","left","top","width","height","Infinity","LEFT","MOUSE","ROTATE","MIDDLE","DOLLY","RIGHT","PAN","Vector3","Vector2","NONE","ZOOM","TOUCH_ROTATE","TOUCH_ZOOM_PAN","STATE","type","pageX","pageY","onScreenVector","set","screen","onCircleVector","Quaternion","moveDirection","_moveCurr","x","_movePrev","y","angle","length","_eye","copy","position","sub","target","eyeDirection","normalize","objectUpDirection","up","objectSidewaysDirection","crossVectors","setLength","add","axis","rotateSpeed","quaternion","setFromAxisAngle","applyQuaternion","_lastAxis","_lastAngle","staticMoving","Math","sqrt","dynamicDampingFactor","factor","_state","_touchZoomDistanceStart","_touchZoomDistanceEnd","isPerspectiveCamera","multiplyScalar","isOrthographicCamera","zoom","updateProjectionMatrix","console","warn","_zoomEnd","_zoomStart","zoomSpeed","abs","EPS","maxDistance","cursorZoom","targetVector","project","worldPos","cursorVector","mousePosition","z","unproject","lerpVectors","mouseChange","_panEnd","_panStart","lengthSq","orthoObject","scale_x","right","scale_y","bottom","panSpeed","pan","cross","objectUp","subVectors","noZoom","noPan","addVectors","minDistance","box","getBoundingClientRect","d","ownerDocument","documentElement","window","pageXOffset","clientLeft","pageYOffset","clientTop","noRotate","rotateCamera","zoomCamera","panCamera","checkDistances","lookAt","lastPosition","distanceToSquared","dispatchEvent","changeEvent","lastZoom","_keyState","target0","position0","up0","zoom0","event","enabled","removeEventListener","keydown","code","keys","pointerType","onMouseDown","onMouseMove","onMouseUp","addEventListener","button","mouseButtons","state","getMouseOnCircle","getMouseOnScreen","onPointerMove","onPointerUp","startEvent","endEvent","preventDefault","deltaMode","deltaY","offsetX","offsetY","touches","dx","dy","document","error","contextmenu","onPointerDown","mousewheel","touchstart","touchend","touchmove","keyup","handleResize","clone","connect","update","_createClass","EventDispatcher"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\controls\\TrackballControls.ts"],"sourcesContent":["import { EventDispatcher, MOUSE, Quaternion, Vector2, Vector3, PerspectiveCamera, OrthographicCamera } from 'three'\n\nclass TrackballControls extends EventDispatcher {\n  public enabled = true\n\n  public screen = { left: 0, top: 0, width: 0, height: 0 }\n\n  public rotateSpeed = 1.0\n  public zoomSpeed = 1.2\n  public panSpeed = 0.3\n\n  public noRotate = false\n  public noZoom = false\n  public noPan = false\n\n  public staticMoving = false\n  public dynamicDampingFactor = 0.2\n\n  public minDistance = 0\n  public maxDistance = Infinity\n\n  public keys: [string, string, string] = ['KeyA' /*A*/, 'KeyS' /*S*/, 'KeyD' /*D*/]\n\n  public mouseButtons = {\n    LEFT: MOUSE.ROTATE,\n    MIDDLE: MOUSE.DOLLY,\n    RIGHT: MOUSE.PAN,\n  }\n\n  public object: PerspectiveCamera | OrthographicCamera\n  public domElement: HTMLElement | undefined\n  public cursorZoom: boolean = false\n\n  readonly target = new Vector3()\n  private mousePosition = new Vector2()\n\n  // internals\n  private STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    ZOOM: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_ZOOM_PAN: 4,\n  }\n\n  private EPS = 0.000001\n  private lastZoom = 1\n\n  private lastPosition = new Vector3()\n  private cursorVector = new Vector3()\n  private targetVector = new Vector3()\n\n  private _state = this.STATE.NONE\n  private _keyState = this.STATE.NONE\n  private _eye = new Vector3()\n  private _movePrev = new Vector2()\n  private _moveCurr = new Vector2()\n  private _lastAxis = new Vector3()\n  private _lastAngle = 0\n  private _zoomStart = new Vector2()\n  private _zoomEnd = new Vector2()\n  private _touchZoomDistanceStart = 0\n  private _touchZoomDistanceEnd = 0\n  private _panStart = new Vector2()\n  private _panEnd = new Vector2()\n\n  private target0: Vector3\n  private position0: Vector3\n  private up0: Vector3\n  private zoom0: number\n\n  // events\n\n  private changeEvent = { type: 'change' }\n  private startEvent = { type: 'start' }\n  private endEvent = { type: 'end' }\n\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement?: HTMLElement) {\n    super()\n    this.object = object\n\n    // for reset\n\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.up0 = this.object.up.clone()\n    this.zoom0 = this.object.zoom\n\n    // connect events\n    if (domElement !== undefined) this.connect(domElement)\n\n    // force an update at start\n    this.update()\n  }\n\n  private onScreenVector = new Vector2()\n\n  private getMouseOnScreen = (pageX: number, pageY: number): Vector2 => {\n    this.onScreenVector.set(\n      (pageX - this.screen.left) / this.screen.width,\n      (pageY - this.screen.top) / this.screen.height,\n    )\n\n    return this.onScreenVector\n  }\n\n  private onCircleVector = new Vector2()\n\n  private getMouseOnCircle = (pageX: number, pageY: number): Vector2 => {\n    this.onCircleVector.set(\n      (pageX - this.screen.width * 0.5 - this.screen.left) / (this.screen.width * 0.5),\n      (this.screen.height + 2 * (this.screen.top - pageY)) / this.screen.width, // screen.width intentional\n    )\n\n    return this.onCircleVector\n  }\n\n  private axis = new Vector3()\n  private quaternion = new Quaternion()\n  private eyeDirection = new Vector3()\n  private objectUpDirection = new Vector3()\n  private objectSidewaysDirection = new Vector3()\n  private moveDirection = new Vector3()\n  private angle: number = 0\n\n  private rotateCamera = (): void => {\n    this.moveDirection.set(this._moveCurr.x - this._movePrev.x, this._moveCurr.y - this._movePrev.y, 0)\n    this.angle = this.moveDirection.length()\n\n    if (this.angle) {\n      this._eye.copy(this.object.position).sub(this.target)\n\n      this.eyeDirection.copy(this._eye).normalize()\n      this.objectUpDirection.copy(this.object.up).normalize()\n      this.objectSidewaysDirection.crossVectors(this.objectUpDirection, this.eyeDirection).normalize()\n\n      this.objectUpDirection.setLength(this._moveCurr.y - this._movePrev.y)\n      this.objectSidewaysDirection.setLength(this._moveCurr.x - this._movePrev.x)\n\n      this.moveDirection.copy(this.objectUpDirection.add(this.objectSidewaysDirection))\n\n      this.axis.crossVectors(this.moveDirection, this._eye).normalize()\n\n      this.angle *= this.rotateSpeed\n      this.quaternion.setFromAxisAngle(this.axis, this.angle)\n\n      this._eye.applyQuaternion(this.quaternion)\n      this.object.up.applyQuaternion(this.quaternion)\n\n      this._lastAxis.copy(this.axis)\n      this._lastAngle = this.angle\n    } else if (!this.staticMoving && this._lastAngle) {\n      this._lastAngle *= Math.sqrt(1.0 - this.dynamicDampingFactor)\n      this._eye.copy(this.object.position).sub(this.target)\n      this.quaternion.setFromAxisAngle(this._lastAxis, this._lastAngle)\n      this._eye.applyQuaternion(this.quaternion)\n      this.object.up.applyQuaternion(this.quaternion)\n    }\n\n    this._movePrev.copy(this._moveCurr)\n  }\n\n  private zoomCamera = (): void => {\n    let factor\n\n    if (this._state === this.STATE.TOUCH_ZOOM_PAN) {\n      factor = this._touchZoomDistanceStart / this._touchZoomDistanceEnd\n      this._touchZoomDistanceStart = this._touchZoomDistanceEnd\n\n      if ((this.object as PerspectiveCamera).isPerspectiveCamera) {\n        this._eye.multiplyScalar(factor)\n      } else if ((this.object as OrthographicCamera).isOrthographicCamera) {\n        this.object.zoom /= factor\n        this.object.updateProjectionMatrix()\n      } else {\n        console.warn('THREE.TrackballControls: Unsupported camera type')\n      }\n    } else {\n      factor = 1.0 + (this._zoomEnd.y - this._zoomStart.y) * this.zoomSpeed\n\n      if (Math.abs(factor - 1.0) > this.EPS && factor > 0.0) {\n        if ((this.object as PerspectiveCamera).isPerspectiveCamera) {\n          if (factor > 1.0 && this._eye.length() >= this.maxDistance - this.EPS) {\n            factor = 1.0\n          }\n          this._eye.multiplyScalar(factor)\n        } else if ((this.object as OrthographicCamera).isOrthographicCamera) {\n          if (factor > 1.0 && this.object.zoom < this.maxDistance * this.maxDistance) {\n            factor = 1.0\n          }\n          this.object.zoom /= factor\n        } else {\n          console.warn('THREE.TrackballControls: Unsupported camera type')\n        }\n      }\n\n      if (this.staticMoving) {\n        this._zoomStart.copy(this._zoomEnd)\n      } else {\n        this._zoomStart.y += (this._zoomEnd.y - this._zoomStart.y) * this.dynamicDampingFactor\n      }\n\n      if (this.cursorZoom) {\n        //determine 3D position of mouse cursor (on target plane)\n        this.targetVector.copy(this.target).project(this.object)\n        let worldPos = this.cursorVector\n          .set(this.mousePosition.x, this.mousePosition.y, this.targetVector.z)\n          .unproject(this.object)\n\n        //adjust target point so that \"point\" stays in place\n        this.target.lerpVectors(worldPos, this.target, factor)\n      }\n\n      // Update the projection matrix after all properties are changed\n      if ((this.object as OrthographicCamera).isOrthographicCamera) {\n        this.object.updateProjectionMatrix()\n      }\n    }\n  }\n\n  private mouseChange = new Vector2()\n  private objectUp = new Vector3()\n  private pan = new Vector3()\n\n  private panCamera = (): void => {\n    if (!this.domElement) return\n    this.mouseChange.copy(this._panEnd).sub(this._panStart)\n\n    if (this.mouseChange.lengthSq() > this.EPS) {\n      if ((this.object as OrthographicCamera).isOrthographicCamera) {\n        const orthoObject = this.object as OrthographicCamera\n        const scale_x = (orthoObject.right - orthoObject.left) / this.object.zoom\n        const scale_y = (orthoObject.top - orthoObject.bottom) / this.object.zoom\n\n        this.mouseChange.x *= scale_x\n        this.mouseChange.y *= scale_y\n      } else {\n        this.mouseChange.multiplyScalar(this._eye.length() * this.panSpeed)\n      }\n\n      this.pan.copy(this._eye).cross(this.object.up).setLength(this.mouseChange.x)\n      this.pan.add(this.objectUp.copy(this.object.up).setLength(this.mouseChange.y))\n\n      this.object.position.add(this.pan)\n      this.target.add(this.pan)\n\n      if (this.staticMoving) {\n        this._panStart.copy(this._panEnd)\n      } else {\n        this._panStart.add(\n          this.mouseChange.subVectors(this._panEnd, this._panStart).multiplyScalar(this.dynamicDampingFactor),\n        )\n      }\n    }\n  }\n\n  private checkDistances = (): void => {\n    if (!this.noZoom || !this.noPan) {\n      if (this._eye.lengthSq() > this.maxDistance * this.maxDistance) {\n        this.object.position.addVectors(this.target, this._eye.setLength(this.maxDistance))\n        this._zoomStart.copy(this._zoomEnd)\n      }\n\n      if (this._eye.lengthSq() < this.minDistance * this.minDistance) {\n        this.object.position.addVectors(this.target, this._eye.setLength(this.minDistance))\n        this._zoomStart.copy(this._zoomEnd)\n      }\n    }\n  }\n\n  public handleResize = (): void => {\n    if (!this.domElement) return\n    const box = this.domElement.getBoundingClientRect()\n    // adjustments come from similar code in the jquery offset() function\n    const d = this.domElement.ownerDocument.documentElement\n    this.screen.left = box.left + window.pageXOffset - d.clientLeft\n    this.screen.top = box.top + window.pageYOffset - d.clientTop\n    this.screen.width = box.width\n    this.screen.height = box.height\n  }\n\n  public update = (): void => {\n    this._eye.subVectors(this.object.position, this.target)\n\n    if (!this.noRotate) {\n      this.rotateCamera()\n    }\n\n    if (!this.noZoom) {\n      this.zoomCamera()\n    }\n\n    if (!this.noPan) {\n      this.panCamera()\n    }\n\n    this.object.position.addVectors(this.target, this._eye)\n\n    if ((this.object as PerspectiveCamera).isPerspectiveCamera) {\n      this.checkDistances()\n\n      this.object.lookAt(this.target)\n\n      if (this.lastPosition.distanceToSquared(this.object.position) > this.EPS) {\n        // @ts-ignore\n        this.dispatchEvent(this.changeEvent)\n\n        this.lastPosition.copy(this.object.position)\n      }\n    } else if ((this.object as OrthographicCamera).isOrthographicCamera) {\n      this.object.lookAt(this.target)\n\n      if (this.lastPosition.distanceToSquared(this.object.position) > this.EPS || this.lastZoom !== this.object.zoom) {\n        // @ts-ignore\n        this.dispatchEvent(this.changeEvent)\n\n        this.lastPosition.copy(this.object.position)\n        this.lastZoom = this.object.zoom\n      }\n    } else {\n      console.warn('THREE.TrackballControls: Unsupported camera type')\n    }\n  }\n\n  public reset = (): void => {\n    this._state = this.STATE.NONE\n    this._keyState = this.STATE.NONE\n\n    this.target.copy(this.target0)\n    this.object.position.copy(this.position0)\n    this.object.up.copy(this.up0)\n    this.object.zoom = this.zoom0\n\n    this.object.updateProjectionMatrix()\n\n    this._eye.subVectors(this.object.position, this.target)\n\n    this.object.lookAt(this.target)\n\n    // @ts-ignore\n    this.dispatchEvent(this.changeEvent)\n\n    this.lastPosition.copy(this.object.position)\n    this.lastZoom = this.object.zoom\n  }\n\n  private keydown = (event: KeyboardEvent): void => {\n    if (this.enabled === false) return\n\n    window.removeEventListener('keydown', this.keydown)\n\n    if (this._keyState !== this.STATE.NONE) {\n      return\n    } else if (event.code === this.keys[this.STATE.ROTATE] && !this.noRotate) {\n      this._keyState = this.STATE.ROTATE\n    } else if (event.code === this.keys[this.STATE.ZOOM] && !this.noZoom) {\n      this._keyState = this.STATE.ZOOM\n    } else if (event.code === this.keys[this.STATE.PAN] && !this.noPan) {\n      this._keyState = this.STATE.PAN\n    }\n  }\n\n  private onPointerDown = (event: PointerEvent): void => {\n    if (this.enabled === false) return\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        this.onMouseDown(event)\n        break\n\n      // TODO touch\n    }\n  }\n\n  private onPointerMove = (event: PointerEvent): void => {\n    if (this.enabled === false) return\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        this.onMouseMove(event)\n        break\n\n      // TODO touch\n    }\n  }\n\n  private onPointerUp = (event: PointerEvent): void => {\n    if (this.enabled === false) return\n\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        this.onMouseUp()\n        break\n\n      // TODO touch\n    }\n  }\n\n  private keyup = (): void => {\n    if (this.enabled === false) return\n\n    this._keyState = this.STATE.NONE\n\n    window.addEventListener('keydown', this.keydown)\n  }\n\n  private onMouseDown = (event: MouseEvent): void => {\n    if (!this.domElement) return\n    if (this._state === this.STATE.NONE) {\n      switch (event.button) {\n        case this.mouseButtons.LEFT:\n          this._state = this.STATE.ROTATE\n          break\n\n        case this.mouseButtons.MIDDLE:\n          this._state = this.STATE.ZOOM\n          break\n\n        case this.mouseButtons.RIGHT:\n          this._state = this.STATE.PAN\n          break\n      }\n    }\n\n    const state = this._keyState !== this.STATE.NONE ? this._keyState : this._state\n\n    if (state === this.STATE.ROTATE && !this.noRotate) {\n      this._moveCurr.copy(this.getMouseOnCircle(event.pageX, event.pageY))\n      this._movePrev.copy(this._moveCurr)\n    } else if (state === this.STATE.ZOOM && !this.noZoom) {\n      this._zoomStart.copy(this.getMouseOnScreen(event.pageX, event.pageY))\n      this._zoomEnd.copy(this._zoomStart)\n    } else if (state === this.STATE.PAN && !this.noPan) {\n      this._panStart.copy(this.getMouseOnScreen(event.pageX, event.pageY))\n      this._panEnd.copy(this._panStart)\n    }\n\n    this.domElement.ownerDocument.addEventListener('pointermove', this.onPointerMove)\n    this.domElement.ownerDocument.addEventListener('pointerup', this.onPointerUp)\n\n    // @ts-ignore\n    this.dispatchEvent(this.startEvent)\n  }\n\n  private onMouseMove = (event: MouseEvent): void => {\n    if (this.enabled === false) return\n\n    const state = this._keyState !== this.STATE.NONE ? this._keyState : this._state\n\n    if (state === this.STATE.ROTATE && !this.noRotate) {\n      this._movePrev.copy(this._moveCurr)\n      this._moveCurr.copy(this.getMouseOnCircle(event.pageX, event.pageY))\n    } else if (state === this.STATE.ZOOM && !this.noZoom) {\n      this._zoomEnd.copy(this.getMouseOnScreen(event.pageX, event.pageY))\n    } else if (state === this.STATE.PAN && !this.noPan) {\n      this._panEnd.copy(this.getMouseOnScreen(event.pageX, event.pageY))\n    }\n  }\n\n  private onMouseUp = (): void => {\n    if (!this.domElement) return\n    if (this.enabled === false) return\n\n    this._state = this.STATE.NONE\n\n    this.domElement.ownerDocument.removeEventListener('pointermove', this.onPointerMove)\n    this.domElement.ownerDocument.removeEventListener('pointerup', this.onPointerUp)\n\n    // @ts-ignore\n    this.dispatchEvent(this.endEvent)\n  }\n\n  private mousewheel = (event: WheelEvent): void => {\n    if (this.enabled === false) return\n\n    if (this.noZoom === true) return\n\n    event.preventDefault()\n\n    switch (event.deltaMode) {\n      case 2:\n        // Zoom in pages\n        this._zoomStart.y -= event.deltaY * 0.025\n        break\n\n      case 1:\n        // Zoom in lines\n        this._zoomStart.y -= event.deltaY * 0.01\n        break\n\n      default:\n        // undefined, 0, assume pixels\n        this._zoomStart.y -= event.deltaY * 0.00025\n        break\n    }\n\n    this.mousePosition.x = (event.offsetX / this.screen.width) * 2 - 1\n    this.mousePosition.y = -(event.offsetY / this.screen.height) * 2 + 1\n\n    // @ts-ignore\n    this.dispatchEvent(this.startEvent)\n    // @ts-ignore\n    this.dispatchEvent(this.endEvent)\n  }\n\n  private touchstart = (event: TouchEvent): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n\n    switch (event.touches.length) {\n      case 1:\n        this._state = this.STATE.TOUCH_ROTATE\n        this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY))\n        this._movePrev.copy(this._moveCurr)\n        break\n\n      default:\n        // 2 or more\n        this._state = this.STATE.TOUCH_ZOOM_PAN\n        const dx = event.touches[0].pageX - event.touches[1].pageX\n        const dy = event.touches[0].pageY - event.touches[1].pageY\n        this._touchZoomDistanceEnd = this._touchZoomDistanceStart = Math.sqrt(dx * dx + dy * dy)\n\n        const x = (event.touches[0].pageX + event.touches[1].pageX) / 2\n        const y = (event.touches[0].pageY + event.touches[1].pageY) / 2\n        this._panStart.copy(this.getMouseOnScreen(x, y))\n        this._panEnd.copy(this._panStart)\n        break\n    }\n\n    // @ts-ignore\n    this.dispatchEvent(this.startEvent)\n  }\n\n  private touchmove = (event: TouchEvent): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n\n    switch (event.touches.length) {\n      case 1:\n        this._movePrev.copy(this._moveCurr)\n        this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY))\n        break\n\n      default:\n        // 2 or more\n        const dx = event.touches[0].pageX - event.touches[1].pageX\n        const dy = event.touches[0].pageY - event.touches[1].pageY\n        this._touchZoomDistanceEnd = Math.sqrt(dx * dx + dy * dy)\n\n        const x = (event.touches[0].pageX + event.touches[1].pageX) / 2\n        const y = (event.touches[0].pageY + event.touches[1].pageY) / 2\n        this._panEnd.copy(this.getMouseOnScreen(x, y))\n        break\n    }\n  }\n\n  private touchend = (event: TouchEvent): void => {\n    if (this.enabled === false) return\n\n    switch (event.touches.length) {\n      case 0:\n        this._state = this.STATE.NONE\n        break\n\n      case 1:\n        this._state = this.STATE.TOUCH_ROTATE\n        this._moveCurr.copy(this.getMouseOnCircle(event.touches[0].pageX, event.touches[0].pageY))\n        this._movePrev.copy(this._moveCurr)\n        break\n    }\n\n    // @ts-ignore\n    this.dispatchEvent(this.endEvent)\n  }\n\n  private contextmenu = (event: MouseEvent): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n  }\n\n  // https://github.com/mrdoob/three.js/issues/20575\n  public connect = (domElement: HTMLElement): void => {\n    if ((domElement as any) === document) {\n      console.error(\n        'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.',\n      )\n    }\n    this.domElement = domElement\n    this.domElement.addEventListener('contextmenu', this.contextmenu)\n\n    this.domElement.addEventListener('pointerdown', this.onPointerDown)\n    this.domElement.addEventListener('wheel', this.mousewheel)\n\n    this.domElement.addEventListener('touchstart', this.touchstart)\n    this.domElement.addEventListener('touchend', this.touchend)\n    this.domElement.addEventListener('touchmove', this.touchmove)\n\n    this.domElement.ownerDocument.addEventListener('pointermove', this.onPointerMove)\n    this.domElement.ownerDocument.addEventListener('pointerup', this.onPointerUp)\n\n    window.addEventListener('keydown', this.keydown)\n    window.addEventListener('keyup', this.keyup)\n\n    this.handleResize()\n  }\n\n  public dispose = (): void => {\n    if (!this.domElement) return\n    this.domElement.removeEventListener('contextmenu', this.contextmenu)\n\n    this.domElement.removeEventListener('pointerdown', this.onPointerDown)\n    this.domElement.removeEventListener('wheel', this.mousewheel)\n\n    this.domElement.removeEventListener('touchstart', this.touchstart)\n    this.domElement.removeEventListener('touchend', this.touchend)\n    this.domElement.removeEventListener('touchmove', this.touchmove)\n\n    this.domElement.ownerDocument.removeEventListener('pointermove', this.onPointerMove)\n    this.domElement.ownerDocument.removeEventListener('pointerup', this.onPointerUp)\n\n    window.removeEventListener('keydown', this.keydown)\n    window.removeEventListener('keyup', this.keyup)\n  }\n}\n\nexport { TrackballControls }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}