{"ast":null,"code":"import _defineProperty from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _excluded = [\"context\", \"children\"],\n  _excluded2 = [\"context\", \"children\", \"range\", \"limit\", \"frames\"],\n  _excluded3 = [\"meshes\", \"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport Composer from 'react-composer';\nimport { setUpdateRange } from '../helpers/deprecated.js';\nfunction isFunctionChild(value) {\n  return typeof value === 'function';\n}\nvar _instanceLocalMatrix = /* @__PURE__ */new THREE.Matrix4();\nvar _instanceWorldMatrix = /* @__PURE__ */new THREE.Matrix4();\nvar _instanceIntersects = [];\nvar _mesh = /* @__PURE__ */new THREE.Mesh();\nvar PositionMesh = /*#__PURE__*/function (_THREE$Group) {\n  _inherits(PositionMesh, _THREE$Group);\n  var _super = _createSuper(PositionMesh);\n  function PositionMesh() {\n    var _this;\n    _classCallCheck(this, PositionMesh);\n    _this = _super.call(this);\n    _this.color = new THREE.Color('white');\n    _this.instance = {\n      current: undefined\n    };\n    _this.instanceKey = {\n      current: undefined\n    };\n    return _this;\n  }\n\n  // This will allow the virtual instance have bounds\n  _createClass(PositionMesh, [{\n    key: \"geometry\",\n    get: function get() {\n      var _this$instance$curren;\n      return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n    }\n\n    // And this will allow the virtual instance to receive events\n  }, {\n    key: \"raycast\",\n    value: function raycast(raycaster, intersects) {\n      var parent = this.instance.current;\n      if (!parent) return;\n      if (!parent.geometry || !parent.material) return;\n      _mesh.geometry = parent.geometry;\n      var matrixWorld = parent.matrixWorld;\n      var instanceId = parent.userData.instances.indexOf(this.instanceKey);\n      // If the instance wasn't found or exceeds the parents draw range, bail out\n      if (instanceId === -1 || instanceId > parent.count) return;\n      // calculate the world matrix for each instance\n      parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n      _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n      // the mesh represents this single instance\n      _mesh.matrixWorld = _instanceWorldMatrix;\n      // raycast side according to instance material\n      if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n      _mesh.raycast(raycaster, _instanceIntersects);\n      // process the result of raycast\n      for (var i = 0, l = _instanceIntersects.length; i < l; i++) {\n        var intersect = _instanceIntersects[i];\n        intersect.instanceId = instanceId;\n        intersect.object = this;\n        intersects.push(intersect);\n      }\n      _instanceIntersects.length = 0;\n    }\n  }]);\n  return PositionMesh;\n}(THREE.Group);\nvar globalContext = /* @__PURE__ */React.createContext(null);\nvar parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nvar instanceMatrix = /* @__PURE__ */new THREE.Matrix4();\nvar tempMatrix = /* @__PURE__ */new THREE.Matrix4();\nvar translation = /* @__PURE__ */new THREE.Vector3();\nvar rotation = /* @__PURE__ */new THREE.Quaternion();\nvar scale = /* @__PURE__ */new THREE.Vector3();\nvar isInstancedBufferAttribute = function isInstancedBufferAttribute(attr) {\n  return attr.isInstancedBufferAttribute;\n};\nvar Instance = /* @__PURE__ */React.forwardRef(function (_ref, ref) {\n  var context = _ref.context,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  React.useMemo(function () {\n    return extend({\n      PositionMesh: PositionMesh\n    });\n  }, []);\n  var group = React.useRef();\n  React.useImperativeHandle(ref, function () {\n    return group.current;\n  }, []);\n  var _React$useContext = React.useContext(context || globalContext),\n    subscribe = _React$useContext.subscribe,\n    getParent = _React$useContext.getParent;\n  React.useLayoutEffect(function () {\n    return subscribe(group);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\nvar Instances = /* @__PURE__ */React.forwardRef(function (_ref2, ref) {\n  var context = _ref2.context,\n    children = _ref2.children,\n    range = _ref2.range,\n    _ref2$limit = _ref2.limit,\n    limit = _ref2$limit === void 0 ? 1000 : _ref2$limit,\n    _ref2$frames = _ref2.frames,\n    frames = _ref2$frames === void 0 ? Infinity : _ref2$frames,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  var _React$useState = React.useState(function () {\n      var localContext = /*#__PURE__*/React.createContext(null);\n      return {\n        localContext: localContext,\n        instance: /*#__PURE__*/React.forwardRef(function (props, ref) {\n          return /*#__PURE__*/React.createElement(Instance, _extends({\n            context: localContext\n          }, props, {\n            ref: ref\n          }));\n        })\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    _React$useState2$ = _React$useState2[0],\n    localContext = _React$useState2$.localContext,\n    instance = _React$useState2$.instance;\n  var parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return parentRef.current;\n  }, []);\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    instances = _React$useState4[0],\n    setInstances = _React$useState4[1];\n  var _React$useState5 = React.useState(function () {\n      var mArray = new Float32Array(limit * 16);\n      for (var i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n      return [mArray, new Float32Array(_toConsumableArray(new Array(limit * 3)).map(function () {\n        return 1;\n      }))];\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    _React$useState6$ = _slicedToArray(_React$useState6[0], 2),\n    matrices = _React$useState6$[0],\n    colors = _React$useState6$[1];\n  React.useEffect(function () {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  var iterations = 0;\n  var count = 0;\n  var attributes = React.useRef([]);\n  React.useLayoutEffect(function () {\n    attributes.current = Object.entries(parentRef.current.geometry.attributes).filter(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        name = _ref4[0],\n        value = _ref4[1];\n      return isInstancedBufferAttribute(value);\n    });\n  });\n  useFrame(function () {\n    if (frames === Infinity || iterations < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = count;\n      setUpdateRange(parentRef.current.instanceMatrix, {\n        offset: 0,\n        count: count * 16\n      });\n      setUpdateRange(parentRef.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n      for (var i = 0; i < instances.length; i++) {\n        var _instance = instances[i].current;\n        // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n        _instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        _instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n      iterations++;\n    }\n  });\n  var api = React.useMemo(function () {\n    return {\n      getParent: function getParent() {\n        return parentRef;\n      },\n      subscribe: function subscribe(ref) {\n        setInstances(function (instances) {\n          return [].concat(_toConsumableArray(instances), [ref]);\n        });\n        return function () {\n          return setInstances(function (instances) {\n            return instances.filter(function (item) {\n              return item.current !== ref.current;\n            });\n          });\n        };\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances: instances,\n      limit: limit,\n      frames: frames\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    args: [null, null, 0],\n    raycast: function raycast() {\n      return null;\n    }\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), isFunctionChild(children) ? /*#__PURE__*/React.createElement(localContext.Provider, {\n    value: api\n  }, children(instance)) : context ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nvar Merged = /* @__PURE__ */React.forwardRef(function Merged(_ref5, ref) {\n  var meshes = _ref5.meshes,\n    children = _ref5.children,\n    props = _objectWithoutProperties(_ref5, _excluded3);\n  var isArray = Array.isArray(meshes);\n  // Filter out meshes from collections, which may contain non-meshes\n  if (!isArray) for (var _i = 0, _Object$keys = Object.keys(meshes); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (!meshes[key].isMesh) delete meshes[key];\n  }\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(function (_ref6) {\n      var geometry = _ref6.geometry,\n        material = _ref6.material;\n      return /*#__PURE__*/React.createElement(Instances, _extends({\n        key: geometry.uuid,\n        geometry: geometry,\n        material: material\n      }, props));\n    })\n  }, function (args) {\n    return isArray ? children.apply(void 0, _toConsumableArray(args)) : children(Object.keys(meshes).filter(function (key) {\n      return meshes[key].isMesh;\n    }).reduce(function (acc, key, i) {\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, args[i]));\n    }, {}));\n  }));\n});\nfunction createInstances() {\n  var context = /*#__PURE__*/React.createContext(null);\n  return [/*#__PURE__*/React.forwardRef(function (props, fref) {\n    return /*#__PURE__*/React.createElement(Instances, _extends({\n      ref: fref,\n      context: context\n    }, props));\n  }), /*#__PURE__*/React.forwardRef(function (props, fref) {\n    return /*#__PURE__*/React.createElement(Instance, _extends({\n      ref: fref,\n      context: context\n    }, props));\n  })];\n}\nvar InstancedAttribute = /*#__PURE__*/React.forwardRef(function (_ref7, fref) {\n  var name = _ref7.name,\n    defaultValue = _ref7.defaultValue;\n  var ref = React.useRef(null);\n  React.useImperativeHandle(fref, function () {\n    return ref.current;\n  }, []);\n  React.useLayoutEffect(function () {\n    var parent = ref.current.__r3f.parent;\n    var value = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n    var array = Array.from({\n      length: parent.userData.limit\n    }, function () {\n      return value;\n    }).flat();\n    ref.current.array = new Float32Array(array);\n    ref.current.itemSize = value.length;\n    ref.current.count = array.length / ref.current.itemSize;\n  }, [name]);\n  var iterations = 0;\n  useFrame(function () {\n    var parent = ref.current.__r3f.parent;\n    if (parent.userData.frames === Infinity || iterations < parent.userData.frames) {\n      for (var i = 0; i < parent.userData.instances.length; i++) {\n        var instance = parent.userData.instances[i].current;\n        var value = instance[name];\n        if (value !== undefined) {\n          ref.current.set(Array.isArray(value) ? value : typeof value.toArray === 'function' ? value.toArray() : [value], i * ref.current.itemSize);\n          ref.current.needsUpdate = true;\n        }\n      }\n      iterations++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    ref: ref,\n    attach: \"geometry-attributes-\".concat(name),\n    usage: THREE.DynamicDrawUsage\n  });\n});\nexport { Instance, InstancedAttribute, Instances, Merged, createInstances };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","Composer","setUpdateRange","isFunctionChild","value","_instanceLocalMatrix","Matrix4","_instanceWorldMatrix","_instanceIntersects","_mesh","Mesh","PositionMesh","_THREE$Group","_inherits","_super","_createSuper","_this","_classCallCheck","call","color","Color","instance","current","undefined","instanceKey","_createClass","key","get","_this$instance$curren","geometry","raycast","raycaster","intersects","parent","material","matrixWorld","instanceId","userData","instances","indexOf","count","getMatrixAt","multiplyMatrices","Material","side","i","l","length","intersect","object","push","Group","globalContext","createContext","parentMatrix","instanceMatrix","tempMatrix","translation","Vector3","rotation","Quaternion","scale","isInstancedBufferAttribute","attr","Instance","forwardRef","_ref","ref","context","children","props","_objectWithoutProperties","_excluded","useMemo","group","useRef","useImperativeHandle","_React$useContext","useContext","subscribe","getParent","useLayoutEffect","createElement","Instances","_ref2","range","_ref2$limit","limit","_ref2$frames","frames","Infinity","_excluded2","_React$useState","useState","localContext","_React$useState2","_slicedToArray","_React$useState2$","parentRef","_React$useState3","_React$useState4","setInstances","_React$useState5","mArray","Float32Array","identity","toArray","_toConsumableArray","Array","map","_React$useState6","_React$useState6$","matrices","colors","useEffect","needsUpdate","iterations","attributes","Object","entries","filter","_ref3","_ref4","name","updateMatrix","updateMatrixWorld","copy","invert","Math","min","offset","instanceColor","decompose","compose","premultiply","api","concat","item","matrixAutoUpdate","args","attach","array","itemSize","usage","DynamicDrawUsage","Provider","Merged","_ref5","meshes","_excluded3","isArray","_i","_Object$keys","keys","isMesh","components","values","_ref6","uuid","apply","reduce","acc","_objectSpread","_defineProperty","createInstances","fref","InstancedAttribute","_ref7","defaultValue","__r3f","from","flat","set"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@react-three/drei/core/Instances.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport Composer from 'react-composer';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nfunction isFunctionChild(value) {\n  return typeof value === 'function';\n}\nconst _instanceLocalMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceWorldMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceIntersects = [];\nconst _mesh = /* @__PURE__ */new THREE.Mesh();\nclass PositionMesh extends THREE.Group {\n  constructor() {\n    super();\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  // And this will allow the virtual instance to receive events\n  raycast(raycaster, intersects) {\n    const parent = this.instance.current;\n    if (!parent) return;\n    if (!parent.geometry || !parent.material) return;\n    _mesh.geometry = parent.geometry;\n    const matrixWorld = parent.matrixWorld;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.count) return;\n    // calculate the world matrix for each instance\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n    // the mesh represents this single instance\n    _mesh.matrixWorld = _instanceWorldMatrix;\n    // raycast side according to instance material\n    if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n    _mesh.raycast(raycaster, _instanceIntersects);\n    // process the result of raycast\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n      const intersect = _instanceIntersects[i];\n      intersect.instanceId = instanceId;\n      intersect.object = this;\n      intersects.push(intersect);\n    }\n    _instanceIntersects.length = 0;\n  }\n}\nconst globalContext = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst instanceMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst tempMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst translation = /* @__PURE__ */new THREE.Vector3();\nconst rotation = /* @__PURE__ */new THREE.Quaternion();\nconst scale = /* @__PURE__ */new THREE.Vector3();\nconst isInstancedBufferAttribute = attr => attr.isInstancedBufferAttribute;\nconst Instance = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionMesh\n  }), []);\n  const group = React.useRef();\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\nconst Instances = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    localContext,\n    instance\n  }] = React.useState(() => {\n    const localContext = /*#__PURE__*/React.createContext(null);\n    return {\n      localContext,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: localContext\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (let i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let iterations = 0;\n  let count = 0;\n  const attributes = React.useRef([]);\n  React.useLayoutEffect(() => {\n    attributes.current = Object.entries(parentRef.current.geometry.attributes).filter(([name, value]) => isInstancedBufferAttribute(value));\n  });\n  useFrame(() => {\n    if (frames === Infinity || iterations < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = count;\n      setUpdateRange(parentRef.current.instanceMatrix, {\n        offset: 0,\n        count: count * 16\n      });\n      setUpdateRange(parentRef.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i].current;\n        // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n        instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n      iterations++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances,\n      limit,\n      frames\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), isFunctionChild(children) ? /*#__PURE__*/React.createElement(localContext.Provider, {\n    value: api\n  }, children(instance)) : context ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nconst Merged = /* @__PURE__ */React.forwardRef(function Merged({\n  meshes,\n  children,\n  ...props\n}, ref) {\n  const isArray = Array.isArray(meshes);\n  // Filter out meshes from collections, which may contain non-meshes\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({\n    ...acc,\n    [key]: args[i]\n  }), {}))));\n});\nfunction createInstances() {\n  const context = /*#__PURE__*/React.createContext(null);\n  return [/*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instances, _extends({\n    ref: fref,\n    context: context\n  }, props))), /*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instance, _extends({\n    ref: fref,\n    context: context\n  }, props)))];\n}\nconst InstancedAttribute = /*#__PURE__*/React.forwardRef(({\n  name,\n  defaultValue\n}, fref) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    const parent = ref.current.__r3f.parent;\n    const value = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n    const array = Array.from({\n      length: parent.userData.limit\n    }, () => value).flat();\n    ref.current.array = new Float32Array(array);\n    ref.current.itemSize = value.length;\n    ref.current.count = array.length / ref.current.itemSize;\n  }, [name]);\n  let iterations = 0;\n  useFrame(() => {\n    const parent = ref.current.__r3f.parent;\n    if (parent.userData.frames === Infinity || iterations < parent.userData.frames) {\n      for (let i = 0; i < parent.userData.instances.length; i++) {\n        const instance = parent.userData.instances[i].current;\n        const value = instance[name];\n        if (value !== undefined) {\n          ref.current.set(Array.isArray(value) ? value : typeof value.toArray === 'function' ? value.toArray() : [value], i * ref.current.itemSize);\n          ref.current.needsUpdate = true;\n        }\n      }\n      iterations++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    ref: ref,\n    attach: `geometry-attributes-${name}`,\n    usage: THREE.DynamicDrawUsage\n  });\n});\n\nexport { Instance, InstancedAttribute, Instances, Merged, createInstances };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}