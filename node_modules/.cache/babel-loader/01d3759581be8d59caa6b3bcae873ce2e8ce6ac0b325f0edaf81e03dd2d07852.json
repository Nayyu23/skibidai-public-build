{"ast":null,"code":"import * as React from 'react';\nimport { useLayoutEffect, useEffect, useMemo } from 'react';\nimport { TextureLoader, Texture as Texture$1 } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nvar IsObject = function IsObject(url) {\n  return url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\n};\nfunction useTexture(input, onLoad) {\n  var gl = useThree(function (state) {\n    return state.gl;\n  });\n  var textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(function () {\n    onLoad == null || onLoad(textures);\n  }, [onLoad]);\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  // NOTE: only available for WebGLRenderer\n  useEffect(function () {\n    if ('initTexture' in gl) {\n      var textureArray = [];\n      if (Array.isArray(textures)) {\n        textureArray = textures;\n      } else if (textures instanceof Texture$1) {\n        textureArray = [textures];\n      } else if (IsObject(textures)) {\n        textureArray = Object.values(textures);\n      }\n      textureArray.forEach(function (texture) {\n        if (texture instanceof Texture$1) {\n          gl.initTexture(texture);\n        }\n      });\n    }\n  }, [gl, textures]);\n  var mappedTextures = useMemo(function () {\n    if (IsObject(input)) {\n      var keyed = {};\n      var i = 0;\n      for (var key in input) keyed[key] = textures[i++];\n      return keyed;\n    } else {\n      return textures;\n    }\n  }, [input, textures]);\n  return mappedTextures;\n}\nuseTexture.preload = function (url) {\n  return useLoader.preload(TextureLoader, url);\n};\nuseTexture.clear = function (input) {\n  return useLoader.clear(TextureLoader, input);\n};\n\n//\n\nvar Texture = function Texture(_ref) {\n  var children = _ref.children,\n    input = _ref.input,\n    onLoad = _ref.onLoad;\n  var ret = useTexture(input, onLoad);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(ret));\n};\nexport { IsObject, Texture, useTexture };","map":{"version":3,"names":["React","useLayoutEffect","useEffect","useMemo","TextureLoader","Texture","Texture$1","useThree","useLoader","IsObject","url","Object","Array","isArray","useTexture","input","onLoad","gl","state","textures","values","textureArray","forEach","texture","initTexture","mappedTextures","keyed","i","key","preload","clear","_ref","children","ret","createElement","Fragment"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@react-three/drei/core/Texture.js"],"sourcesContent":["import * as React from 'react';\nimport { useLayoutEffect, useEffect, useMemo } from 'react';\nimport { TextureLoader, Texture as Texture$1 } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input, onLoad) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(() => {\n    onLoad == null || onLoad(textures);\n  }, [onLoad]);\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  // NOTE: only available for WebGLRenderer\n  useEffect(() => {\n    if ('initTexture' in gl) {\n      let textureArray = [];\n      if (Array.isArray(textures)) {\n        textureArray = textures;\n      } else if (textures instanceof Texture$1) {\n        textureArray = [textures];\n      } else if (IsObject(textures)) {\n        textureArray = Object.values(textures);\n      }\n      textureArray.forEach(texture => {\n        if (texture instanceof Texture$1) {\n          gl.initTexture(texture);\n        }\n      });\n    }\n  }, [gl, textures]);\n  const mappedTextures = useMemo(() => {\n    if (IsObject(input)) {\n      const keyed = {};\n      let i = 0;\n      for (const key in input) keyed[key] = textures[i++];\n      return keyed;\n    } else {\n      return textures;\n    }\n  }, [input, textures]);\n  return mappedTextures;\n}\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\n//\n\nconst Texture = ({\n  children,\n  input,\n  onLoad\n}) => {\n  const ret = useTexture(input, onLoad);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(ret));\n};\n\nexport { IsObject, Texture, useTexture };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,eAAe,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,SAASC,aAAa,EAAEC,OAAO,IAAIC,SAAS,QAAQ,OAAO;AAC3D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,oBAAoB;AAExD,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAGC,GAAG;EAAA,OAAIA,GAAG,KAAKC,MAAM,CAACD,GAAG,CAAC,IAAI,CAACE,KAAK,CAACC,OAAO,CAACH,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,UAAU;AAAA;AAC/F,SAASI,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACjC,IAAMC,EAAE,GAAGV,QAAQ,CAAC,UAAAW,KAAK;IAAA,OAAIA,KAAK,CAACD,EAAE;EAAA,EAAC;EACtC,IAAME,QAAQ,GAAGX,SAAS,CAACJ,aAAa,EAAEK,QAAQ,CAACM,KAAK,CAAC,GAAGJ,MAAM,CAACS,MAAM,CAACL,KAAK,CAAC,GAAGA,KAAK,CAAC;EACzFd,eAAe,CAAC,YAAM;IACpBe,MAAM,IAAI,IAAI,IAAIA,MAAM,CAACG,QAAQ,CAAC;EACpC,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;;EAEZ;EACA;EACA;EACAd,SAAS,CAAC,YAAM;IACd,IAAI,aAAa,IAAIe,EAAE,EAAE;MACvB,IAAII,YAAY,GAAG,EAAE;MACrB,IAAIT,KAAK,CAACC,OAAO,CAACM,QAAQ,CAAC,EAAE;QAC3BE,YAAY,GAAGF,QAAQ;MACzB,CAAC,MAAM,IAAIA,QAAQ,YAAYb,SAAS,EAAE;QACxCe,YAAY,GAAG,CAACF,QAAQ,CAAC;MAC3B,CAAC,MAAM,IAAIV,QAAQ,CAACU,QAAQ,CAAC,EAAE;QAC7BE,YAAY,GAAGV,MAAM,CAACS,MAAM,CAACD,QAAQ,CAAC;MACxC;MACAE,YAAY,CAACC,OAAO,CAAC,UAAAC,OAAO,EAAI;QAC9B,IAAIA,OAAO,YAAYjB,SAAS,EAAE;UAChCW,EAAE,CAACO,WAAW,CAACD,OAAO,CAAC;QACzB;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACN,EAAE,EAAEE,QAAQ,CAAC,CAAC;EAClB,IAAMM,cAAc,GAAGtB,OAAO,CAAC,YAAM;IACnC,IAAIM,QAAQ,CAACM,KAAK,CAAC,EAAE;MACnB,IAAMW,KAAK,GAAG,CAAC,CAAC;MAChB,IAAIC,CAAC,GAAG,CAAC;MACT,KAAK,IAAMC,GAAG,IAAIb,KAAK,EAAEW,KAAK,CAACE,GAAG,CAAC,GAAGT,QAAQ,CAACQ,CAAC,EAAE,CAAC;MACnD,OAAOD,KAAK;IACd,CAAC,MAAM;MACL,OAAOP,QAAQ;IACjB;EACF,CAAC,EAAE,CAACJ,KAAK,EAAEI,QAAQ,CAAC,CAAC;EACrB,OAAOM,cAAc;AACvB;AACAX,UAAU,CAACe,OAAO,GAAG,UAAAnB,GAAG;EAAA,OAAIF,SAAS,CAACqB,OAAO,CAACzB,aAAa,EAAEM,GAAG,CAAC;AAAA;AACjEI,UAAU,CAACgB,KAAK,GAAG,UAAAf,KAAK;EAAA,OAAIP,SAAS,CAACsB,KAAK,CAAC1B,aAAa,EAAEW,KAAK,CAAC;AAAA;;AAEjE;;AAEA,IAAMV,OAAO,GAAG,SAAVA,OAAOA,CAAA0B,IAAA,EAIP;EAAA,IAHJC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRjB,KAAK,GAAAgB,IAAA,CAALhB,KAAK;IACLC,MAAM,GAAAe,IAAA,CAANf,MAAM;EAEN,IAAMiB,GAAG,GAAGnB,UAAU,CAACC,KAAK,EAAEC,MAAM,CAAC;EACrC,OAAO,aAAahB,KAAK,CAACkC,aAAa,CAAClC,KAAK,CAACmC,QAAQ,EAAE,IAAI,EAAEH,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACC,GAAG,CAAC,CAAC;AAC1G,CAAC;AAED,SAASxB,QAAQ,EAAEJ,OAAO,EAAES,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}