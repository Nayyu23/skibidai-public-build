{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { ShaderMaterial, UniformsUtils } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nvar ShaderPass = /*#__PURE__*/function (_Pass) {\n  _inherits(ShaderPass, _Pass);\n  var _super = _createSuper(ShaderPass);\n  function ShaderPass(shader) {\n    var _this;\n    var textureID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"tDiffuse\";\n    _classCallCheck(this, ShaderPass);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"textureID\");\n    __publicField(_assertThisInitialized(_this), \"uniforms\");\n    __publicField(_assertThisInitialized(_this), \"material\");\n    __publicField(_assertThisInitialized(_this), \"fsQuad\");\n    _this.textureID = textureID;\n    if (shader instanceof ShaderMaterial) {\n      _this.uniforms = shader.uniforms;\n      _this.material = shader;\n    } else {\n      _this.uniforms = UniformsUtils.clone(shader.uniforms);\n      _this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: _this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n  _createClass(ShaderPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      if (this.uniforms[this.textureID]) {\n        this.uniforms[this.textureID].value = readBuffer.texture;\n      }\n      this.fsQuad.material = this.material;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n        this.fsQuad.render(renderer);\n      }\n    }\n  }]);\n  return ShaderPass;\n}(Pass);\nexport { ShaderPass };","map":{"version":3,"names":["ShaderPass","_Pass","_inherits","_super","_createSuper","shader","_this","textureID","arguments","length","undefined","_classCallCheck","call","__publicField","_assertThisInitialized","ShaderMaterial","uniforms","material","UniformsUtils","clone","defines","Object","assign","vertexShader","fragmentShader","fsQuad","FullScreenQuad","_createClass","key","value","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","autoClearColor","autoClearDepth","autoClearStencil","Pass"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\postprocessing\\ShaderPass.ts"],"sourcesContent":["import { ShaderMaterial, UniformsUtils, WebGLRenderer, WebGLRenderTarget } from 'three'\nimport { Pass, FullScreenQuad } from './Pass'\nimport { Defines, IShader, Uniforms } from '../shaders/types'\n\nclass ShaderPass extends Pass {\n  public textureID: string\n  public uniforms: Uniforms\n  public material: ShaderMaterial\n  public fsQuad: FullScreenQuad\n\n  constructor(shader: ShaderMaterial | IShader<Uniforms, Defines | undefined>, textureID = 'tDiffuse') {\n    super()\n\n    this.textureID = textureID\n\n    if (shader instanceof ShaderMaterial) {\n      this.uniforms = shader.uniforms\n\n      this.material = shader\n    } else {\n      this.uniforms = UniformsUtils.clone(shader.uniforms)\n\n      this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader,\n      })\n    }\n\n    this.fsQuad = new FullScreenQuad(this.material)\n  }\n\n  public render(\n    renderer: WebGLRenderer,\n    writeBuffer: WebGLRenderTarget,\n    readBuffer: WebGLRenderTarget /*, deltaTime, maskActive */,\n  ): void {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture\n    }\n\n    this.fsQuad.material = this.material\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      this.fsQuad.render(renderer)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n      if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil)\n      this.fsQuad.render(renderer)\n    }\n  }\n}\n\nexport { ShaderPass }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;IAIMA,UAAA,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EAMJ,SAAAA,WAAYK,MAAA,EAAyF;IAAA,IAAAC,KAAA;IAAA,IAAxBC,SAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAY;IAAAG,eAAA,OAAAX,UAAA;IACjFM,KAAA,GAAAH,MAAA,CAAAS,IAAA;IANDC,aAAA,CAAAC,sBAAA,CAAAR,KAAA;IACAO,aAAA,CAAAC,sBAAA,CAAAR,KAAA;IACAO,aAAA,CAAAC,sBAAA,CAAAR,KAAA;IACAO,aAAA,CAAAC,sBAAA,CAAAR,KAAA;IAKLA,KAAA,CAAKC,SAAA,GAAYA,SAAA;IAEjB,IAAIF,MAAA,YAAkBU,cAAA,EAAgB;MACpCT,KAAA,CAAKU,QAAA,GAAWX,MAAA,CAAOW,QAAA;MAEvBV,KAAA,CAAKW,QAAA,GAAWZ,MAAA;IAAA,OACX;MACLC,KAAA,CAAKU,QAAA,GAAWE,aAAA,CAAcC,KAAA,CAAMd,MAAA,CAAOW,QAAQ;MAE9CV,KAAA,CAAAW,QAAA,GAAW,IAAIF,cAAA,CAAe;QACjCK,OAAA,EAASC,MAAA,CAAOC,MAAA,CAAO,IAAIjB,MAAA,CAAOe,OAAO;QACzCJ,QAAA,EAAUV,KAAA,CAAKU,QAAA;QACfO,YAAA,EAAclB,MAAA,CAAOkB,YAAA;QACrBC,cAAA,EAAgBnB,MAAA,CAAOmB;MAAA,CACxB;IACH;IAEAlB,KAAA,CAAKmB,MAAA,GAAS,IAAIC,cAAA,CAAepB,KAAA,CAAKW,QAAQ;IAAA,OAAAX,KAAA;EAChD;EAAAqB,YAAA,CAAA3B,UAAA;IAAA4B,GAAA;IAAAC,KAAA,EAEO,SAAAC,OACLC,QAAA,EACAC,WAAA,EACAC,UAAA,EACM;MACN,IAAI,KAAKjB,QAAA,CAAS,KAAKT,SAAS,GAAG;QACjC,KAAKS,QAAA,CAAS,KAAKT,SAAS,EAAEsB,KAAA,GAAQI,UAAA,CAAWC,OAAA;MACnD;MAEK,KAAAT,MAAA,CAAOR,QAAA,GAAW,KAAKA,QAAA;MAE5B,IAAI,KAAKkB,cAAA,EAAgB;QACvBJ,QAAA,CAASK,eAAA,CAAgB,IAAI;QACxB,KAAAX,MAAA,CAAOK,MAAA,CAAOC,QAAQ;MAAA,OACtB;QACLA,QAAA,CAASK,eAAA,CAAgBJ,WAAW;QAEpC,IAAI,KAAKK,KAAA,EAAON,QAAA,CAASM,KAAA,CAAMN,QAAA,CAASO,cAAA,EAAgBP,QAAA,CAASQ,cAAA,EAAgBR,QAAA,CAASS,gBAAgB;QACrG,KAAAf,MAAA,CAAOK,MAAA,CAAOC,QAAQ;MAC7B;IACF;EAAA;EAAA,OAAA/B,UAAA;AAAA,EAjDuByC,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}