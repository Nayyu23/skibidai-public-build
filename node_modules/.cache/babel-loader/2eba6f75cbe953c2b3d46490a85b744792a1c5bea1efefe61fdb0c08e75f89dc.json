{"ast":null,"code":"import _slicedToArray from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _toConsumableArray from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _objectWithoutProperties from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"material\", \"texture\", \"range\", \"limit\", \"frustumCulled\"],\n  _excluded2 = [\"opacity\", \"speed\", \"bounds\", \"segments\", \"color\", \"fade\", \"volume\", \"smallestVolume\", \"distribute\", \"growth\", \"concentrate\", \"seed\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './Texture.js';\nimport { v4 } from 'uuid';\nimport { setUpdateRange } from '../helpers/deprecated.js';\nvar CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nvar parentMatrix = /* @__PURE__ */new Matrix4();\nvar translation = /* @__PURE__ */new Vector3();\nvar rotation = /* @__PURE__ */new Quaternion();\nvar cpos = /* @__PURE__ */new Vector3();\nvar cquat = /* @__PURE__ */new Quaternion();\nvar scale = /* @__PURE__ */new Vector3();\nvar context = /* @__PURE__ */React.createContext(null);\nvar Clouds = /* @__PURE__ */React.forwardRef(function (_ref, fref) {\n  var children = _ref.children,\n    _ref$material = _ref.material,\n    material = _ref$material === void 0 ? MeshLambertMaterial : _ref$material,\n    _ref$texture = _ref.texture,\n    texture = _ref$texture === void 0 ? CLOUD_URL : _ref$texture,\n    range = _ref.range,\n    _ref$limit = _ref.limit,\n    limit = _ref$limit === void 0 ? 200 : _ref$limit,\n    frustumCulled = _ref.frustumCulled,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _image$width, _image$height;\n  var CloudMaterial = React.useMemo(function () {\n    return /*#__PURE__*/function (_material) {\n      _inherits(_class, _material);\n      var _super = _createSuper(_class);\n      function _class() {\n        var _this;\n        _classCallCheck(this, _class);\n        _this = _super.call(this);\n        var opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        _this.onBeforeCompile = function (shader) {\n          shader.vertexShader = \"attribute float opacity;\\n               varying float vOpacity;\\n              \" + shader.vertexShader.replace('#include <fog_vertex>', \"#include <fog_vertex>\\n                 vOpacity = opacity;\\n                \");\n          shader.fragmentShader = \"varying float vOpacity;\\n              \" + shader.fragmentShader.replace(\"#include <\".concat(opaque_fragment, \">\"), \"#include <\".concat(opaque_fragment, \">\\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\\n                \"));\n        };\n        return _this;\n      }\n      return _createClass(_class);\n    }(material);\n  }, [material]);\n  extend({\n    CloudMaterial: CloudMaterial\n  });\n  var instance = React.useRef(null);\n  var clouds = React.useRef([]);\n  var opacities = React.useMemo(function () {\n    return new Float32Array(Array.from({\n      length: limit\n    }, function () {\n      return 1;\n    }));\n  }, [limit]);\n  var colors = React.useMemo(function () {\n    return new Float32Array(Array.from({\n      length: limit\n    }, function () {\n      return [1, 1, 1];\n    }).flat());\n  }, [limit]);\n  var cloudTexture = useTexture(texture);\n  var t = 0;\n  var index = 0;\n  var config;\n  var qat = new Quaternion();\n  var dir = new Vector3(0, 0, 1);\n  var pos = new Vector3();\n  useFrame(function (state, delta) {\n    t = state.clock.getElapsedTime();\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort(function (a, b) {\n      return b.dist - a.dist;\n    });\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.opacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(function () {\n    var count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      offset: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.opacity, {\n      offset: 0,\n      count: count\n    });\n  });\n  var imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  var max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: _toConsumableArray(imageBounds)\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nvar CloudInstance = /* @__PURE__ */React.forwardRef(function (_ref2, fref) {\n  var _ref2$opacity = _ref2.opacity,\n    opacity = _ref2$opacity === void 0 ? 1 : _ref2$opacity,\n    _ref2$speed = _ref2.speed,\n    speed = _ref2$speed === void 0 ? 0 : _ref2$speed,\n    _ref2$bounds = _ref2.bounds,\n    bounds = _ref2$bounds === void 0 ? [5, 1, 1] : _ref2$bounds,\n    _ref2$segments = _ref2.segments,\n    segments = _ref2$segments === void 0 ? 20 : _ref2$segments,\n    _ref2$color = _ref2.color,\n    color = _ref2$color === void 0 ? '#ffffff' : _ref2$color,\n    _ref2$fade = _ref2.fade,\n    fade = _ref2$fade === void 0 ? 10 : _ref2$fade,\n    _ref2$volume = _ref2.volume,\n    volume = _ref2$volume === void 0 ? 6 : _ref2$volume,\n    _ref2$smallestVolume = _ref2.smallestVolume,\n    smallestVolume = _ref2$smallestVolume === void 0 ? 0.25 : _ref2$smallestVolume,\n    _ref2$distribute = _ref2.distribute,\n    distribute = _ref2$distribute === void 0 ? null : _ref2$distribute,\n    _ref2$growth = _ref2.growth,\n    growth = _ref2$growth === void 0 ? 4 : _ref2$growth,\n    _ref2$concentrate = _ref2.concentrate,\n    concentrate = _ref2$concentrate === void 0 ? 'inside' : _ref2$concentrate,\n    _ref2$seed = _ref2.seed,\n    seed = _ref2$seed === void 0 ? Math.random() : _ref2$seed,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  function random() {\n    var x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  var parent = React.useContext(context);\n  var ref = React.useRef(null);\n  var _React$useState = React.useState(function () {\n      return v4();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    uuid = _React$useState2[0];\n  var clouds = React.useMemo(function () {\n    return _toConsumableArray(new Array(segments)).map(function (_, index) {\n      return {\n        segments: segments,\n        bounds: new Vector3(1, 1, 1),\n        position: new Vector3(),\n        uuid: uuid,\n        index: index,\n        ref: ref,\n        dist: 0,\n        matrix: new Matrix4(),\n        color: new Color(),\n        rotation: index * (Math.PI / segments)\n      };\n    });\n  }, [segments, uuid]);\n  React.useLayoutEffect(function () {\n    clouds.forEach(function (cloud, index) {\n      var _distributed$point;\n      applyProps(cloud, {\n        volume: volume,\n        color: color,\n        speed: speed,\n        growth: growth,\n        opacity: opacity,\n        fade: fade,\n        bounds: bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      var distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n        x: random() * 2 - 1,\n        y: random() * 2 - 1,\n        z: random() * 2 - 1\n      });\n      var xDiff = Math.abs(cloud.position.x);\n      var yDiff = Math.abs(cloud.position.y);\n      var zDiff = Math.abs(cloud.position.z);\n      var max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(function () {\n    var temp = clouds;\n    parent.current = [].concat(_toConsumableArray(parent.current), _toConsumableArray(temp));\n    return function () {\n      parent.current = parent.current.filter(function (item) {\n        return item.uuid !== uuid;\n      });\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, function () {\n    return ref.current;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nvar Cloud = /* @__PURE__ */React.forwardRef(function (props, fref) {\n  var parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));else return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\nexport { Cloud, CloudInstance, Clouds };","map":{"version":3,"names":["_extends","React","REVISION","Quaternion","Vector3","DynamicDrawUsage","MeshLambertMaterial","Matrix4","Color","extend","useFrame","applyProps","useTexture","v4","setUpdateRange","CLOUD_URL","parentMatrix","translation","rotation","cpos","cquat","scale","context","createContext","Clouds","forwardRef","_ref","fref","children","_ref$material","material","_ref$texture","texture","range","_ref$limit","limit","frustumCulled","props","_objectWithoutProperties","_excluded","_image$width","_image$height","CloudMaterial","useMemo","_material","_inherits","_class","_super","_createSuper","_this","_classCallCheck","call","opaque_fragment","parseInt","replace","onBeforeCompile","shader","vertexShader","fragmentShader","concat","_createClass","instance","useRef","clouds","opacities","Float32Array","Array","from","length","colors","flat","cloudTexture","t","index","config","qat","dir","pos","state","delta","clock","getElapsedTime","copy","current","matrixWorld","invert","camera","decompose","ref","add","position","applyQuaternion","multiply","setFromAxisAngle","rotationFactor","multiplyScalar","volume","Math","sin","density","speed","growth","matrix","compose","premultiply","dist","distanceTo","sort","a","b","opacity","fade","setMatrixAt","setColorAt","color","geometry","attributes","needsUpdate","instanceMatrix","instanceColor","useLayoutEffect","count","min","undefined","offset","imageBounds","image","width","height","max","createElement","Provider","value","matrixAutoUpdate","args","usage","attach","_toConsumableArray","key","name","map","transparent","depthWrite","CloudInstance","_ref2","_ref2$opacity","_ref2$speed","_ref2$bounds","bounds","_ref2$segments","segments","_ref2$color","_ref2$fade","_ref2$volume","_ref2$smallestVolume","smallestVolume","_ref2$distribute","distribute","_ref2$growth","_ref2$concentrate","concentrate","_ref2$seed","seed","random","_excluded2","x","floor","parent","useContext","_React$useState","useState","_React$useState2","_slicedToArray","uuid","_","PI","forEach","cloud","_distributed$point","distributed","point","y","z","xDiff","abs","yDiff","zDiff","temp","filter","item","useImperativeHandle","Cloud"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@react-three/drei/core/Cloud.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './Texture.js';\nimport { v4 } from 'uuid';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nconst parentMatrix = /* @__PURE__ */new Matrix4();\nconst translation = /* @__PURE__ */new Vector3();\nconst rotation = /* @__PURE__ */new Quaternion();\nconst cpos = /* @__PURE__ */new Vector3();\nconst cquat = /* @__PURE__ */new Quaternion();\nconst scale = /* @__PURE__ */new Vector3();\nconst context = /* @__PURE__ */React.createContext(null);\nconst Clouds = /* @__PURE__ */React.forwardRef(({\n  children,\n  material = MeshLambertMaterial,\n  texture = CLOUD_URL,\n  range,\n  limit = 200,\n  frustumCulled,\n  ...props\n}, fref) => {\n  var _image$width, _image$height;\n  const CloudMaterial = React.useMemo(() => {\n    return class extends material {\n      constructor() {\n        super();\n        const opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        this.onBeforeCompile = shader => {\n          shader.vertexShader = `attribute float opacity;\n               varying float vOpacity;\n              ` + shader.vertexShader.replace('#include <fog_vertex>', `#include <fog_vertex>\n                 vOpacity = opacity;\n                `);\n          shader.fragmentShader = `varying float vOpacity;\n              ` + shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `#include <${opaque_fragment}>\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\n                `);\n        };\n      }\n    };\n  }, [material]);\n  extend({\n    CloudMaterial\n  });\n  const instance = React.useRef(null);\n  const clouds = React.useRef([]);\n  const opacities = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => 1)), [limit]);\n  const colors = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => [1, 1, 1]).flat()), [limit]);\n  const cloudTexture = useTexture(texture);\n  let t = 0;\n  let index = 0;\n  let config;\n  const qat = new Quaternion();\n  const dir = new Vector3(0, 0, 1);\n  const pos = new Vector3();\n  useFrame((state, delta) => {\n    t = state.clock.getElapsedTime();\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort((a, b) => b.dist - a.dist);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.opacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(() => {\n    const count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      offset: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.opacity, {\n      offset: 0,\n      count: count\n    });\n  });\n  let imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  let max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [...imageBounds]\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nconst CloudInstance = /* @__PURE__ */React.forwardRef(({\n  opacity = 1,\n  speed = 0,\n  bounds = [5, 1, 1],\n  segments = 20,\n  color = '#ffffff',\n  fade = 10,\n  volume = 6,\n  smallestVolume = 0.25,\n  distribute = null,\n  growth = 4,\n  concentrate = 'inside',\n  seed = Math.random(),\n  ...props\n}, fref) => {\n  function random() {\n    const x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  const parent = React.useContext(context);\n  const ref = React.useRef(null);\n  const [uuid] = React.useState(() => v4());\n  const clouds = React.useMemo(() => {\n    return [...new Array(segments)].map((_, index) => ({\n      segments,\n      bounds: new Vector3(1, 1, 1),\n      position: new Vector3(),\n      uuid,\n      index,\n      ref,\n      dist: 0,\n      matrix: new Matrix4(),\n      color: new Color(),\n      rotation: index * (Math.PI / segments)\n    }));\n  }, [segments, uuid]);\n  React.useLayoutEffect(() => {\n    clouds.forEach((cloud, index) => {\n      var _distributed$point;\n      applyProps(cloud, {\n        volume,\n        color,\n        speed,\n        growth,\n        opacity,\n        fade,\n        bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      const distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n        x: random() * 2 - 1,\n        y: random() * 2 - 1,\n        z: random() * 2 - 1\n      });\n      const xDiff = Math.abs(cloud.position.x);\n      const yDiff = Math.abs(cloud.position.y);\n      const zDiff = Math.abs(cloud.position.z);\n      const max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(() => {\n    const temp = clouds;\n    parent.current = [...parent.current, ...temp];\n    return () => {\n      parent.current = parent.current.filter(item => item.uuid !== uuid);\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nconst Cloud = /* @__PURE__ */React.forwardRef((props, fref) => {\n  const parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));else return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\n\nexport { Cloud, CloudInstance, Clouds };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}