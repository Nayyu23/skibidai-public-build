{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, TOUCH, Spherical, Vector2, Quaternion, MOUSE, PerspectiveCamera, OrthographicCamera } from \"three\";\nvar STATE = {\n  NONE: -1,\n  ROTATE: 0,\n  DOLLY: 1,\n  PAN: 2,\n  TOUCH_ROTATE: 3,\n  TOUCH_PAN: 4,\n  TOUCH_DOLLY_PAN: 5,\n  TOUCH_DOLLY_ROTATE: 6\n};\nvar CameraControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(CameraControls, _EventDispatcher);\n  var _super = _createSuper(CameraControls);\n  function CameraControls(object, domElement) {\n    var _this;\n    _classCallCheck(this, CameraControls);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"object\");\n    __publicField(_assertThisInitialized(_this), \"domElement\");\n    /** Set to false to disable this control */\n    __publicField(_assertThisInitialized(_this), \"enabled\", true);\n    /** \"target\" sets the location of focus, where the object orbits around */\n    __publicField(_assertThisInitialized(_this), \"target\", new Vector3());\n    /** Set to true to enable trackball behavior */\n    __publicField(_assertThisInitialized(_this), \"trackball\", false);\n    /** How far you can dolly in ( PerspectiveCamera only ) */\n    __publicField(_assertThisInitialized(_this), \"minDistance\", 0);\n    /** How far you can dolly out ( PerspectiveCamera only ) */\n    __publicField(_assertThisInitialized(_this), \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(_assertThisInitialized(_this), \"minZoom\", 0);\n    __publicField(_assertThisInitialized(_this), \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(_assertThisInitialized(_this), \"minPolarAngle\", 0);\n    __publicField(_assertThisInitialized(_this), \"maxPolarAngle\", Math.PI);\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    __publicField(_assertThisInitialized(_this), \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(_assertThisInitialized(_this), \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(_assertThisInitialized(_this), \"enableDamping\", false);\n    __publicField(_assertThisInitialized(_this), \"dampingFactor\", 0.05);\n    /**\n     * This option enables dollying in and out; property named as \"zoom\" for backwards compatibility\n     * Set to false to disable zooming\n     */\n    __publicField(_assertThisInitialized(_this), \"enableZoom\", true);\n    __publicField(_assertThisInitialized(_this), \"zoomSpeed\", 1);\n    /** Set to false to disable rotating */\n    __publicField(_assertThisInitialized(_this), \"enableRotate\", true);\n    __publicField(_assertThisInitialized(_this), \"rotateSpeed\", 1);\n    /** Set to false to disable panning */\n    __publicField(_assertThisInitialized(_this), \"enablePan\", true);\n    __publicField(_assertThisInitialized(_this), \"panSpeed\", 1);\n    /** if true, pan in screen-space */\n    __publicField(_assertThisInitialized(_this), \"screenSpacePanning\", false);\n    /** pixels moved per arrow key push */\n    __publicField(_assertThisInitialized(_this), \"keyPanSpeed\", 7);\n    /**\n     * Set to true to automatically rotate around the target\n     * If auto-rotate is enabled, you must call controls.update() in your animation loop\n     * auto-rotate is not supported for trackball behavior\n     */\n    __publicField(_assertThisInitialized(_this), \"autoRotate\", false);\n    __publicField(_assertThisInitialized(_this), \"autoRotateSpeed\", 2);\n    // 30 seconds per round when fps is 60\n    /** Set to false to disable use of the keys */\n    __publicField(_assertThisInitialized(_this), \"enableKeys\", true);\n    /** The four arrow keys */\n    __publicField(_assertThisInitialized(_this), \"keys\", {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\"\n    });\n    __publicField(_assertThisInitialized(_this), \"mouseButtons\");\n    /** Touch fingers */\n    __publicField(_assertThisInitialized(_this), \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n    // for reset\n    __publicField(_assertThisInitialized(_this), \"target0\");\n    __publicField(_assertThisInitialized(_this), \"position0\");\n    __publicField(_assertThisInitialized(_this), \"quaternion0\");\n    __publicField(_assertThisInitialized(_this), \"zoom0\");\n    // current position in spherical coordinates\n    __publicField(_assertThisInitialized(_this), \"spherical\", new Spherical());\n    __publicField(_assertThisInitialized(_this), \"sphericalDelta\", new Spherical());\n    __publicField(_assertThisInitialized(_this), \"changeEvent\", {\n      type: \"change\"\n    });\n    __publicField(_assertThisInitialized(_this), \"startEvent\", {\n      type: \"start\"\n    });\n    __publicField(_assertThisInitialized(_this), \"endEvent\", {\n      type: \"end\"\n    });\n    __publicField(_assertThisInitialized(_this), \"state\", STATE.NONE);\n    __publicField(_assertThisInitialized(_this), \"EPS\", 1e-6);\n    __publicField(_assertThisInitialized(_this), \"scale\", 1);\n    __publicField(_assertThisInitialized(_this), \"panOffset\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"zoomChanged\", false);\n    __publicField(_assertThisInitialized(_this), \"rotateStart\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"rotateEnd\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"rotateDelta\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"panStart\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"panEnd\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"panDelta\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"dollyStart\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"dollyEnd\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"dollyDelta\", new Vector2());\n    __publicField(_assertThisInitialized(_this), \"offset\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"lastPosition\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"lastQuaternion\", new Quaternion());\n    __publicField(_assertThisInitialized(_this), \"q\", new Quaternion());\n    __publicField(_assertThisInitialized(_this), \"v\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"vec\", new Vector3());\n    __publicField(_assertThisInitialized(_this), \"quat\");\n    __publicField(_assertThisInitialized(_this), \"quatInverse\");\n    __publicField(_assertThisInitialized(_this), \"getPolarAngle\", function () {\n      return _this.spherical.phi;\n    });\n    __publicField(_assertThisInitialized(_this), \"getAzimuthalAngle\", function () {\n      return _this.spherical.theta;\n    });\n    __publicField(_assertThisInitialized(_this), \"saveState\", function () {\n      _this.target0.copy(_this.target);\n      _this.position0.copy(_this.object.position);\n      _this.quaternion0.copy(_this.object.quaternion);\n      _this.zoom0 = _this.object.zoom;\n    });\n    __publicField(_assertThisInitialized(_this), \"reset\", function () {\n      _this.target.copy(_this.target0);\n      _this.object.position.copy(_this.position0);\n      _this.object.quaternion.copy(_this.quaternion0);\n      _this.object.zoom = _this.zoom0;\n      _this.object.updateProjectionMatrix();\n      _this.dispatchEvent(_this.changeEvent);\n      _this.update();\n      _this.state = STATE.NONE;\n    });\n    __publicField(_assertThisInitialized(_this), \"dispose\", function () {\n      _this.domElement.removeEventListener(\"contextmenu\", _this.onContextMenu, false);\n      _this.domElement.removeEventListener(\"mousedown\", _this.onMouseDown, false);\n      _this.domElement.removeEventListener(\"wheel\", _this.onMouseWheel, false);\n      _this.domElement.removeEventListener(\"touchstart\", _this.onTouchStart, false);\n      _this.domElement.removeEventListener(\"touchend\", _this.onTouchEnd, false);\n      _this.domElement.removeEventListener(\"touchmove\", _this.onTouchMove, false);\n      document.removeEventListener(\"mousemove\", _this.onMouseMove, false);\n      document.removeEventListener(\"mouseup\", _this.onMouseUp, false);\n      _this.domElement.removeEventListener(\"keydown\", _this.onKeyDown, false);\n    });\n    __publicField(_assertThisInitialized(_this), \"update\", function () {\n      var position = _this.object.position;\n      _this.offset.copy(position).sub(_this.target);\n      if (_this.trackball) {\n        if (_this.sphericalDelta.theta) {\n          _this.vec.set(0, 1, 0).applyQuaternion(_this.object.quaternion);\n          var factor = _this.enableDamping ? _this.dampingFactor : 1;\n          _this.q.setFromAxisAngle(_this.vec, _this.sphericalDelta.theta * factor);\n          _this.object.quaternion.premultiply(_this.q);\n          _this.offset.applyQuaternion(_this.q);\n        }\n        if (_this.sphericalDelta.phi) {\n          _this.vec.set(1, 0, 0).applyQuaternion(_this.object.quaternion);\n          var _factor = _this.enableDamping ? _this.dampingFactor : 1;\n          _this.q.setFromAxisAngle(_this.vec, _this.sphericalDelta.phi * _factor);\n          _this.object.quaternion.premultiply(_this.q);\n          _this.offset.applyQuaternion(_this.q);\n        }\n        _this.offset.multiplyScalar(_this.scale);\n        _this.offset.clampLength(_this.minDistance, _this.maxDistance);\n      } else {\n        _this.offset.applyQuaternion(_this.quat);\n        if (_this.autoRotate && _this.state === STATE.NONE) {\n          _this.rotateLeft(_this.getAutoRotationAngle());\n        }\n        _this.spherical.setFromVector3(_this.offset);\n        if (_this.enableDamping) {\n          _this.spherical.theta += _this.sphericalDelta.theta * _this.dampingFactor;\n          _this.spherical.phi += _this.sphericalDelta.phi * _this.dampingFactor;\n        } else {\n          _this.spherical.theta += _this.sphericalDelta.theta;\n          _this.spherical.phi += _this.sphericalDelta.phi;\n        }\n        _this.spherical.theta = Math.max(_this.minAzimuthAngle, Math.min(_this.maxAzimuthAngle, _this.spherical.theta));\n        _this.spherical.phi = Math.max(_this.minPolarAngle, Math.min(_this.maxPolarAngle, _this.spherical.phi));\n        _this.spherical.makeSafe();\n        _this.spherical.radius *= _this.scale;\n        _this.spherical.radius = Math.max(_this.minDistance, Math.min(_this.maxDistance, _this.spherical.radius));\n        _this.offset.setFromSpherical(_this.spherical);\n        _this.offset.applyQuaternion(_this.quatInverse);\n      }\n      if (_this.enableDamping === true) {\n        _this.target.addScaledVector(_this.panOffset, _this.dampingFactor);\n      } else {\n        _this.target.add(_this.panOffset);\n      }\n      position.copy(_this.target).add(_this.offset);\n      if (_this.trackball === false) {\n        _this.object.lookAt(_this.target);\n      }\n      if (_this.enableDamping === true) {\n        _this.sphericalDelta.theta *= 1 - _this.dampingFactor;\n        _this.sphericalDelta.phi *= 1 - _this.dampingFactor;\n        _this.panOffset.multiplyScalar(1 - _this.dampingFactor);\n      } else {\n        _this.sphericalDelta.set(0, 0, 0);\n        _this.panOffset.set(0, 0, 0);\n      }\n      _this.scale = 1;\n      if (_this.zoomChanged || _this.lastPosition.distanceToSquared(_this.object.position) > _this.EPS || 8 * (1 - _this.lastQuaternion.dot(_this.object.quaternion)) > _this.EPS) {\n        _this.dispatchEvent(_this.changeEvent);\n        _this.lastPosition.copy(_this.object.position);\n        _this.lastQuaternion.copy(_this.object.quaternion);\n        _this.zoomChanged = false;\n        return true;\n      }\n      return false;\n    });\n    __publicField(_assertThisInitialized(_this), \"getAutoRotationAngle\", function () {\n      return 2 * Math.PI / 60 / 60 * _this.autoRotateSpeed;\n    });\n    __publicField(_assertThisInitialized(_this), \"getZoomScale\", function () {\n      return Math.pow(0.95, _this.zoomSpeed);\n    });\n    __publicField(_assertThisInitialized(_this), \"rotateLeft\", function (angle) {\n      _this.sphericalDelta.theta -= angle;\n    });\n    __publicField(_assertThisInitialized(_this), \"rotateUp\", function (angle) {\n      _this.sphericalDelta.phi -= angle;\n    });\n    __publicField(_assertThisInitialized(_this), \"panLeft\", function (distance, objectMatrix) {\n      _this.v.setFromMatrixColumn(objectMatrix, 0);\n      _this.v.multiplyScalar(-distance);\n      _this.panOffset.add(_this.v);\n    });\n    __publicField(_assertThisInitialized(_this), \"panUp\", function (distance, objectMatrix) {\n      if (_this.screenSpacePanning === true) {\n        _this.v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        _this.v.setFromMatrixColumn(objectMatrix, 0);\n        _this.v.crossVectors(_this.object.up, _this.v);\n      }\n      _this.v.multiplyScalar(distance);\n      _this.panOffset.add(_this.v);\n    });\n    // deltaX and deltaY are in pixels; right and down are positive\n    __publicField(_assertThisInitialized(_this), \"pan\", function (deltaX, deltaY) {\n      var element = _this.domElement;\n      if (_this.object instanceof PerspectiveCamera) {\n        var position = _this.object.position;\n        _this.offset.copy(position).sub(_this.target);\n        var targetDistance = _this.offset.length();\n        targetDistance *= Math.tan(_this.object.fov / 2 * Math.PI / 180);\n        _this.panLeft(2 * deltaX * targetDistance / element.clientHeight, _this.object.matrix);\n        _this.panUp(2 * deltaY * targetDistance / element.clientHeight, _this.object.matrix);\n      } else if (_this.object.isOrthographicCamera) {\n        _this.panLeft(deltaX * (_this.object.right - _this.object.left) / _this.object.zoom / element.clientWidth, _this.object.matrix);\n        _this.panUp(deltaY * (_this.object.top - _this.object.bottom) / _this.object.zoom / element.clientHeight, _this.object.matrix);\n      } else {\n        console.warn(\"WARNING: CameraControls.js encountered an unknown camera type - pan disabled.\");\n        _this.enablePan = false;\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"dollyIn\", function (dollyScale) {\n      if (_this.object instanceof PerspectiveCamera) {\n        _this.scale /= dollyScale;\n      } else if (_this.object instanceof OrthographicCamera) {\n        _this.object.zoom = Math.max(_this.minZoom, Math.min(_this.maxZoom, _this.object.zoom * dollyScale));\n        _this.object.updateProjectionMatrix();\n        _this.zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: CameraControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        _this.enableZoom = false;\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"dollyOut\", function (dollyScale) {\n      if (_this.object instanceof PerspectiveCamera) {\n        _this.scale *= dollyScale;\n      } else if (_this.object instanceof OrthographicCamera) {\n        _this.object.zoom = Math.max(_this.minZoom, Math.min(_this.maxZoom, _this.object.zoom / dollyScale));\n        _this.object.updateProjectionMatrix();\n        _this.zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: CameraControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        _this.enableZoom = false;\n      }\n    });\n    // event callbacks - update the object state\n    __publicField(_assertThisInitialized(_this), \"handleMouseDownRotate\", function (event) {\n      _this.rotateStart.set(event.clientX, event.clientY);\n    });\n    // TODO: confirm if worthwhile to return the Vector2 instead of void\n    __publicField(_assertThisInitialized(_this), \"handleMouseDownDolly\", function (event) {\n      _this.dollyStart.set(event.clientX, event.clientY);\n    });\n    __publicField(_assertThisInitialized(_this), \"handleMouseDownPan\", function (event) {\n      _this.panStart.set(event.clientX, event.clientY);\n    });\n    __publicField(_assertThisInitialized(_this), \"handleMouseMoveRotate\", function (event) {\n      _this.rotateEnd.set(event.clientX, event.clientY);\n      _this.rotateDelta.subVectors(_this.rotateEnd, _this.rotateStart).multiplyScalar(_this.rotateSpeed);\n      var element = _this.domElement;\n      _this.rotateLeft(2 * Math.PI * _this.rotateDelta.x / element.clientHeight);\n      _this.rotateUp(2 * Math.PI * _this.rotateDelta.y / element.clientHeight);\n      _this.rotateStart.copy(_this.rotateEnd);\n      _this.update();\n    });\n    __publicField(_assertThisInitialized(_this), \"handleMouseMoveDolly\", function (event) {\n      _this.dollyEnd.set(event.clientX, event.clientY);\n      _this.dollyDelta.subVectors(_this.dollyEnd, _this.dollyStart);\n      if (_this.dollyDelta.y > 0) {\n        _this.dollyIn(_this.getZoomScale());\n      } else if (_this.dollyDelta.y < 0) {\n        _this.dollyOut(_this.getZoomScale());\n      }\n      _this.dollyStart.copy(_this.dollyEnd);\n      _this.update();\n    });\n    __publicField(_assertThisInitialized(_this), \"handleMouseMovePan\", function (event) {\n      _this.panEnd.set(event.clientX, event.clientY);\n      _this.panDelta.subVectors(_this.panEnd, _this.panStart).multiplyScalar(_this.panSpeed);\n      _this.pan(_this.panDelta.x, _this.panDelta.y);\n      _this.panStart.copy(_this.panEnd);\n      _this.update();\n    });\n    __publicField(_assertThisInitialized(_this), \"handleMouseWheel\", function (event) {\n      if (event.deltaY < 0) {\n        _this.dollyOut(_this.getZoomScale());\n      } else if (event.deltaY > 0) {\n        _this.dollyIn(_this.getZoomScale());\n      }\n      _this.update();\n    });\n    __publicField(_assertThisInitialized(_this), \"handleKeyDown\", function (event) {\n      var needsUpdate = false;\n      switch (event.code) {\n        case _this.keys.UP:\n          _this.pan(0, _this.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case _this.keys.BOTTOM:\n          _this.pan(0, -_this.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case _this.keys.LEFT:\n          _this.pan(_this.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case _this.keys.RIGHT:\n          _this.pan(-_this.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        _this.update();\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchStartRotate\", function (event) {\n      if (event.touches.length == 1) {\n        _this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        _this.rotateStart.set(x, y);\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchStartPan\", function (event) {\n      if (event.touches.length == 1) {\n        _this.panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        _this.panStart.set(x, y);\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchStartDolly\", function (event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      _this.dollyStart.set(0, distance);\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchStartDollyPan\", function (event) {\n      if (_this.enableZoom) _this.handleTouchStartDolly(event);\n      if (_this.enablePan) _this.handleTouchStartPan(event);\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchStartDollyRotate\", function (event) {\n      if (_this.enableZoom) _this.handleTouchStartDolly(event);\n      if (_this.enableRotate) _this.handleTouchStartRotate(event);\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchMoveRotate\", function (event) {\n      if (event.touches.length == 1) {\n        _this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        _this.rotateEnd.set(x, y);\n      }\n      _this.rotateDelta.subVectors(_this.rotateEnd, _this.rotateStart).multiplyScalar(_this.rotateSpeed);\n      var element = _this.domElement;\n      _this.rotateLeft(2 * Math.PI * _this.rotateDelta.x / element.clientHeight);\n      _this.rotateUp(2 * Math.PI * _this.rotateDelta.y / element.clientHeight);\n      _this.rotateStart.copy(_this.rotateEnd);\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchMovePan\", function (event) {\n      if (event.touches.length == 1) {\n        _this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        _this.panEnd.set(x, y);\n      }\n      _this.panDelta.subVectors(_this.panEnd, _this.panStart).multiplyScalar(_this.panSpeed);\n      _this.pan(_this.panDelta.x, _this.panDelta.y);\n      _this.panStart.copy(_this.panEnd);\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchMoveDolly\", function (event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      _this.dollyEnd.set(0, distance);\n      _this.dollyDelta.set(0, Math.pow(_this.dollyEnd.y / _this.dollyStart.y, _this.zoomSpeed));\n      _this.dollyIn(_this.dollyDelta.y);\n      _this.dollyStart.copy(_this.dollyEnd);\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchMoveDollyPan\", function (event) {\n      if (_this.enableZoom) _this.handleTouchMoveDolly(event);\n      if (_this.enablePan) _this.handleTouchMovePan(event);\n    });\n    __publicField(_assertThisInitialized(_this), \"handleTouchMoveDollyRotate\", function (event) {\n      if (_this.enableZoom) _this.handleTouchMoveDolly(event);\n      if (_this.enableRotate) _this.handleTouchMoveRotate(event);\n    });\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n    __publicField(_assertThisInitialized(_this), \"onMouseDown\", function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n      _this.domElement.focus ? _this.domElement.focus() : window.focus();\n      var mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = _this.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = _this.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = _this.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (_this.enableZoom === false) return;\n          _this.handleMouseDownDolly(event);\n          _this.state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (_this.enablePan === false) return;\n            _this.handleMouseDownPan(event);\n            _this.state = STATE.PAN;\n          } else {\n            if (_this.enableRotate === false) return;\n            _this.handleMouseDownRotate(event);\n            _this.state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (_this.enableRotate === false) return;\n            _this.handleMouseDownRotate(event);\n            _this.state = STATE.ROTATE;\n          } else {\n            if (_this.enablePan === false) return;\n            _this.handleMouseDownPan(event);\n            _this.state = STATE.PAN;\n          }\n          break;\n        default:\n          _this.state = STATE.NONE;\n      }\n      if (_this.state !== STATE.NONE) {\n        document.addEventListener(\"mousemove\", _this.onMouseMove, false);\n        document.addEventListener(\"mouseup\", _this.onMouseUp, false);\n        _this.dispatchEvent(_this.startEvent);\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"onMouseMove\", function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n      switch (_this.state) {\n        case STATE.ROTATE:\n          if (_this.enableRotate === false) return;\n          _this.handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (_this.enableZoom === false) return;\n          _this.handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (_this.enablePan === false) return;\n          _this.handleMouseMovePan(event);\n          break;\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"onMouseUp\", function () {\n      if (_this.enabled === false) return;\n      document.removeEventListener(\"mousemove\", _this.onMouseMove, false);\n      document.removeEventListener(\"mouseup\", _this.onMouseUp, false);\n      _this.dispatchEvent(_this.endEvent);\n      _this.state = STATE.NONE;\n    });\n    __publicField(_assertThisInitialized(_this), \"onMouseWheel\", function (event) {\n      if (_this.enabled === false || _this.enableZoom === false || _this.state !== STATE.NONE && _this.state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      _this.dispatchEvent(_this.startEvent);\n      _this.handleMouseWheel(event);\n      _this.dispatchEvent(_this.endEvent);\n    });\n    __publicField(_assertThisInitialized(_this), \"onKeyDown\", function (event) {\n      if (_this.enabled === false || _this.enableKeys === false || _this.enablePan === false) return;\n      _this.handleKeyDown(event);\n    });\n    __publicField(_assertThisInitialized(_this), \"onTouchStart\", function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n      switch (event.touches.length) {\n        case 1:\n          switch (_this.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (_this.enableRotate === false) return;\n              _this.handleTouchStartRotate(event);\n              _this.state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (_this.enablePan === false) return;\n              _this.handleTouchStartPan(event);\n              _this.state = STATE.TOUCH_PAN;\n              break;\n            default:\n              _this.state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (_this.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (_this.enableZoom === false && _this.enablePan === false) return;\n              _this.handleTouchStartDollyPan(event);\n              _this.state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (_this.enableZoom === false && _this.enableRotate === false) return;\n              _this.handleTouchStartDollyRotate(event);\n              _this.state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              _this.state = STATE.NONE;\n          }\n          break;\n        default:\n          _this.state = STATE.NONE;\n      }\n      if (_this.state !== STATE.NONE) {\n        _this.dispatchEvent(_this.startEvent);\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"onTouchMove\", function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n      switch (_this.state) {\n        case STATE.TOUCH_ROTATE:\n          if (_this.enableRotate === false) return;\n          _this.handleTouchMoveRotate(event);\n          _this.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (_this.enablePan === false) return;\n          _this.handleTouchMovePan(event);\n          _this.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (_this.enableZoom === false && _this.enablePan === false) return;\n          _this.handleTouchMoveDollyPan(event);\n          _this.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (_this.enableZoom === false && _this.enableRotate === false) return;\n          _this.handleTouchMoveDollyRotate(event);\n          _this.update();\n          break;\n        default:\n          _this.state = STATE.NONE;\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"onTouchEnd\", function () {\n      if (_this.enabled === false) return;\n      _this.dispatchEvent(_this.endEvent);\n      _this.state = STATE.NONE;\n    });\n    __publicField(_assertThisInitialized(_this), \"onContextMenu\", function (event) {\n      if (_this.enabled === false) return;\n      event.preventDefault();\n    });\n    if (domElement === void 0) {\n      console.warn('THREE.CameraControls: The second parameter \"domElement\" is now mandatory.');\n    }\n    if (domElement instanceof Document) {\n      console.error('THREE.CameraControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n    }\n    _this.object = object;\n    _this.domElement = domElement;\n    _this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    };\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.quaternion0 = _this.object.quaternion.clone();\n    _this.zoom0 = _this.object.zoom;\n    _this.quat = new Quaternion().setFromUnitVectors(_this.object.up, new Vector3(0, 1, 0));\n    _this.quatInverse = _this.quat.clone().invert();\n    _this.lastPosition = new Vector3();\n    _this.lastQuaternion = new Quaternion();\n    _this.domElement.addEventListener(\"contextmenu\", _this.onContextMenu, false);\n    _this.domElement.addEventListener(\"mousedown\", _this.onMouseDown, false);\n    _this.domElement.addEventListener(\"wheel\", _this.onMouseWheel, false);\n    _this.domElement.addEventListener(\"touchstart\", _this.onTouchStart, false);\n    _this.domElement.addEventListener(\"touchend\", _this.onTouchEnd, false);\n    _this.domElement.addEventListener(\"touchmove\", _this.onTouchMove, false);\n    _this.domElement.addEventListener(\"keydown\", _this.onKeyDown, false);\n    if (_this.domElement.tabIndex === -1) {\n      _this.domElement.tabIndex = 0;\n    }\n    _this.object.lookAt(_this.target);\n    _this.update();\n    _this.saveState();\n    return _this;\n  }\n  _createClass(CameraControls, [{\n    key: \"handleMouseUp\",\n    value: function handleMouseUp() {}\n  }, {\n    key: \"handleTouchEnd\",\n    value: function handleTouchEnd() {}\n  }]);\n  return CameraControls;\n}(EventDispatcher);\nvar OrbitControlsExp = /*#__PURE__*/function (_CameraControls) {\n  _inherits(OrbitControlsExp, _CameraControls);\n  var _super2 = _createSuper(OrbitControlsExp);\n  function OrbitControlsExp(object, domElement) {\n    var _this2;\n    _classCallCheck(this, OrbitControlsExp);\n    _this2 = _super2.call(this, object, domElement);\n    __publicField(_assertThisInitialized(_this2), \"mouseButtons\");\n    __publicField(_assertThisInitialized(_this2), \"touches\");\n    _this2.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      RIGHT: MOUSE.PAN\n    };\n    _this2.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    };\n    return _this2;\n  }\n  return _createClass(OrbitControlsExp);\n}(CameraControls);\nvar MapControlsExp = /*#__PURE__*/function (_CameraControls2) {\n  _inherits(MapControlsExp, _CameraControls2);\n  var _super3 = _createSuper(MapControlsExp);\n  function MapControlsExp(object, domElement) {\n    var _this3;\n    _classCallCheck(this, MapControlsExp);\n    _this3 = _super3.call(this, object, domElement);\n    __publicField(_assertThisInitialized(_this3), \"mouseButtons\");\n    __publicField(_assertThisInitialized(_this3), \"touches\");\n    _this3.mouseButtons = {\n      LEFT: MOUSE.PAN,\n      RIGHT: MOUSE.ROTATE\n    };\n    _this3.touches = {\n      ONE: TOUCH.PAN,\n      TWO: TOUCH.DOLLY_ROTATE\n    };\n    return _this3;\n  }\n  return _createClass(MapControlsExp);\n}(CameraControls);\nvar TrackballControlsExp = /*#__PURE__*/function (_CameraControls3) {\n  _inherits(TrackballControlsExp, _CameraControls3);\n  var _super4 = _createSuper(TrackballControlsExp);\n  function TrackballControlsExp(object, domElement) {\n    var _this4;\n    _classCallCheck(this, TrackballControlsExp);\n    _this4 = _super4.call(this, object, domElement);\n    __publicField(_assertThisInitialized(_this4), \"trackball\");\n    __publicField(_assertThisInitialized(_this4), \"screenSpacePanning\");\n    __publicField(_assertThisInitialized(_this4), \"autoRotate\");\n    __publicField(_assertThisInitialized(_this4), \"mouseButtons\");\n    __publicField(_assertThisInitialized(_this4), \"touches\");\n    _this4.trackball = true;\n    _this4.screenSpacePanning = true;\n    _this4.autoRotate = false;\n    _this4.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      RIGHT: MOUSE.PAN\n    };\n    _this4.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    };\n    return _this4;\n  }\n  return _createClass(TrackballControlsExp);\n}(CameraControls);\nexport { CameraControls, MapControlsExp, OrbitControlsExp, STATE, TrackballControlsExp };","map":{"version":3,"names":["STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","CameraControls","_EventDispatcher","_inherits","_super","_createSuper","object","domElement","_this","_classCallCheck","call","__publicField","_assertThisInitialized","Vector3","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ONE","TOUCH","TWO","DOLLY_PAN","Spherical","type","Vector2","Quaternion","spherical","phi","theta","target0","copy","target","position0","position","quaternion0","quaternion","zoom0","zoom","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","document","onMouseMove","onMouseUp","onKeyDown","offset","sub","trackball","sphericalDelta","vec","set","applyQuaternion","factor","enableDamping","dampingFactor","q","setFromAxisAngle","premultiply","multiplyScalar","scale","clampLength","minDistance","maxDistance","quat","autoRotate","rotateLeft","getAutoRotationAngle","setFromVector3","max","minAzimuthAngle","min","maxAzimuthAngle","minPolarAngle","maxPolarAngle","makeSafe","radius","setFromSpherical","quatInverse","addScaledVector","panOffset","add","lookAt","zoomChanged","lastPosition","distanceToSquared","EPS","lastQuaternion","dot","autoRotateSpeed","pow","zoomSpeed","angle","distance","objectMatrix","v","setFromMatrixColumn","screenSpacePanning","crossVectors","up","deltaX","deltaY","element","PerspectiveCamera","targetDistance","length","tan","fov","panLeft","clientHeight","matrix","panUp","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","enablePan","dollyScale","OrthographicCamera","minZoom","maxZoom","enableZoom","event","rotateStart","clientX","clientY","dollyStart","panStart","rotateEnd","rotateDelta","subVectors","rotateSpeed","x","rotateUp","y","dollyEnd","dollyDelta","dollyIn","getZoomScale","dollyOut","panEnd","panDelta","panSpeed","pan","needsUpdate","code","keys","keyPanSpeed","preventDefault","touches","pageX","pageY","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","enableRotate","handleTouchStartRotate","handleTouchMoveDolly","handleTouchMovePan","handleTouchMoveRotate","enabled","focus","window","mouseAction","button","mouseButtons","MIDDLE","MOUSE","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","handleMouseDownPan","handleMouseDownRotate","addEventListener","startEvent","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","endEvent","handleMouseWheel","enableKeys","handleKeyDown","handleTouchStartDollyPan","DOLLY_ROTATE","handleTouchStartDollyRotate","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","Document","error","clone","setFromUnitVectors","invert","tabIndex","saveState","_createClass","key","value","handleMouseUp","handleTouchEnd","EventDispatcher","OrbitControlsExp","_CameraControls","_super2","_this2","MapControlsExp","_CameraControls2","_super3","_this3","TrackballControlsExp","_CameraControls3","_super4","_this4"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\controls\\experimental\\CameraControls.ts"],"sourcesContent":["import {\n  EventDispatcher,\n  MOUSE,\n  Matrix4,\n  OrthographicCamera,\n  PerspectiveCamera,\n  Quaternion,\n  Spherical,\n  TOUCH,\n  Vector2,\n  Vector3,\n} from 'three'\n\nexport type CHANGE_EVENT = {\n  type: 'change' | 'start' | 'end'\n}\n\nexport const STATE = {\n  NONE: -1,\n  ROTATE: 0,\n  DOLLY: 1,\n  PAN: 2,\n  TOUCH_ROTATE: 3,\n  TOUCH_PAN: 4,\n  TOUCH_DOLLY_PAN: 5,\n  TOUCH_DOLLY_ROTATE: 6,\n}\n\nclass CameraControls extends EventDispatcher {\n  object: PerspectiveCamera | OrthographicCamera\n  domElement: HTMLElement\n\n  /** Set to false to disable this control */\n  enabled = true\n\n  /** \"target\" sets the location of focus, where the object orbits around */\n  target = new Vector3()\n\n  /** Set to true to enable trackball behavior */\n  trackball = false\n\n  /** How far you can dolly in ( PerspectiveCamera only ) */\n  minDistance = 0\n  /** How far you can dolly out ( PerspectiveCamera only ) */\n  maxDistance = Infinity\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  minZoom = 0\n  maxZoom = Infinity\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  minPolarAngle = 0\n  maxPolarAngle = Math.PI\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n  minAzimuthAngle = -Infinity // radians\n  maxAzimuthAngle = Infinity // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  enableDamping = false\n  dampingFactor = 0.05\n\n  /**\n   * This option enables dollying in and out; property named as \"zoom\" for backwards compatibility\n   * Set to false to disable zooming\n   */\n  enableZoom = true\n  zoomSpeed = 1.0\n\n  /** Set to false to disable rotating */\n  enableRotate = true\n  rotateSpeed = 1.0\n\n  /** Set to false to disable panning */\n  enablePan = true\n  panSpeed = 1.0\n  /** if true, pan in screen-space */\n  screenSpacePanning = false\n  /** pixels moved per arrow key push */\n  keyPanSpeed = 7.0\n\n  /**\n   * Set to true to automatically rotate around the target\n   * If auto-rotate is enabled, you must call controls.update() in your animation loop\n   * auto-rotate is not supported for trackball behavior\n   */\n  autoRotate = false\n  autoRotateSpeed = 2.0 // 30 seconds per round when fps is 60\n\n  /** Set to false to disable use of the keys */\n  enableKeys = true\n\n  /** The four arrow keys */\n  keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' }\n\n  mouseButtons: {\n    LEFT: MOUSE\n    MIDDLE?: MOUSE\n    RIGHT: MOUSE\n  }\n\n  /** Touch fingers */\n  touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN }\n\n  // for reset\n  target0: Vector3\n  position0: Vector3\n  quaternion0: Quaternion\n  zoom0: number\n\n  // current position in spherical coordinates\n  spherical = new Spherical()\n  sphericalDelta = new Spherical()\n\n  private changeEvent = { type: 'change' }\n  private startEvent = { type: 'start' }\n  private endEvent = { type: 'end' }\n  private state = STATE.NONE\n\n  private EPS = 0.000001\n\n  private scale = 1\n  private panOffset = new Vector3()\n  private zoomChanged = false\n\n  private rotateStart = new Vector2()\n  private rotateEnd = new Vector2()\n  private rotateDelta = new Vector2()\n\n  private panStart = new Vector2()\n  private panEnd = new Vector2()\n  private panDelta = new Vector2()\n\n  private dollyStart = new Vector2()\n  private dollyEnd = new Vector2()\n  private dollyDelta = new Vector2()\n\n  private offset = new Vector3()\n\n  private lastPosition = new Vector3()\n  private lastQuaternion = new Quaternion()\n\n  private q = new Quaternion()\n  private v = new Vector3()\n  private vec = new Vector3()\n\n  private quat: Quaternion\n  private quatInverse: Quaternion\n\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement: HTMLElement) {\n    super()\n\n    if (domElement === undefined) {\n      console.warn('THREE.CameraControls: The second parameter \"domElement\" is now mandatory.')\n    }\n    if (domElement instanceof Document) {\n      console.error(\n        'THREE.CameraControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.',\n      )\n    }\n\n    this.object = object\n    this.domElement = domElement\n\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN,\n    }\n\n    // for reset\n    this.target0 = this.target.clone()\n    this.position0 = this.object.position.clone()\n    this.quaternion0 = this.object.quaternion.clone()\n    this.zoom0 = this.object.zoom\n\n    //\n    // internals\n    //\n\n    // so camera.up is the orbit axis\n    this.quat = new Quaternion().setFromUnitVectors(this.object.up, new Vector3(0, 1, 0))\n    this.quatInverse = this.quat.clone().invert()\n\n    this.lastPosition = new Vector3()\n    this.lastQuaternion = new Quaternion()\n\n    this.domElement.addEventListener('contextmenu', this.onContextMenu, false)\n\n    this.domElement.addEventListener('mousedown', this.onMouseDown, false)\n    this.domElement.addEventListener('wheel', this.onMouseWheel, false)\n\n    this.domElement.addEventListener('touchstart', this.onTouchStart, false)\n    this.domElement.addEventListener('touchend', this.onTouchEnd, false)\n    this.domElement.addEventListener('touchmove', this.onTouchMove, false)\n\n    this.domElement.addEventListener('keydown', this.onKeyDown, false)\n\n    // make sure element can receive keys.\n\n    if (this.domElement.tabIndex === -1) {\n      this.domElement.tabIndex = 0\n    }\n\n    // force an update at start\n\n    this.object.lookAt(this.target)\n    this.update()\n    this.saveState()\n  }\n\n  getPolarAngle = (): number => this.spherical.phi\n\n  getAzimuthalAngle = (): number => this.spherical.theta\n\n  saveState = (): void => {\n    this.target0.copy(this.target)\n    this.position0.copy(this.object.position)\n    this.quaternion0.copy(this.object.quaternion)\n    this.zoom0 = this.object.zoom\n  }\n\n  reset = (): void => {\n    this.target.copy(this.target0)\n    this.object.position.copy(this.position0)\n    this.object.quaternion.copy(this.quaternion0)\n    this.object.zoom = this.zoom0\n\n    this.object.updateProjectionMatrix()\n    // @ts-ignore\n    this.dispatchEvent(this.changeEvent)\n\n    this.update()\n\n    this.state = STATE.NONE\n  }\n\n  dispose = (): void => {\n    this.domElement.removeEventListener('contextmenu', this.onContextMenu, false)\n    this.domElement.removeEventListener('mousedown', this.onMouseDown, false)\n    this.domElement.removeEventListener('wheel', this.onMouseWheel, false)\n\n    this.domElement.removeEventListener('touchstart', this.onTouchStart, false)\n    this.domElement.removeEventListener('touchend', this.onTouchEnd, false)\n    this.domElement.removeEventListener('touchmove', this.onTouchMove, false)\n\n    document.removeEventListener('mousemove', this.onMouseMove, false)\n    document.removeEventListener('mouseup', this.onMouseUp, false)\n\n    this.domElement.removeEventListener('keydown', this.onKeyDown, false)\n\n    //this.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  }\n\n  private update = (): boolean => {\n    const position = this.object.position\n\n    this.offset.copy(position).sub(this.target)\n\n    if (this.trackball) {\n      // rotate around screen-space y-axis\n\n      if (this.sphericalDelta.theta) {\n        this.vec.set(0, 1, 0).applyQuaternion(this.object.quaternion)\n\n        const factor = this.enableDamping ? this.dampingFactor : 1\n\n        this.q.setFromAxisAngle(this.vec, this.sphericalDelta.theta * factor)\n\n        this.object.quaternion.premultiply(this.q)\n        this.offset.applyQuaternion(this.q)\n      }\n\n      // rotate around screen-space x-axis\n\n      if (this.sphericalDelta.phi) {\n        this.vec.set(1, 0, 0).applyQuaternion(this.object.quaternion)\n\n        const factor = this.enableDamping ? this.dampingFactor : 1\n\n        this.q.setFromAxisAngle(this.vec, this.sphericalDelta.phi * factor)\n\n        this.object.quaternion.premultiply(this.q)\n        this.offset.applyQuaternion(this.q)\n      }\n\n      this.offset.multiplyScalar(this.scale)\n      this.offset.clampLength(this.minDistance, this.maxDistance)\n    } else {\n      // rotate offset to \"y-axis-is-up\" space\n      this.offset.applyQuaternion(this.quat)\n\n      if (this.autoRotate && this.state === STATE.NONE) {\n        this.rotateLeft(this.getAutoRotationAngle())\n      }\n\n      this.spherical.setFromVector3(this.offset)\n\n      if (this.enableDamping) {\n        this.spherical.theta += this.sphericalDelta.theta * this.dampingFactor\n        this.spherical.phi += this.sphericalDelta.phi * this.dampingFactor\n      } else {\n        this.spherical.theta += this.sphericalDelta.theta\n        this.spherical.phi += this.sphericalDelta.phi\n      }\n\n      // restrict theta to be between desired limits\n      this.spherical.theta = Math.max(this.minAzimuthAngle, Math.min(this.maxAzimuthAngle, this.spherical.theta))\n\n      // restrict phi to be between desired limits\n      this.spherical.phi = Math.max(this.minPolarAngle, Math.min(this.maxPolarAngle, this.spherical.phi))\n\n      this.spherical.makeSafe()\n\n      this.spherical.radius *= this.scale\n\n      // restrict radius to be between desired limits\n      this.spherical.radius = Math.max(this.minDistance, Math.min(this.maxDistance, this.spherical.radius))\n\n      this.offset.setFromSpherical(this.spherical)\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      this.offset.applyQuaternion(this.quatInverse)\n    }\n\n    // move target to panned location\n\n    if (this.enableDamping === true) {\n      this.target.addScaledVector(this.panOffset, this.dampingFactor)\n    } else {\n      this.target.add(this.panOffset)\n    }\n\n    position.copy(this.target).add(this.offset)\n\n    if (this.trackball === false) {\n      this.object.lookAt(this.target)\n    }\n\n    if (this.enableDamping === true) {\n      this.sphericalDelta.theta *= 1 - this.dampingFactor\n      this.sphericalDelta.phi *= 1 - this.dampingFactor\n\n      this.panOffset.multiplyScalar(1 - this.dampingFactor)\n    } else {\n      this.sphericalDelta.set(0, 0, 0)\n\n      this.panOffset.set(0, 0, 0)\n    }\n\n    this.scale = 1\n\n    // update condition is:\n    // min(camera displacement, camera rotation in radians)^2 > EPS\n    // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n    if (\n      this.zoomChanged ||\n      this.lastPosition.distanceToSquared(this.object.position) > this.EPS ||\n      8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS\n    ) {\n      // @ts-ignore\n      this.dispatchEvent(this.changeEvent)\n\n      this.lastPosition.copy(this.object.position)\n      this.lastQuaternion.copy(this.object.quaternion)\n      this.zoomChanged = false\n\n      return true\n    }\n\n    return false\n  }\n\n  private getAutoRotationAngle = (): number => ((2 * Math.PI) / 60 / 60) * this.autoRotateSpeed\n\n  private getZoomScale = (): number => Math.pow(0.95, this.zoomSpeed)\n\n  private rotateLeft = (angle: number): void => {\n    this.sphericalDelta.theta -= angle\n  }\n\n  private rotateUp = (angle: number): void => {\n    this.sphericalDelta.phi -= angle\n  }\n\n  private panLeft = (distance: number, objectMatrix: Matrix4): void => {\n    this.v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n    this.v.multiplyScalar(-distance)\n\n    this.panOffset.add(this.v)\n  }\n\n  private panUp = (distance: number, objectMatrix: Matrix4): void => {\n    if (this.screenSpacePanning === true) {\n      this.v.setFromMatrixColumn(objectMatrix, 1)\n    } else {\n      this.v.setFromMatrixColumn(objectMatrix, 0)\n      this.v.crossVectors(this.object.up, this.v)\n    }\n\n    this.v.multiplyScalar(distance)\n\n    this.panOffset.add(this.v)\n  }\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  private pan = (deltaX: number, deltaY: number): void => {\n    const element = this.domElement\n\n    if (this.object instanceof PerspectiveCamera) {\n      // perspective\n      const position = this.object.position\n      this.offset.copy(position).sub(this.target)\n      let targetDistance = this.offset.length()\n\n      // half of the fov is center to top of screen\n      targetDistance *= Math.tan(((this.object.fov / 2) * Math.PI) / 180.0)\n\n      // we use only clientHeight here so aspect ratio does not distort speed\n      this.panLeft((2 * deltaX * targetDistance) / element.clientHeight, this.object.matrix)\n      this.panUp((2 * deltaY * targetDistance) / element.clientHeight, this.object.matrix)\n    } else if (this.object.isOrthographicCamera) {\n      // orthographic\n      this.panLeft(\n        (deltaX * (this.object.right - this.object.left)) / this.object.zoom / element.clientWidth,\n        this.object.matrix,\n      )\n      this.panUp(\n        (deltaY * (this.object.top - this.object.bottom)) / this.object.zoom / element.clientHeight,\n        this.object.matrix,\n      )\n    } else {\n      // camera neither orthographic nor perspective\n      console.warn('WARNING: CameraControls.js encountered an unknown camera type - pan disabled.')\n      this.enablePan = false\n    }\n  }\n\n  private dollyIn = (dollyScale: number): void => {\n    // TODO: replace w/.isPerspectiveCamera ?\n    if (this.object instanceof PerspectiveCamera) {\n      this.scale /= dollyScale\n      // TODO: replace w/.isOrthographicCamera ?\n    } else if (this.object instanceof OrthographicCamera) {\n      this.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom * dollyScale))\n      this.object.updateProjectionMatrix()\n      this.zoomChanged = true\n    } else {\n      console.warn('WARNING: CameraControls.js encountered an unknown camera type - dolly/zoom disabled.')\n      this.enableZoom = false\n    }\n  }\n\n  private dollyOut = (dollyScale: number): void => {\n    // TODO: replace w/.isPerspectiveCamera ?\n    if (this.object instanceof PerspectiveCamera) {\n      this.scale *= dollyScale\n      // TODO: replace w/.isOrthographicCamera ?\n    } else if (this.object instanceof OrthographicCamera) {\n      this.object.zoom = Math.max(this.minZoom, Math.min(this.maxZoom, this.object.zoom / dollyScale))\n      this.object.updateProjectionMatrix()\n      this.zoomChanged = true\n    } else {\n      console.warn('WARNING: CameraControls.js encountered an unknown camera type - dolly/zoom disabled.')\n      this.enableZoom = false\n    }\n  }\n\n  // event callbacks - update the object state\n\n  private handleMouseDownRotate = (event: MouseEvent): void => {\n    this.rotateStart.set(event.clientX, event.clientY)\n  }\n\n  // TODO: confirm if worthwhile to return the Vector2 instead of void\n  private handleMouseDownDolly = (event: MouseEvent): void => {\n    this.dollyStart.set(event.clientX, event.clientY)\n  }\n\n  private handleMouseDownPan = (event: MouseEvent): void => {\n    this.panStart.set(event.clientX, event.clientY)\n  }\n\n  private handleMouseMoveRotate = (event: MouseEvent): void => {\n    this.rotateEnd.set(event.clientX, event.clientY)\n\n    this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart).multiplyScalar(this.rotateSpeed)\n\n    const element = this.domElement\n\n    this.rotateLeft((2 * Math.PI * this.rotateDelta.x) / element.clientHeight) // yes, height\n\n    this.rotateUp((2 * Math.PI * this.rotateDelta.y) / element.clientHeight)\n\n    this.rotateStart.copy(this.rotateEnd)\n\n    this.update()\n  }\n\n  private handleMouseMoveDolly = (event: MouseEvent): void => {\n    this.dollyEnd.set(event.clientX, event.clientY)\n\n    this.dollyDelta.subVectors(this.dollyEnd, this.dollyStart)\n\n    if (this.dollyDelta.y > 0) {\n      this.dollyIn(this.getZoomScale())\n    } else if (this.dollyDelta.y < 0) {\n      this.dollyOut(this.getZoomScale())\n    }\n\n    this.dollyStart.copy(this.dollyEnd)\n\n    this.update()\n  }\n\n  private handleMouseMovePan = (event: MouseEvent): void => {\n    this.panEnd.set(event.clientX, event.clientY)\n\n    this.panDelta.subVectors(this.panEnd, this.panStart).multiplyScalar(this.panSpeed)\n\n    this.pan(this.panDelta.x, this.panDelta.y)\n\n    this.panStart.copy(this.panEnd)\n\n    this.update()\n  }\n\n  private handleMouseUp(/*event*/): void {\n    // no-op\n  }\n\n  private handleMouseWheel = (event: WheelEvent): void => {\n    if (event.deltaY < 0) {\n      this.dollyOut(this.getZoomScale())\n    } else if (event.deltaY > 0) {\n      this.dollyIn(this.getZoomScale())\n    }\n\n    this.update()\n  }\n\n  private handleKeyDown = (event: KeyboardEvent): void => {\n    let needsUpdate = false\n\n    switch (event.code) {\n      case this.keys.UP:\n        this.pan(0, this.keyPanSpeed)\n        needsUpdate = true\n        break\n\n      case this.keys.BOTTOM:\n        this.pan(0, -this.keyPanSpeed)\n        needsUpdate = true\n        break\n\n      case this.keys.LEFT:\n        this.pan(this.keyPanSpeed, 0)\n        needsUpdate = true\n        break\n\n      case this.keys.RIGHT:\n        this.pan(-this.keyPanSpeed, 0)\n        needsUpdate = true\n        break\n    }\n\n    if (needsUpdate) {\n      // prevent the browser from scrolling on cursor keys\n      event.preventDefault()\n\n      this.update()\n    }\n  }\n\n  private handleTouchStartRotate = (event: TouchEvent): void => {\n    if (event.touches.length == 1) {\n      this.rotateStart.set(event.touches[0].pageX, event.touches[0].pageY)\n    } else {\n      const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX)\n      const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY)\n\n      this.rotateStart.set(x, y)\n    }\n  }\n\n  private handleTouchStartPan = (event: TouchEvent): void => {\n    if (event.touches.length == 1) {\n      this.panStart.set(event.touches[0].pageX, event.touches[0].pageY)\n    } else {\n      const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX)\n      const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY)\n\n      this.panStart.set(x, y)\n    }\n  }\n\n  private handleTouchStartDolly = (event: TouchEvent): void => {\n    const dx = event.touches[0].pageX - event.touches[1].pageX\n    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n    const distance = Math.sqrt(dx * dx + dy * dy)\n\n    this.dollyStart.set(0, distance)\n  }\n\n  private handleTouchStartDollyPan = (event: TouchEvent): void => {\n    if (this.enableZoom) this.handleTouchStartDolly(event)\n\n    if (this.enablePan) this.handleTouchStartPan(event)\n  }\n\n  private handleTouchStartDollyRotate = (event: TouchEvent): void => {\n    if (this.enableZoom) this.handleTouchStartDolly(event)\n\n    if (this.enableRotate) this.handleTouchStartRotate(event)\n  }\n\n  private handleTouchMoveRotate = (event: TouchEvent): void => {\n    if (event.touches.length == 1) {\n      this.rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n    } else {\n      const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX)\n      const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY)\n\n      this.rotateEnd.set(x, y)\n    }\n\n    this.rotateDelta.subVectors(this.rotateEnd, this.rotateStart).multiplyScalar(this.rotateSpeed)\n\n    const element = this.domElement\n\n    this.rotateLeft((2 * Math.PI * this.rotateDelta.x) / element.clientHeight) // yes, height\n\n    this.rotateUp((2 * Math.PI * this.rotateDelta.y) / element.clientHeight)\n\n    this.rotateStart.copy(this.rotateEnd)\n  }\n\n  private handleTouchMovePan = (event: TouchEvent): void => {\n    if (event.touches.length == 1) {\n      this.panEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n    } else {\n      const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX)\n      const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY)\n\n      this.panEnd.set(x, y)\n    }\n\n    this.panDelta.subVectors(this.panEnd, this.panStart).multiplyScalar(this.panSpeed)\n\n    this.pan(this.panDelta.x, this.panDelta.y)\n\n    this.panStart.copy(this.panEnd)\n  }\n\n  private handleTouchMoveDolly = (event: TouchEvent): void => {\n    const dx = event.touches[0].pageX - event.touches[1].pageX\n    const dy = event.touches[0].pageY - event.touches[1].pageY\n\n    const distance = Math.sqrt(dx * dx + dy * dy)\n\n    this.dollyEnd.set(0, distance)\n\n    this.dollyDelta.set(0, Math.pow(this.dollyEnd.y / this.dollyStart.y, this.zoomSpeed))\n\n    this.dollyIn(this.dollyDelta.y)\n\n    this.dollyStart.copy(this.dollyEnd)\n  }\n\n  private handleTouchMoveDollyPan = (event: TouchEvent): void => {\n    if (this.enableZoom) this.handleTouchMoveDolly(event)\n\n    if (this.enablePan) this.handleTouchMovePan(event)\n  }\n\n  private handleTouchMoveDollyRotate = (event: TouchEvent): void => {\n    if (this.enableZoom) this.handleTouchMoveDolly(event)\n\n    if (this.enableRotate) this.handleTouchMoveRotate(event)\n  }\n\n  private handleTouchEnd(/*event*/): void {\n    // no-op\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  private onMouseDown = (event: MouseEvent): void => {\n    if (this.enabled === false) return\n\n    // Prevent the browser from scrolling.\n\n    event.preventDefault()\n\n    // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    this.domElement.focus ? this.domElement.focus() : window.focus()\n\n    let mouseAction\n\n    switch (event.button) {\n      case 0:\n        mouseAction = this.mouseButtons.LEFT\n        break\n\n      case 1:\n        mouseAction = this.mouseButtons.MIDDLE\n        break\n\n      case 2:\n        mouseAction = this.mouseButtons.RIGHT\n        break\n\n      default:\n        mouseAction = -1\n    }\n\n    switch (mouseAction) {\n      case MOUSE.DOLLY:\n        if (this.enableZoom === false) return\n\n        this.handleMouseDownDolly(event)\n\n        this.state = STATE.DOLLY\n\n        break\n\n      case MOUSE.ROTATE:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (this.enablePan === false) return\n\n          this.handleMouseDownPan(event)\n\n          this.state = STATE.PAN\n        } else {\n          if (this.enableRotate === false) return\n\n          this.handleMouseDownRotate(event)\n\n          this.state = STATE.ROTATE\n        }\n\n        break\n\n      case MOUSE.PAN:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (this.enableRotate === false) return\n\n          this.handleMouseDownRotate(event)\n\n          this.state = STATE.ROTATE\n        } else {\n          if (this.enablePan === false) return\n\n          this.handleMouseDownPan(event)\n\n          this.state = STATE.PAN\n        }\n\n        break\n\n      default:\n        this.state = STATE.NONE\n    }\n\n    if (this.state !== STATE.NONE) {\n      document.addEventListener('mousemove', this.onMouseMove, false)\n      document.addEventListener('mouseup', this.onMouseUp, false)\n\n      // @ts-ignore\n      this.dispatchEvent(this.startEvent)\n    }\n  }\n\n  private onMouseMove = (event: MouseEvent): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n\n    switch (this.state) {\n      case STATE.ROTATE:\n        if (this.enableRotate === false) return\n\n        this.handleMouseMoveRotate(event)\n\n        break\n\n      case STATE.DOLLY:\n        if (this.enableZoom === false) return\n\n        this.handleMouseMoveDolly(event)\n\n        break\n\n      case STATE.PAN:\n        if (this.enablePan === false) return\n\n        this.handleMouseMovePan(event)\n\n        break\n    }\n  }\n\n  private onMouseUp = (): void => {\n    if (this.enabled === false) return\n\n    // this.handleMouseUp()\n\n    document.removeEventListener('mousemove', this.onMouseMove, false)\n    document.removeEventListener('mouseup', this.onMouseUp, false)\n\n    // @ts-ignore\n    this.dispatchEvent(this.endEvent)\n\n    this.state = STATE.NONE\n  }\n\n  private onMouseWheel = (event: WheelEvent): void => {\n    if (\n      this.enabled === false ||\n      this.enableZoom === false ||\n      (this.state !== STATE.NONE && this.state !== STATE.ROTATE)\n    ) {\n      return\n    }\n\n    event.preventDefault()\n\n    // @ts-ignore\n    this.dispatchEvent(this.startEvent)\n\n    this.handleMouseWheel(event)\n\n    // @ts-ignore\n    this.dispatchEvent(this.endEvent)\n  }\n\n  private onKeyDown = (event: KeyboardEvent): void => {\n    if (this.enabled === false || this.enableKeys === false || this.enablePan === false) return\n\n    this.handleKeyDown(event)\n  }\n\n  private onTouchStart = (event: TouchEvent): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n\n    switch (event.touches.length) {\n      case 1:\n        switch (this.touches.ONE) {\n          case TOUCH.ROTATE:\n            if (this.enableRotate === false) return\n\n            this.handleTouchStartRotate(event)\n\n            this.state = STATE.TOUCH_ROTATE\n\n            break\n\n          case TOUCH.PAN:\n            if (this.enablePan === false) return\n\n            this.handleTouchStartPan(event)\n\n            this.state = STATE.TOUCH_PAN\n\n            break\n\n          default:\n            this.state = STATE.NONE\n        }\n\n        break\n\n      case 2:\n        switch (this.touches.TWO) {\n          case TOUCH.DOLLY_PAN:\n            if (this.enableZoom === false && this.enablePan === false) return\n\n            this.handleTouchStartDollyPan(event)\n\n            this.state = STATE.TOUCH_DOLLY_PAN\n\n            break\n\n          case TOUCH.DOLLY_ROTATE:\n            if (this.enableZoom === false && this.enableRotate === false) return\n\n            this.handleTouchStartDollyRotate(event)\n\n            this.state = STATE.TOUCH_DOLLY_ROTATE\n\n            break\n\n          default:\n            this.state = STATE.NONE\n        }\n\n        break\n\n      default:\n        this.state = STATE.NONE\n    }\n\n    if (this.state !== STATE.NONE) {\n      // @ts-ignore\n      this.dispatchEvent(this.startEvent)\n    }\n  }\n\n  private onTouchMove = (event: TouchEvent): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n\n    switch (this.state) {\n      case STATE.TOUCH_ROTATE:\n        if (this.enableRotate === false) return\n\n        this.handleTouchMoveRotate(event)\n\n        this.update()\n\n        break\n\n      case STATE.TOUCH_PAN:\n        if (this.enablePan === false) return\n\n        this.handleTouchMovePan(event)\n\n        this.update()\n\n        break\n\n      case STATE.TOUCH_DOLLY_PAN:\n        if (this.enableZoom === false && this.enablePan === false) return\n\n        this.handleTouchMoveDollyPan(event)\n\n        this.update()\n\n        break\n\n      case STATE.TOUCH_DOLLY_ROTATE:\n        if (this.enableZoom === false && this.enableRotate === false) return\n\n        this.handleTouchMoveDollyRotate(event)\n\n        this.update()\n\n        break\n\n      default:\n        this.state = STATE.NONE\n    }\n  }\n\n  private onTouchEnd = (): void => {\n    if (this.enabled === false) return\n\n    // this.handleTouchEnd()\n\n    // @ts-ignore\n    this.dispatchEvent(this.endEvent)\n\n    this.state = STATE.NONE\n  }\n\n  private onContextMenu = (event: Event): void => {\n    if (this.enabled === false) return\n\n    event.preventDefault()\n  }\n}\n\n/**\n * OrbitControls maintains the \"up\" direction, camera.up (+Y by default).\n *\n * @event Orbit - left mouse / touch: one-finger move\n * @event Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n * @event Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n */\nclass OrbitControlsExp extends CameraControls {\n  mouseButtons: {\n    LEFT: MOUSE\n    RIGHT: MOUSE\n  }\n  touches: {\n    ONE: TOUCH\n    TWO: TOUCH\n  }\n\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement: HTMLElement) {\n    super(object, domElement)\n\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      RIGHT: MOUSE.PAN,\n    }\n    this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN,\n    }\n  }\n}\n\n/**\n * MapControls maintains the \"up\" direction, camera.up (+Y by default)\n *\n * @event Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n * @event Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n * @event Pan - left mouse, or left right + ctrl/meta/shiftKey, or arrow keys / touch: one-finger move\n */\nclass MapControlsExp extends CameraControls {\n  mouseButtons: {\n    LEFT: MOUSE\n    RIGHT: MOUSE\n  }\n  touches: {\n    ONE: TOUCH\n    TWO: TOUCH\n  }\n\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement: HTMLElement) {\n    super(object, domElement)\n\n    this.mouseButtons = {\n      LEFT: MOUSE.PAN,\n      RIGHT: MOUSE.ROTATE,\n    }\n    this.touches = {\n      ONE: TOUCH.PAN,\n      TWO: TOUCH.DOLLY_ROTATE,\n    }\n  }\n}\n\n/**\n * TrackballControls allows the camera to rotate over the polls and does not maintain camera.up\n *\n * @event Orbit - left mouse / touch: one-finger move\n * @event Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n * @event Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n */\nclass TrackballControlsExp extends CameraControls {\n  trackball: boolean\n  screenSpacePanning: boolean\n  autoRotate: boolean\n  mouseButtons: {\n    LEFT: MOUSE\n    RIGHT: MOUSE\n  }\n  touches: {\n    ONE: TOUCH\n    TWO: TOUCH\n  }\n\n  constructor(object: PerspectiveCamera | OrthographicCamera, domElement: HTMLElement) {\n    super(object, domElement)\n\n    this.trackball = true\n    this.screenSpacePanning = true\n    this.autoRotate = false\n\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      RIGHT: MOUSE.PAN,\n    }\n\n    this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN,\n    }\n  }\n}\n\nexport { CameraControls, OrbitControlsExp, MapControlsExp, TrackballControlsExp }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}