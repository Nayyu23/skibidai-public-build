{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { UniformsUtils, ShaderMaterial, NoBlending, WebGLRenderTarget } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nvar SavePass = /*#__PURE__*/function (_Pass) {\n  _inherits(SavePass, _Pass);\n  var _super = _createSuper(SavePass);\n  function SavePass(renderTarget) {\n    var _this;\n    _classCallCheck(this, SavePass);\n    _this = _super.call(this);\n    if (CopyShader === void 0) console.error(\"THREE.SavePass relies on CopyShader\");\n    var shader = CopyShader;\n    _this.textureID = \"tDiffuse\";\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      blending: NoBlending\n    });\n    _this.renderTarget = renderTarget;\n    if (_this.renderTarget === void 0) {\n      _this.renderTarget = new WebGLRenderTarget(window.innerWidth, window.innerHeight);\n      _this.renderTarget.texture.name = \"SavePass.rt\";\n    }\n    _this.needsSwap = false;\n    _this.fsQuad = new FullScreenQuad(_this.material);\n    return _this;\n  }\n  _createClass(SavePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      if (this.uniforms[this.textureID]) {\n        this.uniforms[this.textureID].value = readBuffer.texture;\n      }\n      renderer.setRenderTarget(this.renderTarget);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }]);\n  return SavePass;\n}(Pass);\nexport { SavePass };","map":{"version":3,"names":["SavePass","_Pass","_inherits","_super","_createSuper","renderTarget","_this","_classCallCheck","call","CopyShader","console","error","shader","textureID","uniforms","UniformsUtils","clone","material","ShaderMaterial","vertexShader","fragmentShader","blending","NoBlending","WebGLRenderTarget","window","innerWidth","innerHeight","texture","name","needsSwap","fsQuad","FullScreenQuad","_createClass","key","value","render","renderer","writeBuffer","readBuffer","setRenderTarget","clear","Pass"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\postprocessing\\SavePass.js"],"sourcesContent":["import { NoBlending, ShaderMaterial, UniformsUtils, WebGLRenderTarget } from 'three'\nimport { Pass, FullScreenQuad } from './Pass'\nimport { CopyShader } from '../shaders/CopyShader'\n\nclass SavePass extends Pass {\n  constructor(renderTarget) {\n    super()\n\n    if (CopyShader === undefined) console.error('THREE.SavePass relies on CopyShader')\n\n    const shader = CopyShader\n\n    this.textureID = 'tDiffuse'\n\n    this.uniforms = UniformsUtils.clone(shader.uniforms)\n\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      blending: NoBlending,\n    })\n\n    this.renderTarget = renderTarget\n\n    if (this.renderTarget === undefined) {\n      this.renderTarget = new WebGLRenderTarget(window.innerWidth, window.innerHeight)\n      this.renderTarget.texture.name = 'SavePass.rt'\n    }\n\n    this.needsSwap = false\n\n    this.fsQuad = new FullScreenQuad(this.material)\n  }\n\n  render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture\n    }\n\n    renderer.setRenderTarget(this.renderTarget)\n    if (this.clear) renderer.clear()\n    this.fsQuad.render(renderer)\n  }\n}\n\nexport { SavePass }\n"],"mappings":";;;;;;;IAIMA,QAAA,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,QAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,QAAA;EACJ,SAAAA,SAAYK,YAAA,EAAc;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,QAAA;IACxBM,KAAA,GAAAH,MAAA,CAAAK,IAAA;IAEA,IAAIC,UAAA,KAAe,QAAWC,OAAA,CAAQC,KAAA,CAAM,qCAAqC;IAEjF,IAAMC,MAAA,GAASH,UAAA;IAEfH,KAAA,CAAKO,SAAA,GAAY;IAEjBP,KAAA,CAAKQ,QAAA,GAAWC,aAAA,CAAcC,KAAA,CAAMJ,MAAA,CAAOE,QAAQ;IAEnDR,KAAA,CAAKW,QAAA,GAAW,IAAIC,cAAA,CAAe;MACjCJ,QAAA,EAAUR,KAAA,CAAKQ,QAAA;MACfK,YAAA,EAAcP,MAAA,CAAOO,YAAA;MACrBC,cAAA,EAAgBR,MAAA,CAAOQ,cAAA;MACvBC,QAAA,EAAUC;IAChB,CAAK;IAEDhB,KAAA,CAAKD,YAAA,GAAeA,YAAA;IAEpB,IAAIC,KAAA,CAAKD,YAAA,KAAiB,QAAW;MACnCC,KAAA,CAAKD,YAAA,GAAe,IAAIkB,iBAAA,CAAkBC,MAAA,CAAOC,UAAA,EAAYD,MAAA,CAAOE,WAAW;MAC/EpB,KAAA,CAAKD,YAAA,CAAasB,OAAA,CAAQC,IAAA,GAAO;IAClC;IAEDtB,KAAA,CAAKuB,SAAA,GAAY;IAEjBvB,KAAA,CAAKwB,MAAA,GAAS,IAAIC,cAAA,CAAezB,KAAA,CAAKW,QAAQ;IAAA,OAAAX,KAAA;EAC/C;EAAA0B,YAAA,CAAAhC,QAAA;IAAAiC,GAAA;IAAAC,KAAA,EAED,SAAAC,OAAOC,QAAA,EAAUC,WAAA,EAAaC,UAAA,EAAyC;MACrE,IAAI,KAAKxB,QAAA,CAAS,KAAKD,SAAS,GAAG;QACjC,KAAKC,QAAA,CAAS,KAAKD,SAAS,EAAEqB,KAAA,GAAQI,UAAA,CAAWX,OAAA;MAClD;MAEDS,QAAA,CAASG,eAAA,CAAgB,KAAKlC,YAAY;MAC1C,IAAI,KAAKmC,KAAA,EAAOJ,QAAA,CAASI,KAAA,CAAO;MAChC,KAAKV,MAAA,CAAOK,MAAA,CAAOC,QAAQ;IAC5B;EAAA;EAAA,OAAApC,QAAA;AAAA,EAvCoByC,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}