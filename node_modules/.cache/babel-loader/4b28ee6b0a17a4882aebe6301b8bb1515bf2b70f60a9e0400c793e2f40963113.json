{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { WebGLRenderTarget, NearestFilter, MeshDepthMaterial, RGBADepthPacking, NoBlending, UniformsUtils, ShaderMaterial, Color } from \"three\";\nimport { BokehShader } from \"../shaders/BokehShader.js\";\nvar BokehPass = /*#__PURE__*/function (_Pass) {\n  _inherits(BokehPass, _Pass);\n  var _super = _createSuper(BokehPass);\n  function BokehPass(scene, camera, params) {\n    var _this;\n    _classCallCheck(this, BokehPass);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"scene\");\n    __publicField(_assertThisInitialized(_this), \"camera\");\n    __publicField(_assertThisInitialized(_this), \"renderTargetDepth\");\n    __publicField(_assertThisInitialized(_this), \"materialDepth\");\n    __publicField(_assertThisInitialized(_this), \"materialBokeh\");\n    __publicField(_assertThisInitialized(_this), \"fsQuad\");\n    __publicField(_assertThisInitialized(_this), \"_oldClearColor\");\n    __publicField(_assertThisInitialized(_this), \"uniforms\");\n    _this.scene = scene;\n    _this.camera = camera;\n    var focus = params.focus !== void 0 ? params.focus : 1;\n    var aspect = params.aspect !== void 0 ? params.aspect : camera.aspect;\n    var aperture = params.aperture !== void 0 ? params.aperture : 0.025;\n    var maxblur = params.maxblur !== void 0 ? params.maxblur : 1;\n    var width = params.width || window.innerWidth || 1;\n    var height = params.height || window.innerHeight || 1;\n    _this.renderTargetDepth = new WebGLRenderTarget(width, height, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter\n    });\n    _this.renderTargetDepth.texture.name = \"BokehPass.depth\";\n    _this.materialDepth = new MeshDepthMaterial();\n    _this.materialDepth.depthPacking = RGBADepthPacking;\n    _this.materialDepth.blending = NoBlending;\n    if (BokehShader === void 0) {\n      console.error(\"BokehPass relies on BokehShader\");\n    }\n    var bokehShader = BokehShader;\n    var bokehUniforms = UniformsUtils.clone(bokehShader.uniforms);\n    bokehUniforms[\"tDepth\"].value = _this.renderTargetDepth.texture;\n    bokehUniforms[\"focus\"].value = focus;\n    bokehUniforms[\"aspect\"].value = aspect;\n    bokehUniforms[\"aperture\"].value = aperture;\n    bokehUniforms[\"maxblur\"].value = maxblur;\n    bokehUniforms[\"nearClip\"].value = camera.near;\n    bokehUniforms[\"farClip\"].value = camera.far;\n    _this.materialBokeh = new ShaderMaterial({\n      defines: Object.assign({}, bokehShader.defines),\n      uniforms: bokehUniforms,\n      vertexShader: bokehShader.vertexShader,\n      fragmentShader: bokehShader.fragmentShader\n    });\n    _this.uniforms = bokehUniforms;\n    _this.needsSwap = false;\n    _this.fsQuad = new FullScreenQuad(_this.materialBokeh);\n    _this._oldClearColor = new Color();\n    return _this;\n  }\n  _createClass(BokehPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      this.scene.overrideMaterial = this.materialDepth;\n      renderer.getClearColor(this._oldClearColor);\n      var oldClearAlpha = renderer.getClearAlpha();\n      var oldAutoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      renderer.setClearColor(16777215);\n      renderer.setClearAlpha(1);\n      renderer.setRenderTarget(this.renderTargetDepth);\n      renderer.clear();\n      renderer.render(this.scene, this.camera);\n      this.uniforms[\"tColor\"].value = readBuffer.texture;\n      this.uniforms[\"nearClip\"].value = this.camera.near;\n      this.uniforms[\"farClip\"].value = this.camera.far;\n      if (this.renderToScreen) {\n        renderer.setRenderTarget(null);\n        this.fsQuad.render(renderer);\n      } else {\n        renderer.setRenderTarget(writeBuffer);\n        renderer.clear();\n        this.fsQuad.render(renderer);\n      }\n      this.scene.overrideMaterial = null;\n      renderer.setClearColor(this._oldClearColor);\n      renderer.setClearAlpha(oldClearAlpha);\n      renderer.autoClear = oldAutoClear;\n    }\n  }]);\n  return BokehPass;\n}(Pass);\nexport { BokehPass };","map":{"version":3,"names":["BokehPass","_Pass","_inherits","_super","_createSuper","scene","camera","params","_this","_classCallCheck","call","__publicField","_assertThisInitialized","focus","aspect","aperture","maxblur","width","window","innerWidth","height","innerHeight","renderTargetDepth","WebGLRenderTarget","minFilter","NearestFilter","magFilter","texture","name","materialDepth","MeshDepthMaterial","depthPacking","RGBADepthPacking","blending","NoBlending","BokehShader","console","error","bokehShader","bokehUniforms","UniformsUtils","clone","uniforms","value","near","far","materialBokeh","ShaderMaterial","defines","Object","assign","vertexShader","fragmentShader","needsSwap","fsQuad","FullScreenQuad","_oldClearColor","Color","_createClass","key","render","renderer","writeBuffer","readBuffer","overrideMaterial","getClearColor","oldClearAlpha","getClearAlpha","oldAutoClear","autoClear","setClearColor","setClearAlpha","setRenderTarget","clear","renderToScreen","Pass"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\postprocessing\\BokehPass.ts"],"sourcesContent":["/**\n * Depth-of-field post-process with bokeh shader\n */\n\nimport { Pass, FullScreenQuad } from './Pass'\nimport {\n  Color,\n  MeshDepthMaterial,\n  NearestFilter,\n  NoBlending,\n  PerspectiveCamera,\n  RGBADepthPacking,\n  Scene,\n  ShaderMaterial,\n  UniformsUtils,\n  WebGLRenderer,\n  WebGLRenderTarget,\n} from 'three'\nimport { BokehShader } from '../shaders/BokehShader'\n\ntype BokehPassParams = {\n  focus?: number\n  aspect?: number\n  aperture?: number\n  maxblur?: number\n  width?: number\n  height?: number\n}\n\nclass BokehPass extends Pass {\n  public scene: Scene\n  public camera: PerspectiveCamera\n  public renderTargetDepth: WebGLRenderTarget\n  public materialDepth: MeshDepthMaterial\n  public materialBokeh: ShaderMaterial\n  public fsQuad: FullScreenQuad\n\n  private _oldClearColor: Color\n\n  public uniforms\n\n  constructor(scene: Scene, camera: PerspectiveCamera, params: BokehPassParams) {\n    super()\n    this.scene = scene\n    this.camera = camera\n    const focus = params.focus !== undefined ? params.focus : 1.0\n    const aspect = params.aspect !== undefined ? params.aspect : camera.aspect\n    const aperture = params.aperture !== undefined ? params.aperture : 0.025\n    const maxblur = params.maxblur !== undefined ? params.maxblur : 1.0 // render targets\n\n    const width = params.width || window.innerWidth || 1\n    const height = params.height || window.innerHeight || 1\n    this.renderTargetDepth = new WebGLRenderTarget(width, height, {\n      minFilter: NearestFilter,\n      magFilter: NearestFilter,\n    })\n    this.renderTargetDepth.texture.name = 'BokehPass.depth' // depth material\n\n    this.materialDepth = new MeshDepthMaterial()\n    this.materialDepth.depthPacking = RGBADepthPacking\n    this.materialDepth.blending = NoBlending // bokeh material\n\n    if (BokehShader === undefined) {\n      console.error('BokehPass relies on BokehShader')\n    }\n\n    const bokehShader = BokehShader\n    const bokehUniforms = UniformsUtils.clone(bokehShader.uniforms)\n    bokehUniforms['tDepth'].value = this.renderTargetDepth.texture\n    bokehUniforms['focus'].value = focus\n    bokehUniforms['aspect'].value = aspect\n    bokehUniforms['aperture'].value = aperture\n    bokehUniforms['maxblur'].value = maxblur\n    bokehUniforms['nearClip'].value = camera.near\n    bokehUniforms['farClip'].value = camera.far\n    this.materialBokeh = new ShaderMaterial({\n      defines: Object.assign({}, bokehShader.defines),\n      uniforms: bokehUniforms,\n      vertexShader: bokehShader.vertexShader,\n      fragmentShader: bokehShader.fragmentShader,\n    })\n    this.uniforms = bokehUniforms\n    this.needsSwap = false\n    this.fsQuad = new FullScreenQuad(this.materialBokeh)\n    this._oldClearColor = new Color()\n  }\n\n  public render(\n    renderer: WebGLRenderer,\n    writeBuffer: WebGLRenderTarget,\n    readBuffer: WebGLRenderTarget,\n    /*, deltaTime, maskActive */\n  ): void {\n    // Render depth into texture\n    this.scene.overrideMaterial = this.materialDepth\n    renderer.getClearColor(this._oldClearColor)\n    const oldClearAlpha = renderer.getClearAlpha()\n    const oldAutoClear = renderer.autoClear\n    renderer.autoClear = false\n    renderer.setClearColor(0xffffff)\n    renderer.setClearAlpha(1.0)\n    renderer.setRenderTarget(this.renderTargetDepth)\n    renderer.clear()\n    renderer.render(this.scene, this.camera) // Render bokeh composite\n\n    this.uniforms['tColor'].value = readBuffer.texture\n    this.uniforms['nearClip'].value = this.camera.near\n    this.uniforms['farClip'].value = this.camera.far\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null)\n      this.fsQuad.render(renderer)\n    } else {\n      renderer.setRenderTarget(writeBuffer)\n      renderer.clear()\n      this.fsQuad.render(renderer)\n    }\n\n    this.scene.overrideMaterial = null\n    renderer.setClearColor(this._oldClearColor)\n    renderer.setClearAlpha(oldClearAlpha)\n    renderer.autoClear = oldAutoClear\n  }\n}\n\nexport { BokehPass }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}