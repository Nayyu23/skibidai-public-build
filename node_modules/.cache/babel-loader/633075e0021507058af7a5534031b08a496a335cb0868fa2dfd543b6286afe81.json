{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Line, BufferGeometry, BufferAttribute, LineBasicMaterial, MathUtils } from \"three\";\nvar PositionalAudioHelper = /*#__PURE__*/function (_Line) {\n  _inherits(PositionalAudioHelper, _Line);\n  var _super = _createSuper(PositionalAudioHelper);\n  function PositionalAudioHelper(audio) {\n    var _this;\n    var range = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var divisionsInnerAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16;\n    var divisionsOuterAngle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n    _classCallCheck(this, PositionalAudioHelper);\n    var geometry = new BufferGeometry();\n    var divisions = divisionsInnerAngle + divisionsOuterAngle * 2;\n    var positions = new Float32Array((divisions * 3 + 3) * 3);\n    geometry.setAttribute(\"position\", new BufferAttribute(positions, 3));\n    var materialInnerAngle = new LineBasicMaterial({\n      color: 65280\n    });\n    var materialOuterAngle = new LineBasicMaterial({\n      color: 16776960\n    });\n    _this = _super.call(this, geometry, [materialOuterAngle, materialInnerAngle]);\n    _this.type = \"PositionalAudioHelper\";\n    _this.audio = audio;\n    _this.range = range;\n    _this.divisionsInnerAngle = divisionsInnerAngle;\n    _this.divisionsOuterAngle = divisionsOuterAngle;\n    _this.update();\n    return _this;\n  }\n  _createClass(PositionalAudioHelper, [{\n    key: \"update\",\n    value: function update() {\n      var audio = this.audio;\n      var range = this.range;\n      var divisionsInnerAngle = this.divisionsInnerAngle;\n      var divisionsOuterAngle = this.divisionsOuterAngle;\n      var coneInnerAngle = MathUtils.degToRad(audio.panner.coneInnerAngle);\n      var coneOuterAngle = MathUtils.degToRad(audio.panner.coneOuterAngle);\n      var halfConeInnerAngle = coneInnerAngle / 2;\n      var halfConeOuterAngle = coneOuterAngle / 2;\n      var start = 0;\n      var count = 0;\n      var i, stride;\n      var geometry = this.geometry;\n      var positionAttribute = geometry.attributes.position;\n      geometry.clearGroups();\n      function generateSegment(from, to, divisions, materialIndex) {\n        var step = (to - from) / divisions;\n        positionAttribute.setXYZ(start, 0, 0, 0);\n        count++;\n        for (i = from; i < to; i += step) {\n          stride = start + count;\n          positionAttribute.setXYZ(stride, Math.sin(i) * range, 0, Math.cos(i) * range);\n          positionAttribute.setXYZ(stride + 1, Math.sin(Math.min(i + step, to)) * range, 0, Math.cos(Math.min(i + step, to)) * range);\n          positionAttribute.setXYZ(stride + 2, 0, 0, 0);\n          count += 3;\n        }\n        geometry.addGroup(start, count, materialIndex);\n        start += count;\n        count = 0;\n      }\n      generateSegment(-halfConeOuterAngle, -halfConeInnerAngle, divisionsOuterAngle, 0);\n      generateSegment(-halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1);\n      generateSegment(halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0);\n      positionAttribute.needsUpdate = true;\n      if (coneInnerAngle === coneOuterAngle) this.material[0].visible = false;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n      this.material[0].dispose();\n      this.material[1].dispose();\n    }\n  }]);\n  return PositionalAudioHelper;\n}(Line);\nexport { PositionalAudioHelper };","map":{"version":3,"names":["PositionalAudioHelper","_Line","_inherits","_super","_createSuper","audio","_this","range","arguments","length","undefined","divisionsInnerAngle","divisionsOuterAngle","_classCallCheck","geometry","BufferGeometry","divisions","positions","Float32Array","setAttribute","BufferAttribute","materialInnerAngle","LineBasicMaterial","color","materialOuterAngle","call","type","update","_createClass","key","value","coneInnerAngle","MathUtils","degToRad","panner","coneOuterAngle","halfConeInnerAngle","halfConeOuterAngle","start","count","i","stride","positionAttribute","attributes","position","clearGroups","generateSegment","from","to","materialIndex","step","setXYZ","Math","sin","cos","min","addGroup","needsUpdate","material","visible","dispose","Line"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\helpers\\PositionalAudioHelper.js"],"sourcesContent":["import { BufferGeometry, BufferAttribute, LineBasicMaterial, Line, MathUtils } from 'three'\n\nclass PositionalAudioHelper extends Line {\n  constructor(audio, range = 1, divisionsInnerAngle = 16, divisionsOuterAngle = 2) {\n    const geometry = new BufferGeometry()\n    const divisions = divisionsInnerAngle + divisionsOuterAngle * 2\n    const positions = new Float32Array((divisions * 3 + 3) * 3)\n    geometry.setAttribute('position', new BufferAttribute(positions, 3))\n\n    const materialInnerAngle = new LineBasicMaterial({ color: 0x00ff00 })\n    const materialOuterAngle = new LineBasicMaterial({ color: 0xffff00 })\n\n    super(geometry, [materialOuterAngle, materialInnerAngle])\n\n    this.type = 'PositionalAudioHelper'\n    this.audio = audio\n    this.range = range\n    this.divisionsInnerAngle = divisionsInnerAngle\n    this.divisionsOuterAngle = divisionsOuterAngle\n\n    this.update()\n  }\n\n  update() {\n    const audio = this.audio\n    const range = this.range\n    const divisionsInnerAngle = this.divisionsInnerAngle\n    const divisionsOuterAngle = this.divisionsOuterAngle\n\n    const coneInnerAngle = MathUtils.degToRad(audio.panner.coneInnerAngle)\n    const coneOuterAngle = MathUtils.degToRad(audio.panner.coneOuterAngle)\n\n    const halfConeInnerAngle = coneInnerAngle / 2\n    const halfConeOuterAngle = coneOuterAngle / 2\n\n    let start = 0\n    let count = 0\n    let i, stride\n\n    const geometry = this.geometry\n    const positionAttribute = geometry.attributes.position\n\n    geometry.clearGroups()\n\n    //\n\n    function generateSegment(from, to, divisions, materialIndex) {\n      const step = (to - from) / divisions\n\n      positionAttribute.setXYZ(start, 0, 0, 0)\n      count++\n\n      for (i = from; i < to; i += step) {\n        stride = start + count\n\n        positionAttribute.setXYZ(stride, Math.sin(i) * range, 0, Math.cos(i) * range)\n        positionAttribute.setXYZ(\n          stride + 1,\n          Math.sin(Math.min(i + step, to)) * range,\n          0,\n          Math.cos(Math.min(i + step, to)) * range,\n        )\n        positionAttribute.setXYZ(stride + 2, 0, 0, 0)\n\n        count += 3\n      }\n\n      geometry.addGroup(start, count, materialIndex)\n\n      start += count\n      count = 0\n    }\n\n    //\n\n    generateSegment(-halfConeOuterAngle, -halfConeInnerAngle, divisionsOuterAngle, 0)\n    generateSegment(-halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1)\n    generateSegment(halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0)\n\n    //\n\n    positionAttribute.needsUpdate = true\n\n    if (coneInnerAngle === coneOuterAngle) this.material[0].visible = false\n  }\n\n  dispose() {\n    this.geometry.dispose()\n    this.material[0].dispose()\n    this.material[1].dispose()\n  }\n}\n\nexport { PositionalAudioHelper }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}