{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _createForOfIteratorHelper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nvar _excluded = [\"isChild\", \"object\", \"children\", \"deep\", \"castShadow\", \"receiveShadow\", \"inject\", \"keys\"],\n  _excluded2 = [\"children\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { SkeletonUtils } from 'three-stdlib';\nfunction createSpread(child, _ref) {\n  var _ref$keys = _ref.keys,\n    keys = _ref$keys === void 0 ? ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'] : _ref$keys,\n    deep = _ref.deep,\n    inject = _ref.inject,\n    castShadow = _ref.castShadow,\n    receiveShadow = _ref.receiveShadow;\n  var spread = {};\n  var _iterator = _createForOfIteratorHelper(keys),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      spread[key] = child[key];\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n  if (inject) {\n    if (typeof inject === 'function') spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject(child)\n    });else if ( /*#__PURE__*/React.isValidElement(inject)) spread = _objectSpread(_objectSpread({}, spread), {}, {\n      children: inject\n    });else spread = _objectSpread(_objectSpread({}, spread), inject);\n  }\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n  return spread;\n}\nvar Clone = /* @__PURE__ */React.forwardRef(function (_ref2, forwardRef) {\n  var _ref2$isChild = _ref2.isChild,\n    isChild = _ref2$isChild === void 0 ? false : _ref2$isChild,\n    object = _ref2.object,\n    children = _ref2.children,\n    deep = _ref2.deep,\n    castShadow = _ref2.castShadow,\n    receiveShadow = _ref2.receiveShadow,\n    inject = _ref2.inject,\n    keys = _ref2.keys,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var config = {\n    keys: keys,\n    deep: deep,\n    inject: inject,\n    castShadow: castShadow,\n    receiveShadow: receiveShadow\n  };\n  object = React.useMemo(function () {\n    if (isChild === false && !Array.isArray(object)) {\n      var isSkinned = false;\n      object.traverse(function (object) {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n    return object;\n  }, [object, isChild]);\n\n  // Deal with arrayed clones\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(function (o) {\n      return /*#__PURE__*/React.createElement(Clone, _extends({\n        key: o.uuid,\n        object: o\n      }, config));\n    }), children);\n  }\n\n  // Singleton clones\n  var _createSpread = createSpread(object, config),\n    injectChildren = _createSpread.children,\n    spread = _objectWithoutProperties(_createSpread, _excluded2);\n  var Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), object.children.map(function (child) {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\nexport { Clone };","map":{"version":3,"names":["_extends","THREE","React","SkeletonUtils","createSpread","child","_ref","_ref$keys","keys","deep","inject","castShadow","receiveShadow","spread","_iterator","_createForOfIteratorHelper","_step","s","n","done","key","value","err","e","f","geometry","clone","material","_objectSpread","children","isValidElement","Mesh","Clone","forwardRef","_ref2","_ref2$isChild","isChild","object","props","_objectWithoutProperties","_excluded","config","useMemo","Array","isArray","isSkinned","traverse","isSkinnedMesh","createElement","ref","map","o","uuid","_createSpread","injectChildren","_excluded2","Element","type","toLowerCase","slice"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@react-three/drei/core/Clone.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = {};\n  for (const key of keys) {\n    spread[key] = child[key];\n  }\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n  if (inject) {\n    if (typeof inject === 'function') spread = {\n      ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = {\n      ...spread,\n      children: inject\n    };else spread = {\n      ...spread,\n      ...inject\n    };\n  }\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n  return spread;\n}\nconst Clone = /* @__PURE__ */React.forwardRef(({\n  isChild = false,\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n    return object;\n  }, [object, isChild]);\n\n  // Deal with arrayed clones\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  }\n\n  // Singleton clones\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), object.children.map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}