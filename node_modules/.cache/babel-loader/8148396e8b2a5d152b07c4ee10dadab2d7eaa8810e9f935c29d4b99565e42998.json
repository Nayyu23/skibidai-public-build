{"ast":null,"code":"import _get from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { LineBasicMaterial, BufferAttribute, Box3, Group, MeshBasicMaterial, Object3D, BufferGeometry } from 'three';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\nvar boundingBox = /* @__PURE__ */new Box3();\nvar MeshBVHRootHelper = /*#__PURE__*/function (_Object3D) {\n  _inherits(MeshBVHRootHelper, _Object3D);\n  var _super = _createSuper(MeshBVHRootHelper);\n  function MeshBVHRootHelper(bvh, material) {\n    var _this;\n    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n    var group = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    _classCallCheck(this, MeshBVHRootHelper);\n    _this = _super.call(this);\n    _this.material = material;\n    _this.geometry = new BufferGeometry();\n    _this.name = 'MeshBVHRootHelper';\n    _this.depth = depth;\n    _this.displayParents = false;\n    _this.bvh = bvh;\n    _this.displayEdges = true;\n    _this._group = group;\n    return _this;\n  }\n  _createClass(MeshBVHRootHelper, [{\n    key: \"isMesh\",\n    get: function get() {\n      return !this.displayEdges;\n    }\n  }, {\n    key: \"isLineSegments\",\n    get: function get() {\n      return this.displayEdges;\n    }\n  }, {\n    key: \"isLine\",\n    get: function get() {\n      return this.displayEdges;\n    }\n  }, {\n    key: \"raycast\",\n    value: function raycast() {}\n  }, {\n    key: \"update\",\n    value: function update() {\n      var geometry = this.geometry;\n      var boundsTree = this.bvh;\n      var group = this._group;\n      geometry.dispose();\n      this.visible = false;\n      if (boundsTree) {\n        // count the number of bounds required\n        var targetDepth = this.depth - 1;\n        var displayParents = this.displayParents;\n        var boundsCount = 0;\n        boundsTree.traverse(function (depth, isLeaf) {\n          if (depth >= targetDepth || isLeaf) {\n            boundsCount++;\n            return true;\n          } else if (displayParents) {\n            boundsCount++;\n          }\n        }, group);\n\n        // fill in the position buffer with the bounds corners\n        var posIndex = 0;\n        var positionArray = new Float32Array(8 * 3 * boundsCount);\n        boundsTree.traverse(function (depth, isLeaf, boundingData) {\n          var terminate = depth >= targetDepth || isLeaf;\n          if (terminate || displayParents) {\n            arrayToBox(0, boundingData, boundingBox);\n            var min = boundingBox.min,\n              max = boundingBox.max;\n            for (var x = -1; x <= 1; x += 2) {\n              var xVal = x < 0 ? min.x : max.x;\n              for (var y = -1; y <= 1; y += 2) {\n                var yVal = y < 0 ? min.y : max.y;\n                for (var z = -1; z <= 1; z += 2) {\n                  var zVal = z < 0 ? min.z : max.z;\n                  positionArray[posIndex + 0] = xVal;\n                  positionArray[posIndex + 1] = yVal;\n                  positionArray[posIndex + 2] = zVal;\n                  posIndex += 3;\n                }\n              }\n            }\n            return terminate;\n          }\n        }, group);\n        var indexArray;\n        var indices;\n        if (this.displayEdges) {\n          // fill in the index buffer to point to the corner points\n          indices = new Uint8Array([\n          // x axis\n          0, 4, 1, 5, 2, 6, 3, 7,\n          // y axis\n          0, 2, 1, 3, 4, 6, 5, 7,\n          // z axis\n          0, 1, 2, 3, 4, 5, 6, 7]);\n        } else {\n          indices = new Uint8Array([\n          // X-, X+\n          0, 1, 2, 2, 1, 3, 4, 6, 5, 6, 7, 5,\n          // Y-, Y+\n          1, 4, 5, 0, 4, 1, 2, 3, 6, 3, 7, 6,\n          // Z-, Z+\n          0, 2, 4, 2, 6, 4, 1, 5, 3, 3, 5, 7]);\n        }\n        if (positionArray.length > 65535) {\n          indexArray = new Uint32Array(indices.length * boundsCount);\n        } else {\n          indexArray = new Uint16Array(indices.length * boundsCount);\n        }\n        var indexLength = indices.length;\n        for (var i = 0; i < boundsCount; i++) {\n          var posOffset = i * 8;\n          var indexOffset = i * indexLength;\n          for (var j = 0; j < indexLength; j++) {\n            indexArray[indexOffset + j] = posOffset + indices[j];\n          }\n        }\n\n        // update the geometry\n        geometry.setIndex(new BufferAttribute(indexArray, 1, false));\n        geometry.setAttribute('position', new BufferAttribute(positionArray, 3, false));\n        this.visible = true;\n      }\n    }\n  }]);\n  return MeshBVHRootHelper;\n}(Object3D);\nvar MeshBVHHelper = /*#__PURE__*/function (_Group) {\n  _inherits(MeshBVHHelper, _Group);\n  var _super2 = _createSuper(MeshBVHHelper);\n  function MeshBVHHelper() {\n    var _this2;\n    var mesh = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var bvh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n    _classCallCheck(this, MeshBVHHelper);\n    // handle bvh, depth signature\n    if (mesh instanceof MeshBVH) {\n      depth = bvh || 10;\n      bvh = mesh;\n      mesh = null;\n    }\n\n    // handle mesh, depth signature\n    if (typeof bvh === 'number') {\n      depth = bvh;\n      bvh = null;\n    }\n    _this2 = _super2.call(this);\n    _this2.name = 'MeshBVHHelper';\n    _this2.depth = depth;\n    _this2.mesh = mesh;\n    _this2.bvh = bvh;\n    _this2.displayParents = false;\n    _this2.displayEdges = true;\n    _this2._roots = [];\n    var edgeMaterial = new LineBasicMaterial({\n      color: 0x00FF88,\n      transparent: true,\n      opacity: 0.3,\n      depthWrite: false\n    });\n    var meshMaterial = new MeshBasicMaterial({\n      color: 0x00FF88,\n      transparent: true,\n      opacity: 0.3,\n      depthWrite: false\n    });\n    meshMaterial.color = edgeMaterial.color;\n    _this2.edgeMaterial = edgeMaterial;\n    _this2.meshMaterial = meshMaterial;\n    _this2.update();\n    return _this2;\n  }\n  _createClass(MeshBVHHelper, [{\n    key: \"color\",\n    get: function get() {\n      return this.edgeMaterial.color;\n    }\n  }, {\n    key: \"opacity\",\n    get: function get() {\n      return this.edgeMaterial.opacity;\n    },\n    set: function set(v) {\n      this.edgeMaterial.opacity = v;\n      this.meshMaterial.opacity = v;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var bvh = this.bvh || this.mesh.geometry.boundsTree;\n      var totalRoots = bvh ? bvh._roots.length : 0;\n      while (this._roots.length > totalRoots) {\n        var root = this._roots.pop();\n        root.geometry.dispose();\n        this.remove(root);\n      }\n      for (var i = 0; i < totalRoots; i++) {\n        var depth = this.depth,\n          edgeMaterial = this.edgeMaterial,\n          meshMaterial = this.meshMaterial,\n          displayParents = this.displayParents,\n          displayEdges = this.displayEdges;\n        if (i >= this._roots.length) {\n          var _root = new MeshBVHRootHelper(bvh, edgeMaterial, depth, i);\n          this.add(_root);\n          this._roots.push(_root);\n        }\n        var _root2 = this._roots[i];\n        _root2.bvh = bvh;\n        _root2.depth = depth;\n        _root2.displayParents = displayParents;\n        _root2.displayEdges = displayEdges;\n        _root2.material = displayEdges ? edgeMaterial : meshMaterial;\n        _root2.update();\n      }\n    }\n  }, {\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld() {\n      var _get2;\n      var mesh = this.mesh;\n      var parent = this.parent;\n      if (mesh !== null) {\n        mesh.updateWorldMatrix(true, false);\n        if (parent) {\n          this.matrix.copy(parent.matrixWorld).invert().multiply(mesh.matrixWorld);\n        } else {\n          this.matrix.copy(mesh.matrixWorld);\n        }\n        this.matrix.decompose(this.position, this.quaternion, this.scale);\n      }\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      (_get2 = _get(_getPrototypeOf(MeshBVHHelper.prototype), \"updateMatrixWorld\", this)).call.apply(_get2, [this].concat(args));\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(source) {\n      this.depth = source.depth;\n      this.mesh = source.mesh;\n      this.bvh = source.bvh;\n      this.opacity = source.opacity;\n      this.color.copy(source.color);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new MeshBVHHelper(this.mesh, this.bvh, this.depth);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.edgeMaterial.dispose();\n      this.meshMaterial.dispose();\n      var children = this.children;\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].geometry.dispose();\n      }\n    }\n  }]);\n  return MeshBVHHelper;\n}(Group);\nexport var MeshBVHVisualizer = /*#__PURE__*/function (_MeshBVHHelper) {\n  _inherits(MeshBVHVisualizer, _MeshBVHHelper);\n  var _super3 = _createSuper(MeshBVHVisualizer);\n  function MeshBVHVisualizer() {\n    var _this3;\n    _classCallCheck(this, MeshBVHVisualizer);\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    _this3 = _super3.call.apply(_super3, [this].concat(args));\n    console.warn('MeshBVHVisualizer: MeshBVHVisualizer has been deprecated. Use MeshBVHHelper, instead.');\n    return _this3;\n  }\n  return _createClass(MeshBVHVisualizer);\n}(MeshBVHHelper);\nexport { MeshBVHHelper };","map":{"version":3,"names":["LineBasicMaterial","BufferAttribute","Box3","Group","MeshBasicMaterial","Object3D","BufferGeometry","arrayToBox","MeshBVH","boundingBox","MeshBVHRootHelper","_Object3D","_inherits","_super","_createSuper","bvh","material","_this","depth","arguments","length","undefined","group","_classCallCheck","call","geometry","name","displayParents","displayEdges","_group","_createClass","key","get","value","raycast","update","boundsTree","dispose","visible","targetDepth","boundsCount","traverse","isLeaf","posIndex","positionArray","Float32Array","boundingData","terminate","min","max","x","xVal","y","yVal","z","zVal","indexArray","indices","Uint8Array","Uint32Array","Uint16Array","indexLength","i","posOffset","indexOffset","j","setIndex","setAttribute","MeshBVHHelper","_Group","_super2","_this2","mesh","_roots","edgeMaterial","color","transparent","opacity","depthWrite","meshMaterial","set","v","totalRoots","root","pop","remove","add","push","updateMatrixWorld","_get2","parent","updateWorldMatrix","matrix","copy","matrixWorld","invert","multiply","decompose","position","quaternion","scale","_len","args","Array","_key","_get","_getPrototypeOf","prototype","apply","concat","source","clone","children","l","MeshBVHVisualizer","_MeshBVHHelper","_super3","_this3","_len2","_key2","console","warn"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/three-mesh-bvh/src/objects/MeshBVHHelper.js"],"sourcesContent":["import { LineBasicMaterial, BufferAttribute, Box3, Group, MeshBasicMaterial, Object3D, BufferGeometry } from 'three';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nclass MeshBVHRootHelper extends Object3D {\n\n\tget isMesh() {\n\n\t\treturn ! this.displayEdges;\n\n\t}\n\n\tget isLineSegments() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tget isLine() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tconstructor( bvh, material, depth = 10, group = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.material = material;\n\t\tthis.geometry = new BufferGeometry();\n\t\tthis.name = 'MeshBVHRootHelper';\n\t\tthis.depth = depth;\n\t\tthis.displayParents = false;\n\t\tthis.bvh = bvh;\n\t\tthis.displayEdges = true;\n\t\tthis._group = group;\n\n\t}\n\n\traycast() {}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst boundsTree = this.bvh;\n\t\tconst group = this._group;\n\t\tgeometry.dispose();\n\t\tthis.visible = false;\n\t\tif ( boundsTree ) {\n\n\t\t\t// count the number of bounds required\n\t\t\tconst targetDepth = this.depth - 1;\n\t\t\tconst displayParents = this.displayParents;\n\t\t\tlet boundsCount = 0;\n\t\t\tboundsTree.traverse( ( depth, isLeaf ) => {\n\n\t\t\t\tif ( depth >= targetDepth || isLeaf ) {\n\n\t\t\t\t\tboundsCount ++;\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else if ( displayParents ) {\n\n\t\t\t\t\tboundsCount ++;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\t// fill in the position buffer with the bounds corners\n\t\t\tlet posIndex = 0;\n\t\t\tconst positionArray = new Float32Array( 8 * 3 * boundsCount );\n\t\t\tboundsTree.traverse( ( depth, isLeaf, boundingData ) => {\n\n\t\t\t\tconst terminate = depth >= targetDepth || isLeaf;\n\t\t\t\tif ( terminate || displayParents ) {\n\n\t\t\t\t\tarrayToBox( 0, boundingData, boundingBox );\n\n\t\t\t\t\tconst { min, max } = boundingBox;\n\t\t\t\t\tfor ( let x = - 1; x <= 1; x += 2 ) {\n\n\t\t\t\t\t\tconst xVal = x < 0 ? min.x : max.x;\n\t\t\t\t\t\tfor ( let y = - 1; y <= 1; y += 2 ) {\n\n\t\t\t\t\t\t\tconst yVal = y < 0 ? min.y : max.y;\n\t\t\t\t\t\t\tfor ( let z = - 1; z <= 1; z += 2 ) {\n\n\t\t\t\t\t\t\t\tconst zVal = z < 0 ? min.z : max.z;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 0 ] = xVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 1 ] = yVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 2 ] = zVal;\n\n\t\t\t\t\t\t\t\tposIndex += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn terminate;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\tlet indexArray;\n\t\t\tlet indices;\n\t\t\tif ( this.displayEdges ) {\n\n\t\t\t\t// fill in the index buffer to point to the corner points\n\t\t\t\tindices = new Uint8Array( [\n\t\t\t\t\t// x axis\n\t\t\t\t\t0, 4,\n\t\t\t\t\t1, 5,\n\t\t\t\t\t2, 6,\n\t\t\t\t\t3, 7,\n\n\t\t\t\t\t// y axis\n\t\t\t\t\t0, 2,\n\t\t\t\t\t1, 3,\n\t\t\t\t\t4, 6,\n\t\t\t\t\t5, 7,\n\n\t\t\t\t\t// z axis\n\t\t\t\t\t0, 1,\n\t\t\t\t\t2, 3,\n\t\t\t\t\t4, 5,\n\t\t\t\t\t6, 7,\n\t\t\t\t] );\n\n\t\t\t} else {\n\n\t\t\t\tindices = new Uint8Array( [\n\n\t\t\t\t\t// X-, X+\n\t\t\t\t\t0, 1, 2,\n\t\t\t\t\t2, 1, 3,\n\n\t\t\t\t\t4, 6, 5,\n\t\t\t\t\t6, 7, 5,\n\n\t\t\t\t\t// Y-, Y+\n\t\t\t\t\t1, 4, 5,\n\t\t\t\t\t0, 4, 1,\n\n\t\t\t\t\t2, 3, 6,\n\t\t\t\t\t3, 7, 6,\n\n\t\t\t\t\t// Z-, Z+\n\t\t\t\t\t0, 2, 4,\n\t\t\t\t\t2, 6, 4,\n\n\t\t\t\t\t1, 5, 3,\n\t\t\t\t\t3, 5, 7,\n\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( positionArray.length > 65535 ) {\n\n\t\t\t\tindexArray = new Uint32Array( indices.length * boundsCount );\n\n\t\t\t} else {\n\n\t\t\t\tindexArray = new Uint16Array( indices.length * boundsCount );\n\n\t\t\t}\n\n\t\t\tconst indexLength = indices.length;\n\t\t\tfor ( let i = 0; i < boundsCount; i ++ ) {\n\n\t\t\t\tconst posOffset = i * 8;\n\t\t\t\tconst indexOffset = i * indexLength;\n\t\t\t\tfor ( let j = 0; j < indexLength; j ++ ) {\n\n\t\t\t\t\tindexArray[ indexOffset + j ] = posOffset + indices[ j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the geometry\n\t\t\tgeometry.setIndex(\n\t\t\t\tnew BufferAttribute( indexArray, 1, false ),\n\t\t\t);\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew BufferAttribute( positionArray, 3, false ),\n\t\t\t);\n\t\t\tthis.visible = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass MeshBVHHelper extends Group {\n\n\tget color() {\n\n\t\treturn this.edgeMaterial.color;\n\n\t}\n\n\tget opacity() {\n\n\t\treturn this.edgeMaterial.opacity;\n\n\t}\n\n\tset opacity( v ) {\n\n\t\tthis.edgeMaterial.opacity = v;\n\t\tthis.meshMaterial.opacity = v;\n\n\t}\n\n\tconstructor( mesh = null, bvh = null, depth = 10 ) {\n\n\t\t// handle bvh, depth signature\n\t\tif ( mesh instanceof MeshBVH ) {\n\n\t\t\tdepth = bvh || 10;\n\t\t\tbvh = mesh;\n\t\t\tmesh = null;\n\n\t\t}\n\n\t\t// handle mesh, depth signature\n\t\tif ( typeof bvh === 'number' ) {\n\n\t\t\tdepth = bvh;\n\t\t\tbvh = null;\n\n\t\t}\n\n\t\tsuper();\n\n\t\tthis.name = 'MeshBVHHelper';\n\t\tthis.depth = depth;\n\t\tthis.mesh = mesh;\n\t\tthis.bvh = bvh;\n\t\tthis.displayParents = false;\n\t\tthis.displayEdges = true;\n\t\tthis._roots = [];\n\n\t\tconst edgeMaterial = new LineBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tconst meshMaterial = new MeshBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tmeshMaterial.color = edgeMaterial.color;\n\n\t\tthis.edgeMaterial = edgeMaterial;\n\t\tthis.meshMaterial = meshMaterial;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst bvh = this.bvh || this.mesh.geometry.boundsTree;\n\t\tconst totalRoots = bvh ? bvh._roots.length : 0;\n\t\twhile ( this._roots.length > totalRoots ) {\n\n\t\t\tconst root = this._roots.pop();\n\t\t\troot.geometry.dispose();\n\t\t\tthis.remove( root );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < totalRoots; i ++ ) {\n\n\t\t\tconst { depth, edgeMaterial, meshMaterial, displayParents, displayEdges } = this;\n\n\t\t\tif ( i >= this._roots.length ) {\n\n\t\t\t\tconst root = new MeshBVHRootHelper( bvh, edgeMaterial, depth, i );\n\t\t\t\tthis.add( root );\n\t\t\t\tthis._roots.push( root );\n\n\t\t\t}\n\n\t\t\tconst root = this._roots[ i ];\n\t\t\troot.bvh = bvh;\n\t\t\troot.depth = depth;\n\t\t\troot.displayParents = displayParents;\n\t\t\troot.displayEdges = displayEdges;\n\t\t\troot.material = displayEdges ? edgeMaterial : meshMaterial;\n\t\t\troot.update();\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( ...args ) {\n\n\t\tconst mesh = this.mesh;\n\t\tconst parent = this.parent;\n\n\t\tif ( mesh !== null ) {\n\n\t\t\tmesh.updateWorldMatrix( true, false );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tthis.matrix\n\t\t\t\t\t.copy( parent.matrixWorld )\n\t\t\t\t\t.invert()\n\t\t\t\t\t.multiply( mesh.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrix\n\t\t\t\t\t.copy( mesh.matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.matrix.decompose(\n\t\t\t\tthis.position,\n\t\t\t\tthis.quaternion,\n\t\t\t\tthis.scale,\n\t\t\t);\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( ...args );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.depth = source.depth;\n\t\tthis.mesh = source.mesh;\n\t\tthis.bvh = source.bvh;\n\t\tthis.opacity = source.opacity;\n\t\tthis.color.copy( source.color );\n\n\t}\n\n\tclone() {\n\n\t\treturn new MeshBVHHelper( this.mesh, this.bvh, this.depth );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.edgeMaterial.dispose();\n\t\tthis.meshMaterial.dispose();\n\n\t\tconst children = this.children;\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].geometry.dispose();\n\n\t\t}\n\n\t}\n\n}\n\nexport class MeshBVHVisualizer extends MeshBVHHelper {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tconsole.warn( 'MeshBVHVisualizer: MeshBVHVisualizer has been deprecated. Use MeshBVHHelper, instead.' );\n\n\t}\n\n}\n\nexport { MeshBVHHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}