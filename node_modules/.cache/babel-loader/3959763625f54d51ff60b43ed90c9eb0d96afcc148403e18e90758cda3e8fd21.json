{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ShaderLib, Mesh, BoxGeometry, ShaderMaterial, UniformsUtils, BackSide, Scene, PerspectiveCamera } from \"three\";\nimport { Pass } from \"./Pass.js\";\nvar CubeTexturePass = /*#__PURE__*/function (_Pass) {\n  _inherits(CubeTexturePass, _Pass);\n  var _super = _createSuper(CubeTexturePass);\n  function CubeTexturePass(camera, tCube) {\n    var _this;\n    var opacity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    _classCallCheck(this, CubeTexturePass);\n    _this = _super.call(this);\n    _this.camera = camera;\n    _this.needsSwap = false;\n    _this.cubeShader = ShaderLib[\"cube\"];\n    _this.cubeMesh = new Mesh(new BoxGeometry(10, 10, 10), new ShaderMaterial({\n      uniforms: UniformsUtils.clone(_this.cubeShader.uniforms),\n      vertexShader: _this.cubeShader.vertexShader,\n      fragmentShader: _this.cubeShader.fragmentShader,\n      depthTest: false,\n      depthWrite: false,\n      side: BackSide\n    }));\n    Object.defineProperty(_this.cubeMesh.material, \"envMap\", {\n      get: function get() {\n        return this.uniforms.tCube.value;\n      }\n    });\n    _this.tCube = tCube;\n    _this.opacity = opacity;\n    _this.cubeScene = new Scene();\n    _this.cubeCamera = new PerspectiveCamera();\n    _this.cubeScene.add(_this.cubeMesh);\n    return _this;\n  }\n  _createClass(CubeTexturePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      var oldAutoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      this.cubeCamera.projectionMatrix.copy(this.camera.projectionMatrix);\n      this.cubeCamera.quaternion.setFromRotationMatrix(this.camera.matrixWorld);\n      this.cubeMesh.material.uniforms.tCube.value = this.tCube;\n      this.cubeMesh.material.uniforms.tFlip.value = this.tCube.isCubeTexture && this.tCube.isRenderTargetTexture === false ? -1 : 1;\n      this.cubeMesh.material.uniforms.opacity.value = this.opacity;\n      this.cubeMesh.material.transparent = this.opacity < 1;\n      renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n      if (this.clear) renderer.clear();\n      renderer.render(this.cubeScene, this.cubeCamera);\n      renderer.autoClear = oldAutoClear;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.cubeMesh.geometry.dispose();\n      this.cubeMesh.material.dispose();\n    }\n  }]);\n  return CubeTexturePass;\n}(Pass);\nexport { CubeTexturePass };","map":{"version":3,"names":["CubeTexturePass","_Pass","_inherits","_super","_createSuper","camera","tCube","_this","opacity","arguments","length","undefined","_classCallCheck","call","needsSwap","cubeShader","ShaderLib","cubeMesh","Mesh","BoxGeometry","ShaderMaterial","uniforms","UniformsUtils","clone","vertexShader","fragmentShader","depthTest","depthWrite","side","BackSide","Object","defineProperty","material","get","value","cubeScene","Scene","cubeCamera","PerspectiveCamera","add","_createClass","key","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","projectionMatrix","copy","quaternion","setFromRotationMatrix","matrixWorld","tFlip","isCubeTexture","isRenderTargetTexture","transparent","setRenderTarget","renderToScreen","clear","dispose","geometry","Pass"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\postprocessing\\CubeTexturePass.js"],"sourcesContent":["import { BackSide, BoxGeometry, Mesh, PerspectiveCamera, Scene, ShaderLib, ShaderMaterial, UniformsUtils } from 'three'\nimport { Pass } from './Pass'\n\nclass CubeTexturePass extends Pass {\n  constructor(camera, tCube, opacity = 1) {\n    super()\n\n    this.camera = camera\n\n    this.needsSwap = false\n\n    this.cubeShader = ShaderLib['cube']\n    this.cubeMesh = new Mesh(\n      new BoxGeometry(10, 10, 10),\n      new ShaderMaterial({\n        uniforms: UniformsUtils.clone(this.cubeShader.uniforms),\n        vertexShader: this.cubeShader.vertexShader,\n        fragmentShader: this.cubeShader.fragmentShader,\n        depthTest: false,\n        depthWrite: false,\n        side: BackSide,\n      }),\n    )\n\n    Object.defineProperty(this.cubeMesh.material, 'envMap', {\n      get: function () {\n        return this.uniforms.tCube.value\n      },\n    })\n\n    this.tCube = tCube\n    this.opacity = opacity\n\n    this.cubeScene = new Scene()\n    this.cubeCamera = new PerspectiveCamera()\n    this.cubeScene.add(this.cubeMesh)\n  }\n\n  render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive*/) {\n    const oldAutoClear = renderer.autoClear\n    renderer.autoClear = false\n\n    this.cubeCamera.projectionMatrix.copy(this.camera.projectionMatrix)\n    this.cubeCamera.quaternion.setFromRotationMatrix(this.camera.matrixWorld)\n\n    this.cubeMesh.material.uniforms.tCube.value = this.tCube\n    this.cubeMesh.material.uniforms.tFlip.value =\n      this.tCube.isCubeTexture && this.tCube.isRenderTargetTexture === false ? -1 : 1\n    this.cubeMesh.material.uniforms.opacity.value = this.opacity\n    this.cubeMesh.material.transparent = this.opacity < 1.0\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer)\n    if (this.clear) renderer.clear()\n    renderer.render(this.cubeScene, this.cubeCamera)\n\n    renderer.autoClear = oldAutoClear\n  }\n\n  dispose() {\n    this.cubeMesh.geometry.dispose()\n    this.cubeMesh.material.dispose()\n  }\n}\n\nexport { CubeTexturePass }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}