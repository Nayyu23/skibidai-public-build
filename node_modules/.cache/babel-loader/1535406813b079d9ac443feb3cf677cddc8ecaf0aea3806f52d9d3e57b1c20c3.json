{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Line, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Mesh, MeshBasicMaterial, BackSide } from \"three\";\nvar RectAreaLightHelper = /*#__PURE__*/function (_Line) {\n  _inherits(RectAreaLightHelper, _Line);\n  var _super = _createSuper(RectAreaLightHelper);\n  function RectAreaLightHelper(light, color) {\n    var _this;\n    _classCallCheck(this, RectAreaLightHelper);\n    var positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    var geometry = new BufferGeometry();\n    geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    _this = _super.call(this, geometry, material);\n    _this.light = light;\n    _this.color = color;\n    _this.type = \"RectAreaLightHelper\";\n    var positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    var geometry2 = new BufferGeometry();\n    geometry2.setAttribute(\"position\", new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    _this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      side: BackSide,\n      fog: false\n    })));\n    return _this;\n  }\n  _createClass(RectAreaLightHelper, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld() {\n      this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n      if (this.color !== void 0) {\n        this.material.color.set(this.color);\n        this.children[0].material.color.set(this.color);\n      } else {\n        this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);\n        var c = this.material.color;\n        var max = Math.max(c.r, c.g, c.b);\n        if (max > 1) c.multiplyScalar(1 / max);\n        this.children[0].material.color.copy(this.material.color);\n      }\n      this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld);\n      this.children[0].matrixWorld.copy(this.matrixWorld);\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n      this.material.dispose();\n      this.children[0].geometry.dispose();\n      this.children[0].material.dispose();\n    }\n  }]);\n  return RectAreaLightHelper;\n}(Line);\nexport { RectAreaLightHelper };","map":{"version":3,"names":["RectAreaLightHelper","_Line","_inherits","_super","_createSuper","light","color","_this","_classCallCheck","positions","geometry","BufferGeometry","setAttribute","Float32BufferAttribute","computeBoundingSphere","material","LineBasicMaterial","fog","call","type","positions2","geometry2","add","Mesh","MeshBasicMaterial","side","BackSide","_createClass","key","value","updateMatrixWorld","scale","set","width","height","children","copy","multiplyScalar","intensity","c","max","Math","r","g","b","matrixWorld","extractRotation","copyPosition","dispose","Line"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\helpers\\RectAreaLightHelper.js"],"sourcesContent":["import {\n  BackSide,\n  BufferGeometry,\n  Float32BufferAttribute,\n  Line,\n  LineBasicMaterial,\n  Mesh,\n  MeshBasicMaterial,\n} from 'three'\n\n/**\n *  This helper must be added as a child of the light\n */\n\nclass RectAreaLightHelper extends Line {\n  constructor(light, color) {\n    const positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0]\n\n    const geometry = new BufferGeometry()\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3))\n    geometry.computeBoundingSphere()\n\n    const material = new LineBasicMaterial({ fog: false })\n\n    super(geometry, material)\n\n    this.light = light\n    this.color = color // optional hardwired color for the helper\n    this.type = 'RectAreaLightHelper'\n\n    //\n\n    const positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0]\n\n    const geometry2 = new BufferGeometry()\n    geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3))\n    geometry2.computeBoundingSphere()\n\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({ side: BackSide, fog: false })))\n  }\n\n  updateMatrixWorld() {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1)\n\n    if (this.color !== undefined) {\n      this.material.color.set(this.color)\n      this.children[0].material.color.set(this.color)\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)\n\n      // prevent hue shift\n      const c = this.material.color\n      const max = Math.max(c.r, c.g, c.b)\n      if (max > 1) c.multiplyScalar(1 / max)\n\n      this.children[0].material.color.copy(this.material.color)\n    }\n\n    // ignore world scale on light\n    this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld)\n\n    this.children[0].matrixWorld.copy(this.matrixWorld)\n  }\n\n  dispose() {\n    this.geometry.dispose()\n    this.material.dispose()\n    this.children[0].geometry.dispose()\n    this.children[0].material.dispose()\n  }\n}\n\nexport { RectAreaLightHelper }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}