{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Vector3 } from \"three\";\nvar _v1 = new Vector3();\nvar _v2 = new Vector3();\nvar _v3 = new Vector3();\nvar EPS = 1e-10;\nvar Capsule = /*#__PURE__*/function () {\n  function Capsule() {\n    var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3(0, 0, 0);\n    var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3(0, 1, 0);\n    var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    _classCallCheck(this, Capsule);\n    this.start = start;\n    this.end = end;\n    this.radius = radius;\n  }\n  _createClass(Capsule, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Capsule(this.start.clone(), this.end.clone(), this.radius);\n    }\n  }, {\n    key: \"set\",\n    value: function set(start, end, radius) {\n      this.start.copy(start);\n      this.end.copy(end);\n      this.radius = radius;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(capsule) {\n      this.start.copy(capsule.start);\n      this.end.copy(capsule.end);\n      this.radius = capsule.radius;\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(target) {\n      return target.copy(this.end).add(this.start).multiplyScalar(0.5);\n    }\n  }, {\n    key: \"translate\",\n    value: function translate(v) {\n      this.start.add(v);\n      this.end.add(v);\n    }\n  }, {\n    key: \"checkAABBAxis\",\n    value: function checkAABBAxis(p1x, p1y, p2x, p2y, minx, maxx, miny, maxy, radius) {\n      return (minx - p1x < radius || minx - p2x < radius) && (p1x - maxx < radius || p2x - maxx < radius) && (miny - p1y < radius || miny - p2y < radius) && (p1y - maxy < radius || p2y - maxy < radius);\n    }\n  }, {\n    key: \"intersectsBox\",\n    value: function intersectsBox(box) {\n      return this.checkAABBAxis(this.start.x, this.start.y, this.end.x, this.end.y, box.min.x, box.max.x, box.min.y, box.max.y, this.radius) && this.checkAABBAxis(this.start.x, this.start.z, this.end.x, this.end.z, box.min.x, box.max.x, box.min.z, box.max.z, this.radius) && this.checkAABBAxis(this.start.y, this.start.z, this.end.y, this.end.z, box.min.y, box.max.y, box.min.z, box.max.z, this.radius);\n    }\n  }, {\n    key: \"lineLineMinimumPoints\",\n    value: function lineLineMinimumPoints(line1, line2) {\n      var r = _v1.copy(line1.end).sub(line1.start);\n      var s = _v2.copy(line2.end).sub(line2.start);\n      var w = _v3.copy(line2.start).sub(line1.start);\n      var a = r.dot(s),\n        b = r.dot(r),\n        c = s.dot(s),\n        d = s.dot(w),\n        e = r.dot(w);\n      var t1, t2;\n      var divisor = b * c - a * a;\n      if (Math.abs(divisor) < EPS) {\n        var d1 = -d / c;\n        var d2 = (a - d) / c;\n        if (Math.abs(d1 - 0.5) < Math.abs(d2 - 0.5)) {\n          t1 = 0;\n          t2 = d1;\n        } else {\n          t1 = 1;\n          t2 = d2;\n        }\n      } else {\n        t1 = (d * a + e * c) / divisor;\n        t2 = (t1 * a - d) / c;\n      }\n      t2 = Math.max(0, Math.min(1, t2));\n      t1 = Math.max(0, Math.min(1, t1));\n      var point1 = r.multiplyScalar(t1).add(line1.start);\n      var point2 = s.multiplyScalar(t2).add(line2.start);\n      return [point1, point2];\n    }\n  }]);\n  return Capsule;\n}();\nexport { Capsule };","map":{"version":3,"names":["_v1","Vector3","_v2","_v3","EPS","Capsule","start","arguments","length","undefined","end","radius","_classCallCheck","_createClass","key","value","clone","set","copy","capsule","getCenter","target","add","multiplyScalar","translate","v","checkAABBAxis","p1x","p1y","p2x","p2y","minx","maxx","miny","maxy","intersectsBox","box","x","y","min","max","z","lineLineMinimumPoints","line1","line2","r","sub","s","w","a","dot","b","c","d","e","t1","t2","divisor","Math","abs","d1","d2","point1","point2"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\math\\Capsule.js"],"sourcesContent":["import { Vector3 } from 'three'\n\nconst _v1 = new Vector3()\nconst _v2 = new Vector3()\nconst _v3 = new Vector3()\n\nconst EPS = 1e-10\n\nclass Capsule {\n  constructor(start = new Vector3(0, 0, 0), end = new Vector3(0, 1, 0), radius = 1) {\n    this.start = start\n    this.end = end\n    this.radius = radius\n  }\n\n  clone() {\n    return new Capsule(this.start.clone(), this.end.clone(), this.radius)\n  }\n\n  set(start, end, radius) {\n    this.start.copy(start)\n    this.end.copy(end)\n    this.radius = radius\n  }\n\n  copy(capsule) {\n    this.start.copy(capsule.start)\n    this.end.copy(capsule.end)\n    this.radius = capsule.radius\n  }\n\n  getCenter(target) {\n    return target.copy(this.end).add(this.start).multiplyScalar(0.5)\n  }\n\n  translate(v) {\n    this.start.add(v)\n    this.end.add(v)\n  }\n\n  checkAABBAxis(p1x, p1y, p2x, p2y, minx, maxx, miny, maxy, radius) {\n    return (\n      (minx - p1x < radius || minx - p2x < radius) &&\n      (p1x - maxx < radius || p2x - maxx < radius) &&\n      (miny - p1y < radius || miny - p2y < radius) &&\n      (p1y - maxy < radius || p2y - maxy < radius)\n    )\n  }\n\n  intersectsBox(box) {\n    return (\n      this.checkAABBAxis(\n        this.start.x,\n        this.start.y,\n        this.end.x,\n        this.end.y,\n        box.min.x,\n        box.max.x,\n        box.min.y,\n        box.max.y,\n        this.radius,\n      ) &&\n      this.checkAABBAxis(\n        this.start.x,\n        this.start.z,\n        this.end.x,\n        this.end.z,\n        box.min.x,\n        box.max.x,\n        box.min.z,\n        box.max.z,\n        this.radius,\n      ) &&\n      this.checkAABBAxis(\n        this.start.y,\n        this.start.z,\n        this.end.y,\n        this.end.z,\n        box.min.y,\n        box.max.y,\n        box.min.z,\n        box.max.z,\n        this.radius,\n      )\n    )\n  }\n\n  lineLineMinimumPoints(line1, line2) {\n    const r = _v1.copy(line1.end).sub(line1.start)\n    const s = _v2.copy(line2.end).sub(line2.start)\n    const w = _v3.copy(line2.start).sub(line1.start)\n\n    const a = r.dot(s),\n      b = r.dot(r),\n      c = s.dot(s),\n      d = s.dot(w),\n      e = r.dot(w)\n\n    let t1, t2\n    const divisor = b * c - a * a\n\n    if (Math.abs(divisor) < EPS) {\n      const d1 = -d / c\n      const d2 = (a - d) / c\n\n      if (Math.abs(d1 - 0.5) < Math.abs(d2 - 0.5)) {\n        t1 = 0\n        t2 = d1\n      } else {\n        t1 = 1\n        t2 = d2\n      }\n    } else {\n      t1 = (d * a + e * c) / divisor\n      t2 = (t1 * a - d) / c\n    }\n\n    t2 = Math.max(0, Math.min(1, t2))\n    t1 = Math.max(0, Math.min(1, t1))\n\n    const point1 = r.multiplyScalar(t1).add(line1.start)\n    const point2 = s.multiplyScalar(t2).add(line2.start)\n\n    return [point1, point2]\n  }\n}\n\nexport { Capsule }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}