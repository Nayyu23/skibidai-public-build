{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Loader, FileLoader, BufferGeometry, Vector3, Float32BufferAttribute, AnimationClip } from \"three\";\nvar _normalData = [[-0.525731, 0, 0.850651], [-0.442863, 0.238856, 0.864188], [-0.295242, 0, 0.955423], [-0.309017, 0.5, 0.809017], [-0.16246, 0.262866, 0.951056], [0, 0, 1], [0, 0.850651, 0.525731], [-0.147621, 0.716567, 0.681718], [0.147621, 0.716567, 0.681718], [0, 0.525731, 0.850651], [0.309017, 0.5, 0.809017], [0.525731, 0, 0.850651], [0.295242, 0, 0.955423], [0.442863, 0.238856, 0.864188], [0.16246, 0.262866, 0.951056], [-0.681718, 0.147621, 0.716567], [-0.809017, 0.309017, 0.5], [-0.587785, 0.425325, 0.688191], [-0.850651, 0.525731, 0], [-0.864188, 0.442863, 0.238856], [-0.716567, 0.681718, 0.147621], [-0.688191, 0.587785, 0.425325], [-0.5, 0.809017, 0.309017], [-0.238856, 0.864188, 0.442863], [-0.425325, 0.688191, 0.587785], [-0.716567, 0.681718, -0.147621], [-0.5, 0.809017, -0.309017], [-0.525731, 0.850651, 0], [0, 0.850651, -0.525731], [-0.238856, 0.864188, -0.442863], [0, 0.955423, -0.295242], [-0.262866, 0.951056, -0.16246], [0, 1, 0], [0, 0.955423, 0.295242], [-0.262866, 0.951056, 0.16246], [0.238856, 0.864188, 0.442863], [0.262866, 0.951056, 0.16246], [0.5, 0.809017, 0.309017], [0.238856, 0.864188, -0.442863], [0.262866, 0.951056, -0.16246], [0.5, 0.809017, -0.309017], [0.850651, 0.525731, 0], [0.716567, 0.681718, 0.147621], [0.716567, 0.681718, -0.147621], [0.525731, 0.850651, 0], [0.425325, 0.688191, 0.587785], [0.864188, 0.442863, 0.238856], [0.688191, 0.587785, 0.425325], [0.809017, 0.309017, 0.5], [0.681718, 0.147621, 0.716567], [0.587785, 0.425325, 0.688191], [0.955423, 0.295242, 0], [1, 0, 0], [0.951056, 0.16246, 0.262866], [0.850651, -0.525731, 0], [0.955423, -0.295242, 0], [0.864188, -0.442863, 0.238856], [0.951056, -0.16246, 0.262866], [0.809017, -0.309017, 0.5], [0.681718, -0.147621, 0.716567], [0.850651, 0, 0.525731], [0.864188, 0.442863, -0.238856], [0.809017, 0.309017, -0.5], [0.951056, 0.16246, -0.262866], [0.525731, 0, -0.850651], [0.681718, 0.147621, -0.716567], [0.681718, -0.147621, -0.716567], [0.850651, 0, -0.525731], [0.809017, -0.309017, -0.5], [0.864188, -0.442863, -0.238856], [0.951056, -0.16246, -0.262866], [0.147621, 0.716567, -0.681718], [0.309017, 0.5, -0.809017], [0.425325, 0.688191, -0.587785], [0.442863, 0.238856, -0.864188], [0.587785, 0.425325, -0.688191], [0.688191, 0.587785, -0.425325], [-0.147621, 0.716567, -0.681718], [-0.309017, 0.5, -0.809017], [0, 0.525731, -0.850651], [-0.525731, 0, -0.850651], [-0.442863, 0.238856, -0.864188], [-0.295242, 0, -0.955423], [-0.16246, 0.262866, -0.951056], [0, 0, -1], [0.295242, 0, -0.955423], [0.16246, 0.262866, -0.951056], [-0.442863, -0.238856, -0.864188], [-0.309017, -0.5, -0.809017], [-0.16246, -0.262866, -0.951056], [0, -0.850651, -0.525731], [-0.147621, -0.716567, -0.681718], [0.147621, -0.716567, -0.681718], [0, -0.525731, -0.850651], [0.309017, -0.5, -0.809017], [0.442863, -0.238856, -0.864188], [0.16246, -0.262866, -0.951056], [0.238856, -0.864188, -0.442863], [0.5, -0.809017, -0.309017], [0.425325, -0.688191, -0.587785], [0.716567, -0.681718, -0.147621], [0.688191, -0.587785, -0.425325], [0.587785, -0.425325, -0.688191], [0, -0.955423, -0.295242], [0, -1, 0], [0.262866, -0.951056, -0.16246], [0, -0.850651, 0.525731], [0, -0.955423, 0.295242], [0.238856, -0.864188, 0.442863], [0.262866, -0.951056, 0.16246], [0.5, -0.809017, 0.309017], [0.716567, -0.681718, 0.147621], [0.525731, -0.850651, 0], [-0.238856, -0.864188, -0.442863], [-0.5, -0.809017, -0.309017], [-0.262866, -0.951056, -0.16246], [-0.850651, -0.525731, 0], [-0.716567, -0.681718, -0.147621], [-0.716567, -0.681718, 0.147621], [-0.525731, -0.850651, 0], [-0.5, -0.809017, 0.309017], [-0.238856, -0.864188, 0.442863], [-0.262866, -0.951056, 0.16246], [-0.864188, -0.442863, 0.238856], [-0.809017, -0.309017, 0.5], [-0.688191, -0.587785, 0.425325], [-0.681718, -0.147621, 0.716567], [-0.442863, -0.238856, 0.864188], [-0.587785, -0.425325, 0.688191], [-0.309017, -0.5, 0.809017], [-0.147621, -0.716567, 0.681718], [-0.425325, -0.688191, 0.587785], [-0.16246, -0.262866, 0.951056], [0.442863, -0.238856, 0.864188], [0.16246, -0.262866, 0.951056], [0.309017, -0.5, 0.809017], [0.147621, -0.716567, 0.681718], [0, -0.525731, 0.850651], [0.425325, -0.688191, 0.587785], [0.587785, -0.425325, 0.688191], [0.688191, -0.587785, 0.425325], [-0.955423, 0.295242, 0], [-0.951056, 0.16246, 0.262866], [-1, 0, 0], [-0.850651, 0, 0.525731], [-0.955423, -0.295242, 0], [-0.951056, -0.16246, 0.262866], [-0.864188, 0.442863, -0.238856], [-0.951056, 0.16246, -0.262866], [-0.809017, 0.309017, -0.5], [-0.864188, -0.442863, -0.238856], [-0.951056, -0.16246, -0.262866], [-0.809017, -0.309017, -0.5], [-0.681718, 0.147621, -0.716567], [-0.681718, -0.147621, -0.716567], [-0.850651, 0, -0.525731], [-0.688191, 0.587785, -0.425325], [-0.587785, 0.425325, -0.688191], [-0.425325, 0.688191, -0.587785], [-0.425325, -0.688191, -0.587785], [-0.587785, -0.425325, -0.688191], [-0.688191, -0.587785, -0.425325]];\nvar MD2Loader = /*#__PURE__*/function (_Loader) {\n  _inherits(MD2Loader, _Loader);\n  var _super = _createSuper(MD2Loader);\n  function MD2Loader(manager) {\n    _classCallCheck(this, MD2Loader);\n    return _super.call(this, manager);\n  }\n  _createClass(MD2Loader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.setResponseType(\"arraybuffer\");\n      loader.setRequestHeader(scope.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (buffer) {\n        try {\n          onLoad(scope.parse(buffer));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(buffer) {\n      var data = new DataView(buffer);\n      var header = {};\n      var headerNames = [\"ident\", \"version\", \"skinwidth\", \"skinheight\", \"framesize\", \"num_skins\", \"num_vertices\", \"num_st\", \"num_tris\", \"num_glcmds\", \"num_frames\", \"offset_skins\", \"offset_st\", \"offset_tris\", \"offset_frames\", \"offset_glcmds\", \"offset_end\"];\n      for (var i = 0; i < headerNames.length; i++) {\n        header[headerNames[i]] = data.getInt32(i * 4, true);\n      }\n      if (header.ident !== 844121161 || header.version !== 8) {\n        console.error(\"Not a valid MD2 file\");\n        return;\n      }\n      if (header.offset_end !== data.byteLength) {\n        console.error(\"Corrupted MD2 file\");\n        return;\n      }\n      var geometry = new BufferGeometry();\n      var uvsTemp = [];\n      var offset = header.offset_st;\n      for (var _i = 0, l = header.num_st; _i < l; _i++) {\n        var u = data.getInt16(offset + 0, true);\n        var v = data.getInt16(offset + 2, true);\n        uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight);\n        offset += 4;\n      }\n      offset = header.offset_tris;\n      var vertexIndices = [];\n      var uvIndices = [];\n      for (var _i2 = 0, _l = header.num_tris; _i2 < _l; _i2++) {\n        vertexIndices.push(data.getUint16(offset + 0, true), data.getUint16(offset + 2, true), data.getUint16(offset + 4, true));\n        uvIndices.push(data.getUint16(offset + 6, true), data.getUint16(offset + 8, true), data.getUint16(offset + 10, true));\n        offset += 12;\n      }\n      var translation = new Vector3();\n      var scale = new Vector3();\n      var string = [];\n      var frames = [];\n      offset = header.offset_frames;\n      for (var _i3 = 0, _l2 = header.num_frames; _i3 < _l2; _i3++) {\n        scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true));\n        translation.set(data.getFloat32(offset + 12, true), data.getFloat32(offset + 16, true), data.getFloat32(offset + 20, true));\n        offset += 24;\n        for (var j = 0; j < 16; j++) {\n          var character = data.getUint8(offset + j, true);\n          if (character === 0) break;\n          string[j] = character;\n        }\n        var frame = {\n          name: String.fromCharCode.apply(null, string),\n          vertices: [],\n          normals: []\n        };\n        offset += 16;\n        for (var _j = 0; _j < header.num_vertices; _j++) {\n          var x = data.getUint8(offset++, true);\n          var y = data.getUint8(offset++, true);\n          var z = data.getUint8(offset++, true);\n          var n = _normalData[data.getUint8(offset++, true)];\n          x = x * scale.x + translation.x;\n          y = y * scale.y + translation.y;\n          z = z * scale.z + translation.z;\n          frame.vertices.push(x, z, y);\n          frame.normals.push(n[0], n[2], n[1]);\n        }\n        frames.push(frame);\n      }\n      var positions = [];\n      var normals = [];\n      var uvs = [];\n      var verticesTemp = frames[0].vertices;\n      var normalsTemp = frames[0].normals;\n      for (var _i4 = 0, _l3 = vertexIndices.length; _i4 < _l3; _i4++) {\n        var vertexIndex = vertexIndices[_i4];\n        var stride = vertexIndex * 3;\n        var _x = verticesTemp[stride];\n        var _y = verticesTemp[stride + 1];\n        var _z = verticesTemp[stride + 2];\n        positions.push(_x, _y, _z);\n        var nx = normalsTemp[stride];\n        var ny = normalsTemp[stride + 1];\n        var nz = normalsTemp[stride + 2];\n        normals.push(nx, ny, nz);\n        var uvIndex = uvIndices[_i4];\n        stride = uvIndex * 2;\n        var _u = uvsTemp[stride];\n        var _v = uvsTemp[stride + 1];\n        uvs.push(_u, _v);\n      }\n      geometry.setAttribute(\"position\", new Float32BufferAttribute(positions, 3));\n      geometry.setAttribute(\"normal\", new Float32BufferAttribute(normals, 3));\n      geometry.setAttribute(\"uv\", new Float32BufferAttribute(uvs, 2));\n      var morphPositions = [];\n      var morphNormals = [];\n      for (var _i5 = 0, _l4 = frames.length; _i5 < _l4; _i5++) {\n        var _frame = frames[_i5];\n        var attributeName = _frame.name;\n        if (_frame.vertices.length > 0) {\n          var positions2 = [];\n          for (var _j2 = 0, jl = vertexIndices.length; _j2 < jl; _j2++) {\n            var _vertexIndex = vertexIndices[_j2];\n            var _stride = _vertexIndex * 3;\n            var _x2 = _frame.vertices[_stride];\n            var _y2 = _frame.vertices[_stride + 1];\n            var _z2 = _frame.vertices[_stride + 2];\n            positions2.push(_x2, _y2, _z2);\n          }\n          var positionAttribute = new Float32BufferAttribute(positions2, 3);\n          positionAttribute.name = attributeName;\n          morphPositions.push(positionAttribute);\n        }\n        if (_frame.normals.length > 0) {\n          var normals2 = [];\n          for (var _j3 = 0, _jl = vertexIndices.length; _j3 < _jl; _j3++) {\n            var _vertexIndex2 = vertexIndices[_j3];\n            var _stride2 = _vertexIndex2 * 3;\n            var _nx = _frame.normals[_stride2];\n            var _ny = _frame.normals[_stride2 + 1];\n            var _nz = _frame.normals[_stride2 + 2];\n            normals2.push(_nx, _ny, _nz);\n          }\n          var normalAttribute = new Float32BufferAttribute(normals2, 3);\n          normalAttribute.name = attributeName;\n          morphNormals.push(normalAttribute);\n        }\n      }\n      geometry.morphAttributes.position = morphPositions;\n      geometry.morphAttributes.normal = morphNormals;\n      geometry.morphTargetsRelative = false;\n      geometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10);\n      return geometry;\n    }\n  }]);\n  return MD2Loader;\n}(Loader);\nexport { MD2Loader };","map":{"version":3,"names":["_normalData","MD2Loader","_Loader","_inherits","_super","_createSuper","manager","_classCallCheck","call","_createClass","key","value","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","parse","e","console","error","itemError","data","DataView","header","headerNames","i","length","getInt32","ident","version","offset_end","byteLength","geometry","BufferGeometry","uvsTemp","offset","offset_st","l","num_st","u","getInt16","v","push","skinwidth","skinheight","offset_tris","vertexIndices","uvIndices","num_tris","getUint16","translation","Vector3","scale","string","frames","offset_frames","num_frames","set","getFloat32","j","character","getUint8","frame","name","String","fromCharCode","apply","vertices","normals","num_vertices","x","y","z","n","positions","uvs","verticesTemp","normalsTemp","vertexIndex","stride","nx","ny","nz","uvIndex","setAttribute","Float32BufferAttribute","morphPositions","morphNormals","attributeName","positions2","jl","positionAttribute","normals2","normalAttribute","morphAttributes","position","normal","morphTargetsRelative","animations","AnimationClip","CreateClipsFromMorphTargetSequences","Loader"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\loaders\\MD2Loader.js"],"sourcesContent":["import { AnimationClip, BufferGeometry, FileLoader, Float32BufferAttribute, Loader, Vector3 } from 'three'\n\nconst _normalData = [\n  [-0.525731, 0.0, 0.850651],\n  [-0.442863, 0.238856, 0.864188],\n  [-0.295242, 0.0, 0.955423],\n  [-0.309017, 0.5, 0.809017],\n  [-0.16246, 0.262866, 0.951056],\n  [0.0, 0.0, 1.0],\n  [0.0, 0.850651, 0.525731],\n  [-0.147621, 0.716567, 0.681718],\n  [0.147621, 0.716567, 0.681718],\n  [0.0, 0.525731, 0.850651],\n  [0.309017, 0.5, 0.809017],\n  [0.525731, 0.0, 0.850651],\n  [0.295242, 0.0, 0.955423],\n  [0.442863, 0.238856, 0.864188],\n  [0.16246, 0.262866, 0.951056],\n  [-0.681718, 0.147621, 0.716567],\n  [-0.809017, 0.309017, 0.5],\n  [-0.587785, 0.425325, 0.688191],\n  [-0.850651, 0.525731, 0.0],\n  [-0.864188, 0.442863, 0.238856],\n  [-0.716567, 0.681718, 0.147621],\n  [-0.688191, 0.587785, 0.425325],\n  [-0.5, 0.809017, 0.309017],\n  [-0.238856, 0.864188, 0.442863],\n  [-0.425325, 0.688191, 0.587785],\n  [-0.716567, 0.681718, -0.147621],\n  [-0.5, 0.809017, -0.309017],\n  [-0.525731, 0.850651, 0.0],\n  [0.0, 0.850651, -0.525731],\n  [-0.238856, 0.864188, -0.442863],\n  [0.0, 0.955423, -0.295242],\n  [-0.262866, 0.951056, -0.16246],\n  [0.0, 1.0, 0.0],\n  [0.0, 0.955423, 0.295242],\n  [-0.262866, 0.951056, 0.16246],\n  [0.238856, 0.864188, 0.442863],\n  [0.262866, 0.951056, 0.16246],\n  [0.5, 0.809017, 0.309017],\n  [0.238856, 0.864188, -0.442863],\n  [0.262866, 0.951056, -0.16246],\n  [0.5, 0.809017, -0.309017],\n  [0.850651, 0.525731, 0.0],\n  [0.716567, 0.681718, 0.147621],\n  [0.716567, 0.681718, -0.147621],\n  [0.525731, 0.850651, 0.0],\n  [0.425325, 0.688191, 0.587785],\n  [0.864188, 0.442863, 0.238856],\n  [0.688191, 0.587785, 0.425325],\n  [0.809017, 0.309017, 0.5],\n  [0.681718, 0.147621, 0.716567],\n  [0.587785, 0.425325, 0.688191],\n  [0.955423, 0.295242, 0.0],\n  [1.0, 0.0, 0.0],\n  [0.951056, 0.16246, 0.262866],\n  [0.850651, -0.525731, 0.0],\n  [0.955423, -0.295242, 0.0],\n  [0.864188, -0.442863, 0.238856],\n  [0.951056, -0.16246, 0.262866],\n  [0.809017, -0.309017, 0.5],\n  [0.681718, -0.147621, 0.716567],\n  [0.850651, 0.0, 0.525731],\n  [0.864188, 0.442863, -0.238856],\n  [0.809017, 0.309017, -0.5],\n  [0.951056, 0.16246, -0.262866],\n  [0.525731, 0.0, -0.850651],\n  [0.681718, 0.147621, -0.716567],\n  [0.681718, -0.147621, -0.716567],\n  [0.850651, 0.0, -0.525731],\n  [0.809017, -0.309017, -0.5],\n  [0.864188, -0.442863, -0.238856],\n  [0.951056, -0.16246, -0.262866],\n  [0.147621, 0.716567, -0.681718],\n  [0.309017, 0.5, -0.809017],\n  [0.425325, 0.688191, -0.587785],\n  [0.442863, 0.238856, -0.864188],\n  [0.587785, 0.425325, -0.688191],\n  [0.688191, 0.587785, -0.425325],\n  [-0.147621, 0.716567, -0.681718],\n  [-0.309017, 0.5, -0.809017],\n  [0.0, 0.525731, -0.850651],\n  [-0.525731, 0.0, -0.850651],\n  [-0.442863, 0.238856, -0.864188],\n  [-0.295242, 0.0, -0.955423],\n  [-0.16246, 0.262866, -0.951056],\n  [0.0, 0.0, -1.0],\n  [0.295242, 0.0, -0.955423],\n  [0.16246, 0.262866, -0.951056],\n  [-0.442863, -0.238856, -0.864188],\n  [-0.309017, -0.5, -0.809017],\n  [-0.16246, -0.262866, -0.951056],\n  [0.0, -0.850651, -0.525731],\n  [-0.147621, -0.716567, -0.681718],\n  [0.147621, -0.716567, -0.681718],\n  [0.0, -0.525731, -0.850651],\n  [0.309017, -0.5, -0.809017],\n  [0.442863, -0.238856, -0.864188],\n  [0.16246, -0.262866, -0.951056],\n  [0.238856, -0.864188, -0.442863],\n  [0.5, -0.809017, -0.309017],\n  [0.425325, -0.688191, -0.587785],\n  [0.716567, -0.681718, -0.147621],\n  [0.688191, -0.587785, -0.425325],\n  [0.587785, -0.425325, -0.688191],\n  [0.0, -0.955423, -0.295242],\n  [0.0, -1.0, 0.0],\n  [0.262866, -0.951056, -0.16246],\n  [0.0, -0.850651, 0.525731],\n  [0.0, -0.955423, 0.295242],\n  [0.238856, -0.864188, 0.442863],\n  [0.262866, -0.951056, 0.16246],\n  [0.5, -0.809017, 0.309017],\n  [0.716567, -0.681718, 0.147621],\n  [0.525731, -0.850651, 0.0],\n  [-0.238856, -0.864188, -0.442863],\n  [-0.5, -0.809017, -0.309017],\n  [-0.262866, -0.951056, -0.16246],\n  [-0.850651, -0.525731, 0.0],\n  [-0.716567, -0.681718, -0.147621],\n  [-0.716567, -0.681718, 0.147621],\n  [-0.525731, -0.850651, 0.0],\n  [-0.5, -0.809017, 0.309017],\n  [-0.238856, -0.864188, 0.442863],\n  [-0.262866, -0.951056, 0.16246],\n  [-0.864188, -0.442863, 0.238856],\n  [-0.809017, -0.309017, 0.5],\n  [-0.688191, -0.587785, 0.425325],\n  [-0.681718, -0.147621, 0.716567],\n  [-0.442863, -0.238856, 0.864188],\n  [-0.587785, -0.425325, 0.688191],\n  [-0.309017, -0.5, 0.809017],\n  [-0.147621, -0.716567, 0.681718],\n  [-0.425325, -0.688191, 0.587785],\n  [-0.16246, -0.262866, 0.951056],\n  [0.442863, -0.238856, 0.864188],\n  [0.16246, -0.262866, 0.951056],\n  [0.309017, -0.5, 0.809017],\n  [0.147621, -0.716567, 0.681718],\n  [0.0, -0.525731, 0.850651],\n  [0.425325, -0.688191, 0.587785],\n  [0.587785, -0.425325, 0.688191],\n  [0.688191, -0.587785, 0.425325],\n  [-0.955423, 0.295242, 0.0],\n  [-0.951056, 0.16246, 0.262866],\n  [-1.0, 0.0, 0.0],\n  [-0.850651, 0.0, 0.525731],\n  [-0.955423, -0.295242, 0.0],\n  [-0.951056, -0.16246, 0.262866],\n  [-0.864188, 0.442863, -0.238856],\n  [-0.951056, 0.16246, -0.262866],\n  [-0.809017, 0.309017, -0.5],\n  [-0.864188, -0.442863, -0.238856],\n  [-0.951056, -0.16246, -0.262866],\n  [-0.809017, -0.309017, -0.5],\n  [-0.681718, 0.147621, -0.716567],\n  [-0.681718, -0.147621, -0.716567],\n  [-0.850651, 0.0, -0.525731],\n  [-0.688191, 0.587785, -0.425325],\n  [-0.587785, 0.425325, -0.688191],\n  [-0.425325, 0.688191, -0.587785],\n  [-0.425325, -0.688191, -0.587785],\n  [-0.587785, -0.425325, -0.688191],\n  [-0.688191, -0.587785, -0.425325],\n]\n\nclass MD2Loader extends Loader {\n  constructor(manager) {\n    super(manager)\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this\n\n    const loader = new FileLoader(scope.manager)\n    loader.setPath(scope.path)\n    loader.setResponseType('arraybuffer')\n    loader.setRequestHeader(scope.requestHeader)\n    loader.setWithCredentials(scope.withCredentials)\n    loader.load(\n      url,\n      function (buffer) {\n        try {\n          onLoad(scope.parse(buffer))\n        } catch (e) {\n          if (onError) {\n            onError(e)\n          } else {\n            console.error(e)\n          }\n\n          scope.manager.itemError(url)\n        }\n      },\n      onProgress,\n      onError,\n    )\n  }\n\n  parse(buffer) {\n    const data = new DataView(buffer)\n\n    // http://tfc.duke.free.fr/coding/md2-specs-en.html\n\n    const header = {}\n    const headerNames = [\n      'ident',\n      'version',\n      'skinwidth',\n      'skinheight',\n      'framesize',\n      'num_skins',\n      'num_vertices',\n      'num_st',\n      'num_tris',\n      'num_glcmds',\n      'num_frames',\n      'offset_skins',\n      'offset_st',\n      'offset_tris',\n      'offset_frames',\n      'offset_glcmds',\n      'offset_end',\n    ]\n\n    for (let i = 0; i < headerNames.length; i++) {\n      header[headerNames[i]] = data.getInt32(i * 4, true)\n    }\n\n    if (header.ident !== 844121161 || header.version !== 8) {\n      console.error('Not a valid MD2 file')\n      return\n    }\n\n    if (header.offset_end !== data.byteLength) {\n      console.error('Corrupted MD2 file')\n      return\n    }\n\n    //\n\n    const geometry = new BufferGeometry()\n\n    // uvs\n\n    const uvsTemp = []\n    let offset = header.offset_st\n\n    for (let i = 0, l = header.num_st; i < l; i++) {\n      const u = data.getInt16(offset + 0, true)\n      const v = data.getInt16(offset + 2, true)\n\n      uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight)\n\n      offset += 4\n    }\n\n    // triangles\n\n    offset = header.offset_tris\n\n    const vertexIndices = []\n    const uvIndices = []\n\n    for (let i = 0, l = header.num_tris; i < l; i++) {\n      vertexIndices.push(\n        data.getUint16(offset + 0, true),\n        data.getUint16(offset + 2, true),\n        data.getUint16(offset + 4, true),\n      )\n\n      uvIndices.push(\n        data.getUint16(offset + 6, true),\n        data.getUint16(offset + 8, true),\n        data.getUint16(offset + 10, true),\n      )\n\n      offset += 12\n    }\n\n    // frames\n\n    const translation = new Vector3()\n    const scale = new Vector3()\n    const string = []\n\n    const frames = []\n\n    offset = header.offset_frames\n\n    for (let i = 0, l = header.num_frames; i < l; i++) {\n      scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true))\n\n      translation.set(\n        data.getFloat32(offset + 12, true),\n        data.getFloat32(offset + 16, true),\n        data.getFloat32(offset + 20, true),\n      )\n\n      offset += 24\n\n      for (let j = 0; j < 16; j++) {\n        const character = data.getUint8(offset + j, true)\n        if (character === 0) break\n\n        string[j] = character\n      }\n\n      const frame = {\n        name: String.fromCharCode.apply(null, string),\n        vertices: [],\n        normals: [],\n      }\n\n      offset += 16\n\n      for (let j = 0; j < header.num_vertices; j++) {\n        let x = data.getUint8(offset++, true)\n        let y = data.getUint8(offset++, true)\n        let z = data.getUint8(offset++, true)\n        const n = _normalData[data.getUint8(offset++, true)]\n\n        x = x * scale.x + translation.x\n        y = y * scale.y + translation.y\n        z = z * scale.z + translation.z\n\n        frame.vertices.push(x, z, y) // convert to Y-up\n        frame.normals.push(n[0], n[2], n[1]) // convert to Y-up\n      }\n\n      frames.push(frame)\n    }\n\n    // static\n\n    const positions = []\n    const normals = []\n    const uvs = []\n\n    const verticesTemp = frames[0].vertices\n    const normalsTemp = frames[0].normals\n\n    for (let i = 0, l = vertexIndices.length; i < l; i++) {\n      const vertexIndex = vertexIndices[i]\n      let stride = vertexIndex * 3\n\n      //\n\n      const x = verticesTemp[stride]\n      const y = verticesTemp[stride + 1]\n      const z = verticesTemp[stride + 2]\n\n      positions.push(x, y, z)\n\n      //\n\n      const nx = normalsTemp[stride]\n      const ny = normalsTemp[stride + 1]\n      const nz = normalsTemp[stride + 2]\n\n      normals.push(nx, ny, nz)\n\n      //\n\n      const uvIndex = uvIndices[i]\n      stride = uvIndex * 2\n\n      const u = uvsTemp[stride]\n      const v = uvsTemp[stride + 1]\n\n      uvs.push(u, v)\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3))\n    geometry.setAttribute('normal', new Float32BufferAttribute(normals, 3))\n    geometry.setAttribute('uv', new Float32BufferAttribute(uvs, 2))\n\n    // animation\n\n    const morphPositions = []\n    const morphNormals = []\n\n    for (let i = 0, l = frames.length; i < l; i++) {\n      const frame = frames[i]\n      const attributeName = frame.name\n\n      if (frame.vertices.length > 0) {\n        const positions = []\n\n        for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n          const vertexIndex = vertexIndices[j]\n          const stride = vertexIndex * 3\n\n          const x = frame.vertices[stride]\n          const y = frame.vertices[stride + 1]\n          const z = frame.vertices[stride + 2]\n\n          positions.push(x, y, z)\n        }\n\n        const positionAttribute = new Float32BufferAttribute(positions, 3)\n        positionAttribute.name = attributeName\n\n        morphPositions.push(positionAttribute)\n      }\n\n      if (frame.normals.length > 0) {\n        const normals = []\n\n        for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n          const vertexIndex = vertexIndices[j]\n          const stride = vertexIndex * 3\n\n          const nx = frame.normals[stride]\n          const ny = frame.normals[stride + 1]\n          const nz = frame.normals[stride + 2]\n\n          normals.push(nx, ny, nz)\n        }\n\n        const normalAttribute = new Float32BufferAttribute(normals, 3)\n        normalAttribute.name = attributeName\n\n        morphNormals.push(normalAttribute)\n      }\n    }\n\n    geometry.morphAttributes.position = morphPositions\n    geometry.morphAttributes.normal = morphNormals\n    geometry.morphTargetsRelative = false\n\n    geometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10)\n\n    return geometry\n  }\n}\n\nexport { MD2Loader }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}