{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FontLoader } from 'three-stdlib';\nimport { suspend, preload, clear } from 'suspend-react';\nvar fontLoader = null;\nfunction loadFontData(_x) {\n  return _loadFontData.apply(this, arguments);\n}\nfunction _loadFontData() {\n  _loadFontData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(font) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(typeof font === 'string')) {\n            _context.next = 8;\n            break;\n          }\n          _context.next = 3;\n          return fetch(font);\n        case 3:\n          _context.next = 5;\n          return _context.sent.json();\n        case 5:\n          _context.t0 = _context.sent;\n          _context.next = 9;\n          break;\n        case 8:\n          _context.t0 = font;\n        case 9:\n          return _context.abrupt(\"return\", _context.t0);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _loadFontData.apply(this, arguments);\n}\nfunction parseFontData(fontData) {\n  if (!fontLoader) {\n    fontLoader = new FontLoader();\n  }\n  return fontLoader.parse(fontData);\n}\nfunction loader(_x2) {\n  return _loader.apply(this, arguments);\n}\nfunction _loader() {\n  _loader = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(font) {\n    var data;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return loadFontData(font);\n        case 2:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", parseFontData(data));\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _loader.apply(this, arguments);\n}\nfunction useFont(font) {\n  return suspend(loader, [font]);\n}\nuseFont.preload = function (font) {\n  return preload(loader, [font]);\n};\nuseFont.clear = function (font) {\n  return clear([font]);\n};\nexport { useFont };","map":{"version":3,"names":["FontLoader","suspend","preload","clear","fontLoader","loadFontData","_x","_loadFontData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","font","wrap","_callee$","_context","prev","next","fetch","sent","json","t0","abrupt","stop","parseFontData","fontData","parse","loader","_x2","_loader","_callee2","data","_callee2$","_context2","useFont"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@react-three/drei/core/useFont.js"],"sourcesContent":["import { FontLoader } from 'three-stdlib';\nimport { suspend, preload, clear } from 'suspend-react';\n\nlet fontLoader = null;\nasync function loadFontData(font) {\n  return typeof font === 'string' ? await (await fetch(font)).json() : font;\n}\nfunction parseFontData(fontData) {\n  if (!fontLoader) {\n    fontLoader = new FontLoader();\n  }\n  return fontLoader.parse(fontData);\n}\nasync function loader(font) {\n  const data = await loadFontData(font);\n  return parseFontData(data);\n}\nfunction useFont(font) {\n  return suspend(loader, [font]);\n}\nuseFont.preload = font => preload(loader, [font]);\nuseFont.clear = font => clear([font]);\n\nexport { useFont };\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,cAAc;AACzC,SAASC,OAAO,EAAEC,OAAO,EAAEC,KAAK,QAAQ,eAAe;AAEvD,IAAIC,UAAU,GAAG,IAAI;AAAC,SACPC,YAAYA,CAAAC,EAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,cAAA;EAAAA,aAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAA3B,SAAAC,QAA4BC,IAAI;IAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,MACvB,OAAOL,IAAI,KAAK,QAAQ;YAAAG,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAAgBC,KAAK,CAACN,IAAI,CAAC;QAAA;UAAAG,QAAA,CAAAE,IAAA;UAAA,OAAAF,QAAA,CAAAI,IAAA,CAAEC,IAAI;QAAA;UAAAL,QAAA,CAAAM,EAAA,GAAAN,QAAA,CAAAI,IAAA;UAAAJ,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAM,EAAA,GAAKT,IAAI;QAAA;UAAA,OAAAG,QAAA,CAAAO,MAAA,WAAAP,QAAA,CAAAM,EAAA;QAAA;QAAA;UAAA,OAAAN,QAAA,CAAAQ,IAAA;MAAA;IAAA,GAAAZ,OAAA;EAAA,CAC1E;EAAA,OAAAN,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AACD,SAASiB,aAAaA,CAACC,QAAQ,EAAE;EAC/B,IAAI,CAACvB,UAAU,EAAE;IACfA,UAAU,GAAG,IAAIJ,UAAU,CAAC,CAAC;EAC/B;EACA,OAAOI,UAAU,CAACwB,KAAK,CAACD,QAAQ,CAAC;AACnC;AAAC,SACcE,MAAMA,CAAAC,GAAA;EAAA,OAAAC,OAAA,CAAAvB,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAsB,QAAA;EAAAA,OAAA,GAAArB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAArB,SAAAoB,SAAsBlB,IAAI;IAAA,IAAAmB,IAAA;IAAA,OAAAtB,mBAAA,GAAAI,IAAA,UAAAmB,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAjB,IAAA,GAAAiB,SAAA,CAAAhB,IAAA;QAAA;UAAAgB,SAAA,CAAAhB,IAAA;UAAA,OACLd,YAAY,CAACS,IAAI,CAAC;QAAA;UAA/BmB,IAAI,GAAAE,SAAA,CAAAd,IAAA;UAAA,OAAAc,SAAA,CAAAX,MAAA,WACHE,aAAa,CAACO,IAAI,CAAC;QAAA;QAAA;UAAA,OAAAE,SAAA,CAAAV,IAAA;MAAA;IAAA,GAAAO,QAAA;EAAA,CAC3B;EAAA,OAAAD,OAAA,CAAAvB,KAAA,OAAAC,SAAA;AAAA;AACD,SAAS2B,OAAOA,CAACtB,IAAI,EAAE;EACrB,OAAOb,OAAO,CAAC4B,MAAM,EAAE,CAACf,IAAI,CAAC,CAAC;AAChC;AACAsB,OAAO,CAAClC,OAAO,GAAG,UAAAY,IAAI;EAAA,OAAIZ,OAAO,CAAC2B,MAAM,EAAE,CAACf,IAAI,CAAC,CAAC;AAAA;AACjDsB,OAAO,CAACjC,KAAK,GAAG,UAAAW,IAAI;EAAA,OAAIX,KAAK,CAAC,CAACW,IAAI,CAAC,CAAC;AAAA;AAErC,SAASsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}