{"ast":null,"code":"import _slicedToArray from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\nvar vec1 = /* @__PURE__ */new THREE.Vector3();\nvar vec2 = /* @__PURE__ */new THREE.Vector3();\nvar calculateOffset = function calculateOffset(clickPoint, normal, rayStart, rayDir) {\n  var e1 = normal.dot(normal);\n  var e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  var e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  var offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nvar upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nvar scaleV = /* @__PURE__ */new THREE.Vector3();\nvar scaleMatrix = /* @__PURE__ */new THREE.Matrix4();\nvar ScalingSphere = function ScalingSphere(_ref) {\n  var direction = _ref.direction,\n    axis = _ref.axis;\n  var _React$useContext = React.useContext(context),\n    scaleLimits = _React$useContext.scaleLimits,\n    annotations = _React$useContext.annotations,\n    annotationsClass = _React$useContext.annotationsClass,\n    depthTest = _React$useContext.depthTest,\n    scale = _React$useContext.scale,\n    lineWidth = _React$useContext.lineWidth,\n    fixed = _React$useContext.fixed,\n    axisColors = _React$useContext.axisColors,\n    hoveredColor = _React$useContext.hoveredColor,\n    opacity = _React$useContext.opacity,\n    onDragStart = _React$useContext.onDragStart,\n    onDrag = _React$useContext.onDrag,\n    onDragEnd = _React$useContext.onDragEnd,\n    userData = _React$useContext.userData;\n  var size = useThree(function (state) {\n    return state.size;\n  });\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  var camControls = useThree(function (state) {\n    return state.controls;\n  });\n  var divRef = React.useRef(null);\n  var objRef = React.useRef(null);\n  var meshRef = React.useRef(null);\n  var scale0 = React.useRef(1);\n  var scaleCur = React.useRef(1);\n  var clickInfo = React.useRef(null);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isHovered = _React$useState2[0],\n    setIsHovered = _React$useState2[1];\n  var position = fixed ? 1.2 : 1.2 * scale;\n  var onPointerDown = React.useCallback(function (e) {\n    if (annotations) {\n      divRef.current.innerText = \"\".concat(scaleCur.current.toFixed(2));\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    var rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    var clickPoint = e.point.clone();\n    var origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    var dir = direction.clone().applyMatrix4(rotation).normalize();\n    var mPLG = objRef.current.matrixWorld.clone();\n    var mPLGInv = mPLG.clone().invert();\n    var offsetMultiplier = fixed ? 1 / calculateScaleFactor(objRef.current.getWorldPosition(vec1), scale, e.camera, size) : 1;\n    clickInfo.current = {\n      clickPoint: clickPoint,\n      dir: dir,\n      mPLG: mPLG,\n      mPLGInv: mPLGInv,\n      offsetMultiplier: offsetMultiplier\n    };\n    onDragStart({\n      component: 'Sphere',\n      axis: axis,\n      origin: origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, direction, onDragStart, axis, fixed, scale, size]);\n  var onPointerMove = React.useCallback(function (e) {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      var _clickInfo$current = clickInfo.current,\n        clickPoint = _clickInfo$current.clickPoint,\n        dir = _clickInfo$current.dir,\n        mPLG = _clickInfo$current.mPLG,\n        mPLGInv = _clickInfo$current.mPLGInv,\n        offsetMultiplier = _clickInfo$current.offsetMultiplier;\n      var _ref2 = (scaleLimits == null ? void 0 : scaleLimits[axis]) || [1e-5, undefined],\n        _ref3 = _slicedToArray(_ref2, 2),\n        min = _ref3[0],\n        max = _ref3[1]; // always limit the minimal value, since setting it very low might break the transform\n\n      var offsetW = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      var offsetL = offsetW * offsetMultiplier;\n      var offsetH = fixed ? offsetL : offsetL / scale;\n      var upscale = Math.pow(2, offsetH * 0.2);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        upscale = Math.round(upscale * 10) / 10;\n      }\n      upscale = Math.max(upscale, min / scale0.current);\n      if (max !== undefined) {\n        upscale = Math.min(upscale, max / scale0.current);\n      }\n      scaleCur.current = scale0.current * upscale;\n      meshRef.current.position.set(0, position + offsetL, 0);\n      if (annotations) {\n        divRef.current.innerText = \"\".concat(scaleCur.current.toFixed(2));\n      }\n      scaleV.set(1, 1, 1);\n      scaleV.setComponent(axis, upscale);\n      scaleMatrix.makeScale(scaleV.x, scaleV.y, scaleV.z).premultiply(mPLG).multiply(mPLGInv);\n      onDrag(scaleMatrix);\n    }\n  }, [annotations, position, onDrag, isHovered, scaleLimits, axis]);\n  var onPointerUp = React.useCallback(function (e) {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    scale0.current = scaleCur.current;\n    clickInfo.current = null;\n    meshRef.current.position.set(0, position, 0);\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd, position]);\n  var onPointerOut = React.useCallback(function (e) {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  var _React$useMemo = React.useMemo(function () {\n      var radius = fixed ? lineWidth / scale * 1.8 : scale / 22.5;\n      var quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n      var matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n      return {\n        radius: radius,\n        matrixL: matrixL\n      };\n    }, [direction, scale, lineWidth, fixed]),\n    radius = _React$useMemo.radius,\n    matrixL = _React$useMemo.matrixL;\n  var color = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, position / 2, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: meshRef,\n    position: [0, position, 0],\n    renderOrder: 500,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"sphereGeometry\", {\n    args: [radius, 12, 12]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\nexport { ScalingSphere, calculateOffset };","map":{"version":3,"names":["React","THREE","useThree","Html","context","calculateScaleFactor","vec1","Vector3","vec2","calculateOffset","clickPoint","normal","rayStart","rayDir","e1","dot","e2","e3","copy","multiplyScalar","sub","add","offset","upV","scaleV","scaleMatrix","Matrix4","ScalingSphere","_ref","direction","axis","_React$useContext","useContext","scaleLimits","annotations","annotationsClass","depthTest","scale","lineWidth","fixed","axisColors","hoveredColor","opacity","onDragStart","onDrag","onDragEnd","userData","size","state","camControls","controls","divRef","useRef","objRef","meshRef","scale0","scaleCur","clickInfo","_React$useState","useState","_React$useState2","_slicedToArray","isHovered","setIsHovered","position","onPointerDown","useCallback","e","current","innerText","concat","toFixed","style","display","stopPropagation","rotation","extractRotation","matrixWorld","point","clone","origin","setFromMatrixPosition","dir","applyMatrix4","normalize","mPLG","mPLGInv","invert","offsetMultiplier","getWorldPosition","camera","component","directions","enabled","target","setPointerCapture","pointerId","onPointerMove","_clickInfo$current","_ref2","undefined","_ref3","min","max","offsetW","ray","offsetL","offsetH","upscale","Math","pow","shiftKey","round","set","setComponent","makeScale","x","y","z","premultiply","multiply","onPointerUp","releasePointerCapture","onPointerOut","_React$useMemo","useMemo","radius","quaternion","Quaternion","setFromUnitVectors","matrixL","makeRotationFromQuaternion","color","createElement","ref","matrix","matrixAutoUpdate","background","padding","borderRadius","whiteSpace","className","renderOrder","args","transparent","polygonOffset","polygonOffsetFactor"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@react-three/drei/web/pivotControls/ScalingSphere.js"],"sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\n\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst scaleV = /* @__PURE__ */new THREE.Vector3();\nconst scaleMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst ScalingSphere = ({\n  direction,\n  axis\n}) => {\n  const {\n    scaleLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n  const size = useThree(state => state.size);\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const meshRef = React.useRef(null);\n  const scale0 = React.useRef(1);\n  const scaleCur = React.useRef(1);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const position = fixed ? 1.2 : 1.2 * scale;\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    const mPLG = objRef.current.matrixWorld.clone();\n    const mPLGInv = mPLG.clone().invert();\n    const offsetMultiplier = fixed ? 1 / calculateScaleFactor(objRef.current.getWorldPosition(vec1), scale, e.camera, size) : 1;\n    clickInfo.current = {\n      clickPoint,\n      dir,\n      mPLG,\n      mPLGInv,\n      offsetMultiplier\n    };\n    onDragStart({\n      component: 'Sphere',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, direction, onDragStart, axis, fixed, scale, size]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir,\n        mPLG,\n        mPLGInv,\n        offsetMultiplier\n      } = clickInfo.current;\n      const [min, max] = (scaleLimits == null ? void 0 : scaleLimits[axis]) || [1e-5, undefined]; // always limit the minimal value, since setting it very low might break the transform\n\n      const offsetW = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      const offsetL = offsetW * offsetMultiplier;\n      const offsetH = fixed ? offsetL : offsetL / scale;\n      let upscale = Math.pow(2, offsetH * 0.2);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        upscale = Math.round(upscale * 10) / 10;\n      }\n      upscale = Math.max(upscale, min / scale0.current);\n      if (max !== undefined) {\n        upscale = Math.min(upscale, max / scale0.current);\n      }\n      scaleCur.current = scale0.current * upscale;\n      meshRef.current.position.set(0, position + offsetL, 0);\n      if (annotations) {\n        divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      }\n      scaleV.set(1, 1, 1);\n      scaleV.setComponent(axis, upscale);\n      scaleMatrix.makeScale(scaleV.x, scaleV.y, scaleV.z).premultiply(mPLG).multiply(mPLGInv);\n      onDrag(scaleMatrix);\n    }\n  }, [annotations, position, onDrag, isHovered, scaleLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    scale0.current = scaleCur.current;\n    clickInfo.current = null;\n    meshRef.current.position.set(0, position, 0);\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd, position]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    radius,\n    matrixL\n  } = React.useMemo(() => {\n    const radius = fixed ? lineWidth / scale * 1.8 : scale / 22.5;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      radius,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, position / 2, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: meshRef,\n    position: [0, position, 0],\n    renderOrder: 500,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"sphereGeometry\", {\n    args: [radius, 12, 12]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\n\nexport { ScalingSphere, calculateOffset };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}