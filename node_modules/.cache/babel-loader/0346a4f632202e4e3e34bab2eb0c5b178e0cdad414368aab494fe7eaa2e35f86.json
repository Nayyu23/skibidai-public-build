{"ast":null,"code":"import _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, Euler, Quaternion, MathUtils } from \"three\";\nvar DeviceOrientationControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(DeviceOrientationControls, _EventDispatcher);\n  var _super = _createSuper(DeviceOrientationControls);\n  // radians\n  function DeviceOrientationControls(object) {\n    var _this;\n    _classCallCheck(this, DeviceOrientationControls);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"object\");\n    __publicField(_assertThisInitialized(_this), \"changeEvent\", {\n      type: \"change\"\n    });\n    __publicField(_assertThisInitialized(_this), \"EPS\", 1e-6);\n    __publicField(_assertThisInitialized(_this), \"enabled\", true);\n    __publicField(_assertThisInitialized(_this), \"deviceOrientation\", {\n      alpha: 0,\n      beta: 0,\n      gamma: 0\n    });\n    __publicField(_assertThisInitialized(_this), \"screenOrientation\", 0);\n    __publicField(_assertThisInitialized(_this), \"alphaOffset\", 0);\n    __publicField(_assertThisInitialized(_this), \"onDeviceOrientationChangeEvent\", function (event) {\n      _this.deviceOrientation = event;\n    });\n    __publicField(_assertThisInitialized(_this), \"onScreenOrientationChangeEvent\", function () {\n      _this.screenOrientation = window.orientation || 0;\n    });\n    // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n    __publicField(_assertThisInitialized(_this), \"zee\", new Vector3(0, 0, 1));\n    __publicField(_assertThisInitialized(_this), \"euler\", new Euler());\n    __publicField(_assertThisInitialized(_this), \"q0\", new Quaternion());\n    __publicField(_assertThisInitialized(_this), \"q1\", new Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)));\n    // - PI/2 around the x-axis\n    __publicField(_assertThisInitialized(_this), \"setObjectQuaternion\", function (quaternion, alpha, beta, gamma, orient) {\n      _this.euler.set(beta, alpha, -gamma, \"YXZ\");\n      quaternion.setFromEuler(_this.euler);\n      quaternion.multiply(_this.q1);\n      quaternion.multiply(_this.q0.setFromAxisAngle(_this.zee, -orient));\n    });\n    __publicField(_assertThisInitialized(_this), \"connect\", function () {\n      _this.onScreenOrientationChangeEvent();\n      if (window.DeviceOrientationEvent !== void 0 &&\n      // @ts-ignore\n      typeof window.DeviceOrientationEvent.requestPermission === \"function\") {\n        window.DeviceOrientationEvent.requestPermission().then(function (response) {\n          if (response == \"granted\") {\n            window.addEventListener(\"orientationchange\", _this.onScreenOrientationChangeEvent);\n            window.addEventListener(\"deviceorientation\", _this.onDeviceOrientationChangeEvent);\n          }\n        }).catch(function (error) {\n          console.error(\"THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:\", error);\n        });\n      } else {\n        window.addEventListener(\"orientationchange\", _this.onScreenOrientationChangeEvent);\n        window.addEventListener(\"deviceorientation\", _this.onDeviceOrientationChangeEvent);\n      }\n      _this.enabled = true;\n    });\n    __publicField(_assertThisInitialized(_this), \"disconnect\", function () {\n      window.removeEventListener(\"orientationchange\", _this.onScreenOrientationChangeEvent);\n      window.removeEventListener(\"deviceorientation\", _this.onDeviceOrientationChangeEvent);\n      _this.enabled = false;\n    });\n    __publicField(_assertThisInitialized(_this), \"lastQuaternion\", new Quaternion());\n    __publicField(_assertThisInitialized(_this), \"update\", function () {\n      if (_this.enabled === false) return;\n      var device = _this.deviceOrientation;\n      if (device) {\n        var alpha = device.alpha ? MathUtils.degToRad(device.alpha) + _this.alphaOffset : 0;\n        var beta = device.beta ? MathUtils.degToRad(device.beta) : 0;\n        var gamma = device.gamma ? MathUtils.degToRad(device.gamma) : 0;\n        var orient = _this.screenOrientation ? MathUtils.degToRad(_this.screenOrientation) : 0;\n        _this.setObjectQuaternion(_this.object.quaternion, alpha, beta, gamma, orient);\n        if (8 * (1 - _this.lastQuaternion.dot(_this.object.quaternion)) > _this.EPS) {\n          _this.lastQuaternion.copy(_this.object.quaternion);\n          _this.dispatchEvent(_this.changeEvent);\n        }\n      }\n    });\n    __publicField(_assertThisInitialized(_this), \"dispose\", function () {\n      return _this.disconnect();\n    });\n    _this.object = object;\n    _this.object.rotation.reorder(\"YXZ\");\n    _this.connect();\n    return _this;\n  }\n  return _createClass(DeviceOrientationControls);\n}(EventDispatcher);\nexport { DeviceOrientationControls };","map":{"version":3,"names":["DeviceOrientationControls","_EventDispatcher","_inherits","_super","_createSuper","object","_this","_classCallCheck","call","__publicField","_assertThisInitialized","type","alpha","beta","gamma","event","deviceOrientation","screenOrientation","window","orientation","Vector3","Euler","Quaternion","Math","sqrt","quaternion","orient","euler","set","setFromEuler","multiply","q1","q0","setFromAxisAngle","zee","onScreenOrientationChangeEvent","DeviceOrientationEvent","requestPermission","then","response","addEventListener","onDeviceOrientationChangeEvent","catch","error","console","enabled","removeEventListener","device","MathUtils","degToRad","alphaOffset","setObjectQuaternion","lastQuaternion","dot","EPS","copy","dispatchEvent","changeEvent","disconnect","rotation","reorder","connect","_createClass","EventDispatcher"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\controls\\DeviceOrientationControls.ts"],"sourcesContent":["import { Camera, Euler, EventDispatcher, MathUtils, Quaternion, Vector3 } from 'three'\n\n/**\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nclass DeviceOrientationControls extends EventDispatcher {\n  public object: Camera\n\n  private changeEvent = { type: 'change' }\n  private EPS = 0.000001\n\n  public enabled = true\n  public deviceOrientation: Partial<DeviceOrientationEvent> = { alpha: 0, beta: 0, gamma: 0 }\n  public screenOrientation: string | number = 0\n  public alphaOffset = 0 // radians\n\n  constructor(object: Camera) {\n    super()\n\n    this.object = object\n    this.object.rotation.reorder('YXZ')\n\n    this.connect()\n  }\n\n  private onDeviceOrientationChangeEvent = (event: DeviceOrientationEvent): void => {\n    this.deviceOrientation = event\n  }\n\n  private onScreenOrientationChangeEvent = (): void => {\n    this.screenOrientation = window.orientation || 0\n  }\n\n  // The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n  private zee = new Vector3(0, 0, 1)\n  private euler = new Euler()\n  private q0 = new Quaternion()\n  private q1 = new Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)) // - PI/2 around the x-axis\n  private setObjectQuaternion = (\n    quaternion: Quaternion,\n    alpha: number,\n    beta: number,\n    gamma: number,\n    orient: number,\n  ): void => {\n    this.euler.set(beta, alpha, -gamma, 'YXZ') // 'ZXY' for the device, but 'YXZ' for us\n    quaternion.setFromEuler(this.euler) // orient the device\n    quaternion.multiply(this.q1) // camera looks out the back of the device, not the top\n    quaternion.multiply(this.q0.setFromAxisAngle(this.zee, -orient)) // adjust for screen orientation\n  }\n\n  public connect = (): void => {\n    this.onScreenOrientationChangeEvent() // run once on load\n\n    // iOS 13+\n\n    if (\n      window.DeviceOrientationEvent !== undefined &&\n      // @ts-ignore\n      typeof window.DeviceOrientationEvent.requestPermission === 'function'\n    ) {\n      // @ts-ignore\n      window.DeviceOrientationEvent.requestPermission()\n        .then((response: any) => {\n          if (response == 'granted') {\n            window.addEventListener('orientationchange', this.onScreenOrientationChangeEvent)\n            window.addEventListener('deviceorientation', this.onDeviceOrientationChangeEvent)\n          }\n        })\n        .catch((error: any) => {\n          console.error('THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:', error)\n        })\n    } else {\n      window.addEventListener('orientationchange', this.onScreenOrientationChangeEvent)\n      window.addEventListener('deviceorientation', this.onDeviceOrientationChangeEvent)\n    }\n\n    this.enabled = true\n  }\n\n  public disconnect = (): void => {\n    window.removeEventListener('orientationchange', this.onScreenOrientationChangeEvent)\n    window.removeEventListener('deviceorientation', this.onDeviceOrientationChangeEvent)\n\n    this.enabled = false\n  }\n\n  private lastQuaternion = new Quaternion()\n  public update = (): void => {\n    if (this.enabled === false) return\n\n    const device = this.deviceOrientation\n\n    if (device) {\n      const alpha = device.alpha ? MathUtils.degToRad(device.alpha) + this.alphaOffset : 0 // Z\n      const beta = device.beta ? MathUtils.degToRad(device.beta) : 0 // X'\n      const gamma = device.gamma ? MathUtils.degToRad(device.gamma) : 0 // Y''\n      const orient = this.screenOrientation ? MathUtils.degToRad(this.screenOrientation as number) : 0 // O\n\n      this.setObjectQuaternion(this.object.quaternion, alpha, beta, gamma, orient)\n\n      if (8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS) {\n        this.lastQuaternion.copy(this.object.quaternion)\n        // @ts-ignore\n        this.dispatchEvent(this.changeEvent)\n      }\n    }\n  }\n\n  public dispose = (): void => this.disconnect()\n}\n\nexport { DeviceOrientationControls }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}