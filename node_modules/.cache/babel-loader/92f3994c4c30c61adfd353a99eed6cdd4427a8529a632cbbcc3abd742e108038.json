{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Vector3, Matrix3, LineSegments, BufferGeometry, Float32BufferAttribute, LineBasicMaterial } from \"three\";\nvar _v1 = new Vector3();\nvar _v2 = new Vector3();\nvar _normalMatrix = new Matrix3();\nvar VertexNormalsHelper = /*#__PURE__*/function (_LineSegments) {\n  _inherits(VertexNormalsHelper, _LineSegments);\n  var _super = _createSuper(VertexNormalsHelper);\n  function VertexNormalsHelper(object) {\n    var _this;\n    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16711680;\n    _classCallCheck(this, VertexNormalsHelper);\n    var geometry = new BufferGeometry();\n    var nNormals = object.geometry.attributes.normal.count;\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.setAttribute(\"position\", positions);\n    _this = _super.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      toneMapped: false\n    }));\n    _this.object = object;\n    _this.size = size;\n    _this.type = \"VertexNormalsHelper\";\n    _this.matrixAutoUpdate = false;\n    _this.update();\n    return _this;\n  }\n  _createClass(VertexNormalsHelper, [{\n    key: \"update\",\n    value: function update() {\n      this.object.updateMatrixWorld(true);\n      _normalMatrix.getNormalMatrix(this.object.matrixWorld);\n      var matrixWorld = this.object.matrixWorld;\n      var position = this.geometry.attributes.position;\n      var objGeometry = this.object.geometry;\n      if (objGeometry) {\n        var objPos = objGeometry.attributes.position;\n        var objNorm = objGeometry.attributes.normal;\n        var idx = 0;\n        for (var j = 0, jl = objPos.count; j < jl; j++) {\n          _v1.fromBufferAttribute(objPos, j).applyMatrix4(matrixWorld);\n          _v2.fromBufferAttribute(objNorm, j);\n          _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1);\n          position.setXYZ(idx, _v1.x, _v1.y, _v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, _v2.x, _v2.y, _v2.z);\n          idx = idx + 1;\n        }\n      }\n      position.needsUpdate = true;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.geometry.dispose();\n      this.material.dispose();\n    }\n  }]);\n  return VertexNormalsHelper;\n}(LineSegments);\nexport { VertexNormalsHelper };","map":{"version":3,"names":["_v1","Vector3","_v2","_normalMatrix","Matrix3","VertexNormalsHelper","_LineSegments","_inherits","_super","_createSuper","object","_this","size","arguments","length","undefined","color","_classCallCheck","geometry","BufferGeometry","nNormals","attributes","normal","count","positions","Float32BufferAttribute","setAttribute","call","LineBasicMaterial","toneMapped","type","matrixAutoUpdate","update","_createClass","key","value","updateMatrixWorld","getNormalMatrix","matrixWorld","position","objGeometry","objPos","objNorm","idx","j","jl","fromBufferAttribute","applyMatrix4","applyMatrix3","normalize","multiplyScalar","add","setXYZ","x","y","z","needsUpdate","dispose","material","LineSegments"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\helpers\\VertexNormalsHelper.js"],"sourcesContent":["import { BufferGeometry, Float32BufferAttribute, LineSegments, LineBasicMaterial, Matrix3, Vector3 } from 'three'\n\nconst _v1 = new Vector3()\nconst _v2 = new Vector3()\nconst _normalMatrix = new Matrix3()\n\nclass VertexNormalsHelper extends LineSegments {\n  constructor(object, size = 1, color = 0xff0000) {\n    const geometry = new BufferGeometry()\n\n    const nNormals = object.geometry.attributes.normal.count\n    const positions = new Float32BufferAttribute(nNormals * 2 * 3, 3)\n\n    geometry.setAttribute('position', positions)\n\n    super(geometry, new LineBasicMaterial({ color, toneMapped: false }))\n\n    this.object = object\n    this.size = size\n    this.type = 'VertexNormalsHelper'\n\n    //\n\n    this.matrixAutoUpdate = false\n\n    this.update()\n  }\n\n  update() {\n    this.object.updateMatrixWorld(true)\n\n    _normalMatrix.getNormalMatrix(this.object.matrixWorld)\n\n    const matrixWorld = this.object.matrixWorld\n\n    const position = this.geometry.attributes.position\n\n    //\n\n    const objGeometry = this.object.geometry\n\n    if (objGeometry) {\n      const objPos = objGeometry.attributes.position\n\n      const objNorm = objGeometry.attributes.normal\n\n      let idx = 0\n\n      // for simplicity, ignore index and drawcalls, and render every normal\n\n      for (let j = 0, jl = objPos.count; j < jl; j++) {\n        _v1.fromBufferAttribute(objPos, j).applyMatrix4(matrixWorld)\n\n        _v2.fromBufferAttribute(objNorm, j)\n\n        _v2.applyMatrix3(_normalMatrix).normalize().multiplyScalar(this.size).add(_v1)\n\n        position.setXYZ(idx, _v1.x, _v1.y, _v1.z)\n\n        idx = idx + 1\n\n        position.setXYZ(idx, _v2.x, _v2.y, _v2.z)\n\n        idx = idx + 1\n      }\n    }\n\n    position.needsUpdate = true\n  }\n\n  dispose() {\n    this.geometry.dispose()\n    this.material.dispose()\n  }\n}\n\nexport { VertexNormalsHelper }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}