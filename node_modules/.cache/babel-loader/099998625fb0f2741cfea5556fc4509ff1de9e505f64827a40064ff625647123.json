{"ast":null,"code":"import _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nvar AsciiEffect = /*#__PURE__*/_createClass(function AsciiEffect(renderer) {\n  var charSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \" .:-=+*#%@\";\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  _classCallCheck(this, AsciiEffect);\n  var fResolution = options[\"resolution\"] || 0.15;\n  var iScale = options[\"scale\"] || 1;\n  var bColor = options[\"color\"] || false;\n  var bAlpha = options[\"alpha\"] || false;\n  var bBlock = options[\"block\"] || false;\n  var bInvert = options[\"invert\"] || false;\n  var strResolution = options[\"strResolution\"] || \"low\";\n  var width, height;\n  var domElement = document.createElement(\"div\");\n  domElement.style.cursor = \"default\";\n  var oAscii = document.createElement(\"table\");\n  domElement.appendChild(oAscii);\n  var iWidth, iHeight;\n  var oImg;\n  this.setSize = function (w, h) {\n    width = w;\n    height = h;\n    renderer.setSize(w, h);\n    initAsciiSize();\n  };\n  this.render = function (scene, camera) {\n    renderer.render(scene, camera);\n    asciifyImage(oAscii);\n  };\n  this.domElement = domElement;\n  function initAsciiSize() {\n    iWidth = Math.floor(width * fResolution);\n    iHeight = Math.floor(height * fResolution);\n    oCanvas.width = iWidth;\n    oCanvas.height = iHeight;\n    oImg = renderer.domElement;\n    if (oImg.style.backgroundColor) {\n      oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n      oAscii.rows[0].cells[0].style.color = oImg.style.color;\n    }\n    oAscii.cellSpacing = 0;\n    oAscii.cellPadding = 0;\n    var oStyle = oAscii.style;\n    oStyle.whiteSpace = \"pre\";\n    oStyle.margin = \"0px\";\n    oStyle.padding = \"0px\";\n    oStyle.letterSpacing = fLetterSpacing + \"px\";\n    oStyle.fontFamily = strFont;\n    oStyle.fontSize = fFontSize + \"px\";\n    oStyle.lineHeight = fLineHeight + \"px\";\n    oStyle.textAlign = \"left\";\n    oStyle.textDecoration = \"none\";\n  }\n  var aDefaultCharList = \" .,:;i1tfLCG08@\".split(\"\");\n  var aDefaultColorCharList = \" CGO08@\".split(\"\");\n  var strFont = \"courier new, monospace\";\n  var oCanvasImg = renderer.domElement;\n  var oCanvas = document.createElement(\"canvas\");\n  if (!oCanvas.getContext) {\n    return;\n  }\n  var oCtx = oCanvas.getContext(\"2d\");\n  if (!oCtx.getImageData) {\n    return;\n  }\n  var aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n  if (charSet) aCharList = charSet;\n  var fFontSize = 2 / fResolution * iScale;\n  var fLineHeight = 2 / fResolution * iScale;\n  var fLetterSpacing = 0;\n  if (strResolution == \"low\") {\n    switch (iScale) {\n      case 1:\n        fLetterSpacing = -1;\n        break;\n      case 2:\n      case 3:\n        fLetterSpacing = -2.1;\n        break;\n      case 4:\n        fLetterSpacing = -3.1;\n        break;\n      case 5:\n        fLetterSpacing = -4.15;\n        break;\n    }\n  }\n  if (strResolution == \"medium\") {\n    switch (iScale) {\n      case 1:\n        fLetterSpacing = 0;\n        break;\n      case 2:\n        fLetterSpacing = -1;\n        break;\n      case 3:\n        fLetterSpacing = -1.04;\n        break;\n      case 4:\n      case 5:\n        fLetterSpacing = -2.1;\n        break;\n    }\n  }\n  if (strResolution == \"high\") {\n    switch (iScale) {\n      case 1:\n      case 2:\n        fLetterSpacing = 0;\n        break;\n      case 3:\n      case 4:\n      case 5:\n        fLetterSpacing = -1;\n        break;\n    }\n  }\n  function asciifyImage(oAscii2) {\n    oCtx.clearRect(0, 0, iWidth, iHeight);\n    oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n    var oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data;\n    var strChars = \"\";\n    for (var y = 0; y < iHeight; y += 2) {\n      for (var x = 0; x < iWidth; x++) {\n        var iOffset = (y * iWidth + x) * 4;\n        var iRed = oImgData[iOffset];\n        var iGreen = oImgData[iOffset + 1];\n        var iBlue = oImgData[iOffset + 2];\n        var iAlpha = oImgData[iOffset + 3];\n        var iCharIdx = void 0;\n        var fBrightness = void 0;\n        fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255;\n        if (iAlpha == 0) {\n          fBrightness = 1;\n        }\n        iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n        if (bInvert) {\n          iCharIdx = aCharList.length - iCharIdx - 1;\n        }\n        var strThisChar = aCharList[iCharIdx];\n        if (strThisChar === void 0 || strThisChar == \" \") strThisChar = \"&nbsp;\";\n        if (bColor) {\n          strChars += \"<span style='color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" + (bBlock ? \"background-color:rgb(\" + iRed + \",\" + iGreen + \",\" + iBlue + \");\" : \"\") + (bAlpha ? \"opacity:\" + iAlpha / 255 + \";\" : \"\") + \"'>\" + strThisChar + \"</span>\";\n        } else {\n          strChars += strThisChar;\n        }\n      }\n      strChars += \"<br/>\";\n    }\n    oAscii2.innerHTML = \"<tr><td style=\\\"display:block;width:\".concat(width, \"px;height:\").concat(height, \"px;overflow:hidden\\\">\").concat(strChars, \"</td></tr>\");\n  }\n});\nexport { AsciiEffect };","map":{"version":3,"names":["AsciiEffect","_createClass","renderer","charSet","arguments","length","undefined","options","_classCallCheck","fResolution","iScale","bColor","bAlpha","bBlock","bInvert","strResolution","width","height","domElement","document","createElement","style","cursor","oAscii","appendChild","iWidth","iHeight","oImg","setSize","w","h","initAsciiSize","render","scene","camera","asciifyImage","Math","floor","oCanvas","backgroundColor","rows","cells","color","cellSpacing","cellPadding","oStyle","whiteSpace","margin","padding","letterSpacing","fLetterSpacing","fontFamily","strFont","fontSize","fFontSize","lineHeight","fLineHeight","textAlign","textDecoration","aDefaultCharList","split","aDefaultColorCharList","oCanvasImg","getContext","oCtx","getImageData","aCharList","oAscii2","clearRect","drawImage","oImgData","data","strChars","y","x","iOffset","iRed","iGreen","iBlue","iAlpha","iCharIdx","fBrightness","strThisChar","innerHTML","concat"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\effects\\AsciiEffect.js"],"sourcesContent":["/**\n * Ascii generation is based on https://github.com/hassadee/jsascii/blob/master/jsascii.js\n *\n * 16 April 2012 - @blurspline\n */\n\nclass AsciiEffect {\n  constructor(renderer, charSet = ' .:-=+*#%@', options = {}) {\n    // ' .,:;=|iI+hHOE#`$';\n    // darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n    // ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n    // Some ASCII settings\n\n    const fResolution = options['resolution'] || 0.15 // Higher for more details\n    const iScale = options['scale'] || 1\n    const bColor = options['color'] || false // nice but slows down rendering!\n    const bAlpha = options['alpha'] || false // Transparency\n    const bBlock = options['block'] || false // blocked characters. like good O dos\n    const bInvert = options['invert'] || false // black is white, white is black\n    const strResolution = options['strResolution'] || 'low'\n\n    let width, height\n\n    const domElement = document.createElement('div')\n    domElement.style.cursor = 'default'\n\n    const oAscii = document.createElement('table')\n    domElement.appendChild(oAscii)\n\n    let iWidth, iHeight\n    let oImg\n\n    this.setSize = function (w, h) {\n      width = w\n      height = h\n\n      renderer.setSize(w, h)\n\n      initAsciiSize()\n    }\n\n    this.render = function (scene, camera) {\n      renderer.render(scene, camera)\n      asciifyImage(oAscii)\n    }\n\n    this.domElement = domElement\n\n    // Throw in ascii library from https://github.com/hassadee/jsascii/blob/master/jsascii.js (MIT License)\n\n    function initAsciiSize() {\n      iWidth = Math.floor(width * fResolution)\n      iHeight = Math.floor(height * fResolution)\n\n      oCanvas.width = iWidth\n      oCanvas.height = iHeight\n      // oCanvas.style.display = \"none\";\n      // oCanvas.style.width = iWidth;\n      // oCanvas.style.height = iHeight;\n\n      oImg = renderer.domElement\n\n      if (oImg.style.backgroundColor) {\n        oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor\n        oAscii.rows[0].cells[0].style.color = oImg.style.color\n      }\n\n      oAscii.cellSpacing = 0\n      oAscii.cellPadding = 0\n\n      const oStyle = oAscii.style\n      oStyle.whiteSpace = 'pre'\n      oStyle.margin = '0px'\n      oStyle.padding = '0px'\n      oStyle.letterSpacing = fLetterSpacing + 'px'\n      oStyle.fontFamily = strFont\n      oStyle.fontSize = fFontSize + 'px'\n      oStyle.lineHeight = fLineHeight + 'px'\n      oStyle.textAlign = 'left'\n      oStyle.textDecoration = 'none'\n    }\n\n    const aDefaultCharList = ' .,:;i1tfLCG08@'.split('')\n    const aDefaultColorCharList = ' CGO08@'.split('')\n    const strFont = 'courier new, monospace'\n\n    const oCanvasImg = renderer.domElement\n\n    const oCanvas = document.createElement('canvas')\n    if (!oCanvas.getContext) {\n      return\n    }\n\n    const oCtx = oCanvas.getContext('2d')\n    if (!oCtx.getImageData) {\n      return\n    }\n\n    let aCharList = bColor ? aDefaultColorCharList : aDefaultCharList\n\n    if (charSet) aCharList = charSet\n\n    // Setup dom\n\n    const fFontSize = (2 / fResolution) * iScale\n    const fLineHeight = (2 / fResolution) * iScale\n\n    // adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n    let fLetterSpacing = 0\n\n    if (strResolution == 'low') {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = -1\n          break\n        case 2:\n        case 3:\n          fLetterSpacing = -2.1\n          break\n        case 4:\n          fLetterSpacing = -3.1\n          break\n        case 5:\n          fLetterSpacing = -4.15\n          break\n      }\n    }\n\n    if (strResolution == 'medium') {\n      switch (iScale) {\n        case 1:\n          fLetterSpacing = 0\n          break\n        case 2:\n          fLetterSpacing = -1\n          break\n        case 3:\n          fLetterSpacing = -1.04\n          break\n        case 4:\n        case 5:\n          fLetterSpacing = -2.1\n          break\n      }\n    }\n\n    if (strResolution == 'high') {\n      switch (iScale) {\n        case 1:\n        case 2:\n          fLetterSpacing = 0\n          break\n        case 3:\n        case 4:\n        case 5:\n          fLetterSpacing = -1\n          break\n      }\n    }\n\n    // can't get a span or div to flow like an img element, but a table works?\n\n    // convert img element to ascii\n\n    function asciifyImage(oAscii) {\n      oCtx.clearRect(0, 0, iWidth, iHeight)\n      oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight)\n      const oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data\n\n      // Coloring loop starts now\n      let strChars = ''\n\n      // console.time('rendering');\n\n      for (let y = 0; y < iHeight; y += 2) {\n        for (let x = 0; x < iWidth; x++) {\n          const iOffset = (y * iWidth + x) * 4\n\n          const iRed = oImgData[iOffset]\n          const iGreen = oImgData[iOffset + 1]\n          const iBlue = oImgData[iOffset + 2]\n          const iAlpha = oImgData[iOffset + 3]\n          let iCharIdx\n\n          let fBrightness\n\n          fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255\n          // fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n          if (iAlpha == 0) {\n            // should calculate alpha instead, but quick hack :)\n            //fBrightness *= (iAlpha / 255);\n            fBrightness = 1\n          }\n\n          iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1))\n\n          if (bInvert) {\n            iCharIdx = aCharList.length - iCharIdx - 1\n          }\n\n          // good for debugging\n          //fBrightness = Math.floor(fBrightness * 10);\n          //strThisChar = fBrightness;\n\n          let strThisChar = aCharList[iCharIdx]\n\n          if (strThisChar === undefined || strThisChar == ' ') strThisChar = '&nbsp;'\n\n          if (bColor) {\n            strChars +=\n              \"<span style='\" +\n              'color:rgb(' +\n              iRed +\n              ',' +\n              iGreen +\n              ',' +\n              iBlue +\n              ');' +\n              (bBlock ? 'background-color:rgb(' + iRed + ',' + iGreen + ',' + iBlue + ');' : '') +\n              (bAlpha ? 'opacity:' + iAlpha / 255 + ';' : '') +\n              \"'>\" +\n              strThisChar +\n              '</span>'\n          } else {\n            strChars += strThisChar\n          }\n        }\n\n        strChars += '<br/>'\n      }\n\n      oAscii.innerHTML = `<tr><td style=\"display:block;width:${width}px;height:${height}px;overflow:hidden\">${strChars}</td></tr>`\n\n      // console.timeEnd('rendering');\n\n      // return oAscii;\n    }\n  }\n}\n\nexport { AsciiEffect }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}