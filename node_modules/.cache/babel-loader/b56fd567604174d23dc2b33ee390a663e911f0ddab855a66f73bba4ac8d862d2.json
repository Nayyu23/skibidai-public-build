{"ast":null,"code":"import _slicedToArray from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"mixBlur\", \"mixStrength\", \"resolution\", \"blur\", \"minDepthThreshold\", \"maxDepthThreshold\", \"depthScale\", \"depthToBlurRatioBias\", \"mirror\", \"distortion\", \"mixContrast\", \"distortionMap\", \"reflectorOffset\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, LinearFilter, HalfFloatType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial as MeshReflectorMaterial$1 } from '../materials/MeshReflectorMaterial.js';\nvar MeshReflectorMaterial = /* @__PURE__ */React.forwardRef(function (_ref, ref) {\n  var _ref$mixBlur = _ref.mixBlur,\n    mixBlur = _ref$mixBlur === void 0 ? 0 : _ref$mixBlur,\n    _ref$mixStrength = _ref.mixStrength,\n    mixStrength = _ref$mixStrength === void 0 ? 1 : _ref$mixStrength,\n    _ref$resolution = _ref.resolution,\n    resolution = _ref$resolution === void 0 ? 256 : _ref$resolution,\n    _ref$blur = _ref.blur,\n    blur = _ref$blur === void 0 ? [0, 0] : _ref$blur,\n    _ref$minDepthThreshol = _ref.minDepthThreshold,\n    minDepthThreshold = _ref$minDepthThreshol === void 0 ? 0.9 : _ref$minDepthThreshol,\n    _ref$maxDepthThreshol = _ref.maxDepthThreshold,\n    maxDepthThreshold = _ref$maxDepthThreshol === void 0 ? 1 : _ref$maxDepthThreshol,\n    _ref$depthScale = _ref.depthScale,\n    depthScale = _ref$depthScale === void 0 ? 0 : _ref$depthScale,\n    _ref$depthToBlurRatio = _ref.depthToBlurRatioBias,\n    depthToBlurRatioBias = _ref$depthToBlurRatio === void 0 ? 0.25 : _ref$depthToBlurRatio,\n    _ref$mirror = _ref.mirror,\n    mirror = _ref$mirror === void 0 ? 0 : _ref$mirror,\n    _ref$distortion = _ref.distortion,\n    distortion = _ref$distortion === void 0 ? 1 : _ref$distortion,\n    _ref$mixContrast = _ref.mixContrast,\n    mixContrast = _ref$mixContrast === void 0 ? 1 : _ref$mixContrast,\n    distortionMap = _ref.distortionMap,\n    _ref$reflectorOffset = _ref.reflectorOffset,\n    reflectorOffset = _ref$reflectorOffset === void 0 ? 0 : _ref$reflectorOffset,\n    props = _objectWithoutProperties(_ref, _excluded);\n  extend({\n    MeshReflectorMaterialImpl: MeshReflectorMaterial$1\n  });\n  var gl = useThree(function (_ref2) {\n    var gl = _ref2.gl;\n    return gl;\n  });\n  var camera = useThree(function (_ref3) {\n    var camera = _ref3.camera;\n    return camera;\n  });\n  var scene = useThree(function (_ref4) {\n    var scene = _ref4.scene;\n    return scene;\n  });\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  var hasBlur = blur[0] + blur[1] > 0;\n  var materialRef = React.useRef(null);\n  React.useImperativeHandle(ref, function () {\n    return materialRef.current;\n  }, []);\n  var _React$useState = React.useState(function () {\n      return new Plane();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    reflectorPlane = _React$useState2[0];\n  var _React$useState3 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState4 = _slicedToArray(_React$useState3, 1),\n    normal = _React$useState4[0];\n  var _React$useState5 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    reflectorWorldPosition = _React$useState6[0];\n  var _React$useState7 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    cameraWorldPosition = _React$useState8[0];\n  var _React$useState9 = React.useState(function () {\n      return new Matrix4();\n    }),\n    _React$useState10 = _slicedToArray(_React$useState9, 1),\n    rotationMatrix = _React$useState10[0];\n  var _React$useState11 = React.useState(function () {\n      return new Vector3(0, 0, -1);\n    }),\n    _React$useState12 = _slicedToArray(_React$useState11, 1),\n    lookAtPosition = _React$useState12[0];\n  var _React$useState13 = React.useState(function () {\n      return new Vector4();\n    }),\n    _React$useState14 = _slicedToArray(_React$useState13, 1),\n    clipPlane = _React$useState14[0];\n  var _React$useState15 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState16 = _slicedToArray(_React$useState15, 1),\n    view = _React$useState16[0];\n  var _React$useState17 = React.useState(function () {\n      return new Vector3();\n    }),\n    _React$useState18 = _slicedToArray(_React$useState17, 1),\n    target = _React$useState18[0];\n  var _React$useState19 = React.useState(function () {\n      return new Vector4();\n    }),\n    _React$useState20 = _slicedToArray(_React$useState19, 1),\n    q = _React$useState20[0];\n  var _React$useState21 = React.useState(function () {\n      return new Matrix4();\n    }),\n    _React$useState22 = _slicedToArray(_React$useState21, 1),\n    textureMatrix = _React$useState22[0];\n  var _React$useState23 = React.useState(function () {\n      return new PerspectiveCamera();\n    }),\n    _React$useState24 = _slicedToArray(_React$useState23, 1),\n    virtualCamera = _React$useState24[0];\n  var beforeRender = React.useCallback(function () {\n    var _materialRef$current;\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    var parent = materialRef.current.parent || ((_materialRef$current = materialRef.current) == null ? void 0 : _materialRef$current.__r3f.parent);\n    if (!parent) return;\n    reflectorWorldPosition.setFromMatrixPosition(parent.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(parent.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    reflectorWorldPosition.addScaledVector(normal, reflectorOffset);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition);\n    // Avoid rendering when reflector is facing away\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n    // Update the texture matrix\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(parent.matrixWorld);\n    // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    var projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n    // Calculate the scaled plane vector\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q));\n    // Replacing the third row of the projection matrix\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, [camera, reflectorOffset]);\n  var _React$useMemo = React.useMemo(function () {\n      var parameters = {\n        minFilter: LinearFilter,\n        magFilter: LinearFilter,\n        type: HalfFloatType\n      };\n      var fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n      fbo1.depthBuffer = true;\n      fbo1.depthTexture = new DepthTexture(resolution, resolution);\n      fbo1.depthTexture.format = DepthFormat;\n      fbo1.depthTexture.type = UnsignedShortType;\n      var fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n      var blurpass = new BlurPass({\n        gl: gl,\n        resolution: resolution,\n        width: blur[0],\n        height: blur[1],\n        minDepthThreshold: minDepthThreshold,\n        maxDepthThreshold: maxDepthThreshold,\n        depthScale: depthScale,\n        depthToBlurRatioBias: depthToBlurRatioBias\n      });\n      var reflectorProps = {\n        mirror: mirror,\n        textureMatrix: textureMatrix,\n        mixBlur: mixBlur,\n        tDiffuse: fbo1.texture,\n        tDepth: fbo1.depthTexture,\n        tDiffuseBlur: fbo2.texture,\n        hasBlur: hasBlur,\n        mixStrength: mixStrength,\n        minDepthThreshold: minDepthThreshold,\n        maxDepthThreshold: maxDepthThreshold,\n        depthScale: depthScale,\n        depthToBlurRatioBias: depthToBlurRatioBias,\n        distortion: distortion,\n        distortionMap: distortionMap,\n        mixContrast: mixContrast,\n        'defines-USE_BLUR': hasBlur ? '' : undefined,\n        'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n        'defines-USE_DISTORTION': distortionMap ? '' : undefined\n      };\n      return [fbo1, fbo2, blurpass, reflectorProps];\n    }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, distortion, distortionMap, mixContrast]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 4),\n    fbo1 = _React$useMemo2[0],\n    fbo2 = _React$useMemo2[1],\n    blurpass = _React$useMemo2[2],\n    reflectorProps = _React$useMemo2[3];\n  useFrame(function () {\n    var _materialRef$current2;\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    var parent = materialRef.current.parent || ((_materialRef$current2 = materialRef.current) == null ? void 0 : _materialRef$current2.__r3f.parent);\n    if (!parent) return;\n    parent.visible = false;\n    var currentXrEnabled = gl.xr.enabled;\n    var currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    parent.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"meshReflectorMaterialImpl\", _extends({\n    attach: \"material\"\n    // Defines can't be updated dynamically, so we need to recreate the material\n    ,\n\n    key: 'key' + reflectorProps['defines-USE_BLUR'] + reflectorProps['defines-USE_DEPTH'] + reflectorProps['defines-USE_DISTORTION'],\n    ref: materialRef\n  }, reflectorProps, props));\n});\nexport { MeshReflectorMaterial };","map":{"version":3,"names":["_extends","React","Plane","Vector3","Matrix4","Vector4","PerspectiveCamera","WebGLRenderTarget","DepthTexture","DepthFormat","UnsignedShortType","LinearFilter","HalfFloatType","extend","useThree","useFrame","BlurPass","MeshReflectorMaterial","MeshReflectorMaterial$1","forwardRef","_ref","ref","_ref$mixBlur","mixBlur","_ref$mixStrength","mixStrength","_ref$resolution","resolution","_ref$blur","blur","_ref$minDepthThreshol","minDepthThreshold","_ref$maxDepthThreshol","maxDepthThreshold","_ref$depthScale","depthScale","_ref$depthToBlurRatio","depthToBlurRatioBias","_ref$mirror","mirror","_ref$distortion","distortion","_ref$mixContrast","mixContrast","distortionMap","_ref$reflectorOffset","reflectorOffset","props","_objectWithoutProperties","_excluded","MeshReflectorMaterialImpl","gl","_ref2","camera","_ref3","scene","_ref4","Array","isArray","hasBlur","materialRef","useRef","useImperativeHandle","current","_React$useState","useState","_React$useState2","_slicedToArray","reflectorPlane","_React$useState3","_React$useState4","normal","_React$useState5","_React$useState6","reflectorWorldPosition","_React$useState7","_React$useState8","cameraWorldPosition","_React$useState9","_React$useState10","rotationMatrix","_React$useState11","_React$useState12","lookAtPosition","_React$useState13","_React$useState14","clipPlane","_React$useState15","_React$useState16","view","_React$useState17","_React$useState18","target","_React$useState19","_React$useState20","q","_React$useState21","_React$useState22","textureMatrix","_React$useState23","_React$useState24","virtualCamera","beforeRender","useCallback","_materialRef$current","parent","__r3f","setFromMatrixPosition","matrixWorld","extractRotation","set","applyMatrix4","addScaledVector","subVectors","dot","reflect","negate","add","position","copy","up","lookAt","far","updateMatrixWorld","projectionMatrix","multiply","matrixWorldInverse","setFromNormalAndCoplanarPoint","x","y","z","constant","Math","sign","elements","w","multiplyScalar","_React$useMemo","useMemo","parameters","minFilter","magFilter","type","fbo1","depthBuffer","depthTexture","format","fbo2","blurpass","width","height","reflectorProps","tDiffuse","texture","tDepth","tDiffuseBlur","undefined","_React$useMemo2","_materialRef$current2","visible","currentXrEnabled","xr","enabled","currentShadowAutoUpdate","shadowMap","autoUpdate","setRenderTarget","state","buffers","depth","setMask","autoClear","clear","render","createElement","attach","key"],"sources":["C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@react-three/drei/core/MeshReflectorMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, LinearFilter, HalfFloatType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial as MeshReflectorMaterial$1 } from '../materials/MeshReflectorMaterial.js';\n\nconst MeshReflectorMaterial = /* @__PURE__ */React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 1,\n  resolution = 256,\n  blur = [0, 0],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  reflectorOffset = 0,\n  ...props\n}, ref) => {\n  extend({\n    MeshReflectorMaterialImpl: MeshReflectorMaterial$1\n  });\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const materialRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => materialRef.current, []);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    var _materialRef$current;\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    const parent = materialRef.current.parent || ((_materialRef$current = materialRef.current) == null ? void 0 : _materialRef$current.__r3f.parent);\n    if (!parent) return;\n    reflectorWorldPosition.setFromMatrixPosition(parent.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(parent.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    reflectorWorldPosition.addScaledVector(normal, reflectorOffset);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition);\n    // Avoid rendering when reflector is facing away\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n    // Update the texture matrix\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(parent.matrixWorld);\n    // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n    // Calculate the scaled plane vector\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q));\n    // Replacing the third row of the projection matrix\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, [camera, reflectorOffset]);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      type: HalfFloatType\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    var _materialRef$current2;\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    const parent = materialRef.current.parent || ((_materialRef$current2 = materialRef.current) == null ? void 0 : _materialRef$current2.__r3f.parent);\n    if (!parent) return;\n    parent.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    parent.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"meshReflectorMaterialImpl\", _extends({\n    attach: \"material\"\n    // Defines can't be updated dynamically, so we need to recreate the material\n    ,\n    key: 'key' + reflectorProps['defines-USE_BLUR'] + reflectorProps['defines-USE_DEPTH'] + reflectorProps['defines-USE_DISTORTION'],\n    ref: materialRef\n  }, reflectorProps, props));\n});\n\nexport { MeshReflectorMaterial };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}