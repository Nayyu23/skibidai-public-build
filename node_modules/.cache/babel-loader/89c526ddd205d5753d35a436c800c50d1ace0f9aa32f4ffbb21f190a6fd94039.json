{"ast":null,"code":"import _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Color } from \"three\";\nimport { Pass } from \"./Pass.js\";\nvar RenderPass = /*#__PURE__*/function (_Pass) {\n  _inherits(RenderPass, _Pass);\n  var _super = _createSuper(RenderPass);\n  function RenderPass(scene, camera, overrideMaterial, clearColor) {\n    var _this;\n    var clearAlpha = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    _classCallCheck(this, RenderPass);\n    _this = _super.call(this);\n    __publicField(_assertThisInitialized(_this), \"scene\");\n    __publicField(_assertThisInitialized(_this), \"camera\");\n    __publicField(_assertThisInitialized(_this), \"overrideMaterial\");\n    __publicField(_assertThisInitialized(_this), \"clearColor\");\n    __publicField(_assertThisInitialized(_this), \"clearAlpha\");\n    __publicField(_assertThisInitialized(_this), \"clearDepth\", false);\n    __publicField(_assertThisInitialized(_this), \"_oldClearColor\", new Color());\n    _this.scene = scene;\n    _this.camera = camera;\n    _this.overrideMaterial = overrideMaterial;\n    _this.clearColor = clearColor;\n    _this.clearAlpha = clearAlpha;\n    _this.clear = true;\n    _this.needsSwap = false;\n    return _this;\n  }\n  _createClass(RenderPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      var oldAutoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      var oldClearAlpha;\n      var oldOverrideMaterial = null;\n      if (this.overrideMaterial !== void 0) {\n        oldOverrideMaterial = this.scene.overrideMaterial;\n        this.scene.overrideMaterial = this.overrideMaterial;\n      }\n      if (this.clearColor) {\n        renderer.getClearColor(this._oldClearColor);\n        oldClearAlpha = renderer.getClearAlpha();\n        renderer.setClearColor(this.clearColor, this.clearAlpha);\n      }\n      if (this.clearDepth) {\n        renderer.clearDepth();\n      }\n      renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n      if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      renderer.render(this.scene, this.camera);\n      if (this.clearColor) {\n        renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n      }\n      if (this.overrideMaterial !== void 0) {\n        this.scene.overrideMaterial = oldOverrideMaterial;\n      }\n      renderer.autoClear = oldAutoClear;\n    }\n  }]);\n  return RenderPass;\n}(Pass);\nexport { RenderPass };","map":{"version":3,"names":["RenderPass","_Pass","_inherits","_super","_createSuper","scene","camera","overrideMaterial","clearColor","_this","clearAlpha","arguments","length","undefined","_classCallCheck","call","__publicField","_assertThisInitialized","Color","clear","needsSwap","_createClass","key","value","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","oldClearAlpha","oldOverrideMaterial","getClearColor","_oldClearColor","getClearAlpha","setClearColor","clearDepth","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil","Pass"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\postprocessing\\RenderPass.ts"],"sourcesContent":["import { Camera, Color, Material, Scene, WebGLRenderTarget, WebGLRenderer } from 'three'\nimport { Pass } from './Pass'\n\nclass RenderPass extends Pass {\n  public scene: Scene\n  public camera: Camera\n  public overrideMaterial: Material | undefined\n  public clearColor: Color | undefined\n  public clearAlpha: number\n  public clearDepth = false\n  private _oldClearColor = new Color()\n\n  constructor(scene: Scene, camera: Camera, overrideMaterial?: Material, clearColor?: Color, clearAlpha = 0) {\n    super()\n\n    this.scene = scene\n    this.camera = camera\n\n    this.overrideMaterial = overrideMaterial\n\n    this.clearColor = clearColor\n    this.clearAlpha = clearAlpha\n\n    this.clear = true\n    this.needsSwap = false\n  }\n\n  public render(\n    renderer: WebGLRenderer,\n    writeBuffer: WebGLRenderTarget,\n    readBuffer: WebGLRenderTarget /*, deltaTime, maskActive */,\n  ): void {\n    let oldAutoClear = renderer.autoClear\n    renderer.autoClear = false\n\n    let oldClearAlpha\n    let oldOverrideMaterial: Material | null = null\n\n    if (this.overrideMaterial !== undefined) {\n      oldOverrideMaterial = this.scene.overrideMaterial\n\n      this.scene.overrideMaterial = this.overrideMaterial\n    }\n\n    if (this.clearColor) {\n      renderer.getClearColor(this._oldClearColor)\n      oldClearAlpha = renderer.getClearAlpha()\n\n      renderer.setClearColor(this.clearColor, this.clearAlpha)\n    }\n\n    if (this.clearDepth) {\n      renderer.clearDepth()\n    }\n\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer)\n\n    // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n    if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil)\n    renderer.render(this.scene, this.camera)\n\n    if (this.clearColor) {\n      renderer.setClearColor(this._oldClearColor, oldClearAlpha)\n    }\n\n    if (this.overrideMaterial !== undefined) {\n      this.scene.overrideMaterial = oldOverrideMaterial\n    }\n\n    renderer.autoClear = oldAutoClear\n  }\n}\n\nexport { RenderPass }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;IAGMA,UAAA,0BAAAC,KAAA;EAAAC,SAAA,CAAAF,UAAA,EAAAC,KAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,UAAA;EASJ,SAAAA,WAAYK,KAAA,EAAcC,MAAA,EAAgBC,gBAAA,EAA6BC,UAAA,EAAoC;IAAA,IAAAC,KAAA;IAAA,IAAhBC,UAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAa;IAAAG,eAAA,OAAAd,UAAA;IAChGS,KAAA,GAAAN,MAAA,CAAAY,IAAA;IATDC,aAAA,CAAAC,sBAAA,CAAAR,KAAA;IACAO,aAAA,CAAAC,sBAAA,CAAAR,KAAA;IACAO,aAAA,CAAAC,sBAAA,CAAAR,KAAA;IACAO,aAAA,CAAAC,sBAAA,CAAAR,KAAA;IACAO,aAAA,CAAAC,sBAAA,CAAAR,KAAA;IACAO,aAAA,CAAAC,sBAAA,CAAAR,KAAA,iBAAa;IACZO,aAAA,CAAAC,sBAAA,CAAAR,KAAA,qBAAiB,IAAIS,KAAA;IAK3BT,KAAA,CAAKJ,KAAA,GAAQA,KAAA;IACbI,KAAA,CAAKH,MAAA,GAASA,MAAA;IAEdG,KAAA,CAAKF,gBAAA,GAAmBA,gBAAA;IAExBE,KAAA,CAAKD,UAAA,GAAaA,UAAA;IAClBC,KAAA,CAAKC,UAAA,GAAaA,UAAA;IAElBD,KAAA,CAAKU,KAAA,GAAQ;IACbV,KAAA,CAAKW,SAAA,GAAY;IAAA,OAAAX,KAAA;EACnB;EAAAY,YAAA,CAAArB,UAAA;IAAAsB,GAAA;IAAAC,KAAA,EAEO,SAAAC,OACLC,QAAA,EACAC,WAAA,EACAC,UAAA,EACM;MACN,IAAIC,YAAA,GAAeH,QAAA,CAASI,SAAA;MAC5BJ,QAAA,CAASI,SAAA,GAAY;MAEjB,IAAAC,aAAA;MACJ,IAAIC,mBAAA,GAAuC;MAEvC,SAAKxB,gBAAA,KAAqB,QAAW;QACvCwB,mBAAA,GAAsB,KAAK1B,KAAA,CAAME,gBAAA;QAE5B,KAAAF,KAAA,CAAME,gBAAA,GAAmB,KAAKA,gBAAA;MACrC;MAEA,IAAI,KAAKC,UAAA,EAAY;QACViB,QAAA,CAAAO,aAAA,CAAc,KAAKC,cAAc;QAC1CH,aAAA,GAAgBL,QAAA,CAASS,aAAA;QAEzBT,QAAA,CAASU,aAAA,CAAc,KAAK3B,UAAA,EAAY,KAAKE,UAAU;MACzD;MAEA,IAAI,KAAK0B,UAAA,EAAY;QACnBX,QAAA,CAASW,UAAA,CAAW;MACtB;MAEAX,QAAA,CAASY,eAAA,CAAgB,KAAKC,cAAA,GAAiB,OAAOX,UAAU;MAGhE,IAAI,KAAKR,KAAA,EAAOM,QAAA,CAASN,KAAA,CAAMM,QAAA,CAASc,cAAA,EAAgBd,QAAA,CAASe,cAAA,EAAgBf,QAAA,CAASgB,gBAAgB;MAC1GhB,QAAA,CAASD,MAAA,CAAO,KAAKnB,KAAA,EAAO,KAAKC,MAAM;MAEvC,IAAI,KAAKE,UAAA,EAAY;QACViB,QAAA,CAAAU,aAAA,CAAc,KAAKF,cAAA,EAAgBH,aAAa;MAC3D;MAEI,SAAKvB,gBAAA,KAAqB,QAAW;QACvC,KAAKF,KAAA,CAAME,gBAAA,GAAmBwB,mBAAA;MAChC;MAEAN,QAAA,CAASI,SAAA,GAAYD,YAAA;IACvB;EAAA;EAAA,OAAA5B,UAAA;AAAA,EAnEuB0C,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}