{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Nayyu/Desktop/skibidai-public-build/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar ARButton = /*#__PURE__*/function () {\n  function ARButton() {\n    _classCallCheck(this, ARButton);\n  }\n  _createClass(ARButton, null, [{\n    key: \"createButton\",\n    value: function createButton(renderer) {\n      var sessionInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var button = document.createElement(\"button\");\n      function showStartAR() {\n        if (sessionInit.domOverlay === void 0) {\n          var overlay = document.createElement(\"div\");\n          overlay.style.display = \"none\";\n          document.body.appendChild(overlay);\n          var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n          svg.setAttribute(\"width\", \"38px\");\n          svg.setAttribute(\"height\", \"38px\");\n          svg.style.position = \"absolute\";\n          svg.style.right = \"20px\";\n          svg.style.top = \"20px\";\n          svg.addEventListener(\"click\", function () {\n            currentSession == null ? void 0 : currentSession.end();\n          });\n          overlay.appendChild(svg);\n          var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n          path.setAttribute(\"d\", \"M 12,12 L 28,28 M 28,12 12,28\");\n          path.setAttribute(\"stroke\", \"#fff\");\n          path.setAttribute(\"stroke-width\", \"2px\");\n          svg.appendChild(path);\n          if (sessionInit.optionalFeatures === void 0) {\n            sessionInit.optionalFeatures = [];\n          }\n          sessionInit.optionalFeatures.push(\"dom-overlay\");\n          sessionInit.domOverlay = {\n            root: overlay\n          };\n        }\n        var currentSession = null;\n        function onSessionStarted(_x) {\n          return _onSessionStarted.apply(this, arguments);\n        }\n        function _onSessionStarted() {\n          _onSessionStarted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(session) {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  session.addEventListener(\"end\", onSessionEnded);\n                  renderer.xr.setReferenceSpaceType(\"local\");\n                  _context.next = 4;\n                  return renderer.xr.setSession(session);\n                case 4:\n                  button.textContent = \"STOP AR\";\n                  sessionInit.domOverlay.root.style.display = \"\";\n                  currentSession = session;\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          return _onSessionStarted.apply(this, arguments);\n        }\n        function onSessionEnded() {\n          currentSession.removeEventListener(\"end\", onSessionEnded);\n          button.textContent = \"START AR\";\n          sessionInit.domOverlay.root.style.display = \"none\";\n          currentSession = null;\n        }\n        button.style.display = \"\";\n        button.style.cursor = \"pointer\";\n        button.style.left = \"calc(50% - 50px)\";\n        button.style.width = \"100px\";\n        button.textContent = \"START AR\";\n        button.onmouseenter = function () {\n          button.style.opacity = \"1.0\";\n        };\n        button.onmouseleave = function () {\n          button.style.opacity = \"0.5\";\n        };\n        button.onclick = function () {\n          if (currentSession === null) {\n            navigator.xr.requestSession(\"immersive-ar\", sessionInit).then(onSessionStarted);\n          } else {\n            currentSession.end();\n          }\n        };\n      }\n      function disableButton() {\n        button.style.display = \"\";\n        button.style.cursor = \"auto\";\n        button.style.left = \"calc(50% - 75px)\";\n        button.style.width = \"150px\";\n        button.onmouseenter = null;\n        button.onmouseleave = null;\n        button.onclick = null;\n      }\n      function showARNotSupported() {\n        disableButton();\n        button.textContent = \"AR NOT SUPPORTED\";\n      }\n      function stylizeElement(element) {\n        element.style.position = \"absolute\";\n        element.style.bottom = \"20px\";\n        element.style.padding = \"12px 6px\";\n        element.style.border = \"1px solid #fff\";\n        element.style.borderRadius = \"4px\";\n        element.style.background = \"rgba(0,0,0,0.1)\";\n        element.style.color = \"#fff\";\n        element.style.font = \"normal 13px sans-serif\";\n        element.style.textAlign = \"center\";\n        element.style.opacity = \"0.5\";\n        element.style.outline = \"none\";\n        element.style.zIndex = \"999\";\n      }\n      if (\"xr\" in navigator) {\n        button.id = \"ARButton\";\n        button.style.display = \"none\";\n        stylizeElement(button);\n        navigator.xr.isSessionSupported(\"immersive-ar\").then(function (supported) {\n          supported ? showStartAR() : showARNotSupported();\n        }).catch(showARNotSupported);\n        return button;\n      } else {\n        var message = document.createElement(\"a\");\n        if (window.isSecureContext === false) {\n          message.href = document.location.href.replace(/^http:/, \"https:\");\n          message.innerHTML = \"WEBXR NEEDS HTTPS\";\n        } else {\n          message.href = \"https://immersiveweb.dev/\";\n          message.innerHTML = \"WEBXR NOT AVAILABLE\";\n        }\n        message.style.left = \"calc(50% - 90px)\";\n        message.style.width = \"180px\";\n        message.style.textDecoration = \"none\";\n        stylizeElement(message);\n        return message;\n      }\n    }\n  }]);\n  return ARButton;\n}();\nexport { ARButton };","map":{"version":3,"names":["ARButton","_classCallCheck","_createClass","key","value","createButton","renderer","sessionInit","arguments","length","undefined","button","document","createElement","showStartAR","domOverlay","overlay","style","display","body","appendChild","svg","createElementNS","setAttribute","position","right","top","addEventListener","currentSession","end","path","optionalFeatures","push","root","onSessionStarted","_x","_onSessionStarted","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee","session","wrap","_callee$","_context","prev","next","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","stop","removeEventListener","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","disableButton","showARNotSupported","stylizeElement","element","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration"],"sources":["C:\\Users\\Nayyu\\Desktop\\skibidai-public-build\\node_modules\\src\\webxr\\ARButton.ts"],"sourcesContent":["import { WebGLRenderer } from 'three'\n\nclass ARButton {\n  static createButton(renderer: WebGLRenderer, sessionInit: XRSessionInit = {}): HTMLButtonElement | HTMLAnchorElement {\n    const button = document.createElement('button')\n\n    function showStartAR(/*device*/): void {\n      if ((sessionInit as any).domOverlay === undefined) {\n        const overlay = document.createElement('div')\n        overlay.style.display = 'none'\n        document.body.appendChild(overlay)\n\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n        svg.setAttribute('width', '38px')\n        svg.setAttribute('height', '38px')\n        svg.style.position = 'absolute'\n        svg.style.right = '20px'\n        svg.style.top = '20px'\n        svg.addEventListener('click', function () {\n          currentSession?.end()\n        })\n        overlay.appendChild(svg)\n\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28')\n        path.setAttribute('stroke', '#fff')\n        path.setAttribute('stroke-width', '2px')\n        svg.appendChild(path)\n\n        if (sessionInit.optionalFeatures === undefined) {\n          sessionInit.optionalFeatures = []\n        }\n\n        sessionInit.optionalFeatures.push('dom-overlay')\n        ;(sessionInit as any).domOverlay = { root: overlay }\n      }\n\n      //\n\n      let currentSession: XRSession | null = null\n\n      async function onSessionStarted(session: XRSession): Promise<void> {\n        session.addEventListener('end', onSessionEnded)\n\n        renderer.xr.setReferenceSpaceType('local')\n\n        await renderer.xr.setSession(session as any)\n\n        button.textContent = 'STOP AR'\n        ;(sessionInit as any).domOverlay!.root.style.display = ''\n\n        currentSession = session\n      }\n\n      function onSessionEnded(/*event*/): void {\n        currentSession!.removeEventListener('end', onSessionEnded)\n\n        button.textContent = 'START AR'\n        ;(sessionInit as any).domOverlay!.root.style.display = 'none'\n\n        currentSession = null\n      }\n\n      //\n\n      button.style.display = ''\n\n      button.style.cursor = 'pointer'\n      button.style.left = 'calc(50% - 50px)'\n      button.style.width = '100px'\n\n      button.textContent = 'START AR'\n\n      button.onmouseenter = (): void => {\n        button.style.opacity = '1.0'\n      }\n\n      button.onmouseleave = (): void => {\n        button.style.opacity = '0.5'\n      }\n\n      button.onclick = (): void => {\n        if (currentSession === null) {\n          ;(navigator as Navigator).xr!.requestSession('immersive-ar', sessionInit).then(onSessionStarted)\n        } else {\n          currentSession.end()\n        }\n      }\n    }\n\n    function disableButton(): void {\n      button.style.display = ''\n\n      button.style.cursor = 'auto'\n      button.style.left = 'calc(50% - 75px)'\n      button.style.width = '150px'\n\n      button.onmouseenter = null\n      button.onmouseleave = null\n\n      button.onclick = null\n    }\n\n    function showARNotSupported(): void {\n      disableButton()\n\n      button.textContent = 'AR NOT SUPPORTED'\n    }\n\n    function stylizeElement(element: HTMLElement): void {\n      element.style.position = 'absolute'\n      element.style.bottom = '20px'\n      element.style.padding = '12px 6px'\n      element.style.border = '1px solid #fff'\n      element.style.borderRadius = '4px'\n      element.style.background = 'rgba(0,0,0,0.1)'\n      element.style.color = '#fff'\n      element.style.font = 'normal 13px sans-serif'\n      element.style.textAlign = 'center'\n      element.style.opacity = '0.5'\n      element.style.outline = 'none'\n      element.style.zIndex = '999'\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'ARButton'\n      button.style.display = 'none'\n\n      stylizeElement(button)\n\n      // Query for session mode\n      ;(navigator as Navigator)\n        .xr!.isSessionSupported('immersive-ar')\n        .then(function (supported: boolean) {\n          supported ? showStartAR() : showARNotSupported()\n        })\n        .catch(showARNotSupported)\n\n      return button\n    } else {\n      const message = document.createElement('a')\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:')\n        message.innerHTML = 'WEBXR NEEDS HTTPS' // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/'\n        message.innerHTML = 'WEBXR NOT AVAILABLE'\n      }\n\n      message.style.left = 'calc(50% - 90px)'\n      message.style.width = '180px'\n      message.style.textDecoration = 'none'\n\n      stylizeElement(message)\n\n      return message\n    }\n  }\n}\n\nexport { ARButton }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}